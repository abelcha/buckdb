const n="/**\n * Colorizes text for terminal based on absolute time of day.\n * Usage: console.log(timecolor(new Date(), \"log\"))\n */\nexport function timecolor(text: string, date = new Date()): string {\n  const s = (15 + 24 - date.getHours()) * 3600 + (60 - date.getMinutes()) * 60 + date.getSeconds();\n  let hue = (s / 86400) * 360;\n  // Modulate lightness for intra-hour variance: ±0.08 based on minute+second\n  const minsec = date.getMinutes() * 60 + date.getSeconds();\n  const baseL = 0.35;\n  const l = baseL + (.3 * (date.getMinutes() / 60))\n  // hue += Math.sin((minsec / 3600) * 5 * Math.PI) * 20;\n  const rgb = hslToRgb(hue, 1.9, l);\n  return `\\x1b[38;2;${rgb.join(\";\")}m${text}\\x1b[0m`;\n}\n\nfunction hslToRgb(h: number, s: number, l: number): [number, number, number] {\n  s = Math.max(0, Math.min(1, s));\n  l = Math.max(0, Math.min(1, l));\n  h = ((h % 360) + 360) % 360;\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n  const m = l - c / 2;\n  let r = 0, g = 0, b = 0;\n  if (h < 60) [r, g, b] = [c, x, 0];\n  else if (h < 120) [r, g, b] = [x, c, 0];\n  else if (h < 180) [r, g, b] = [0, c, x];\n  else if (h < 240) [r, g, b] = [0, x, c];\n  else if (h < 300) [r, g, b] = [x, 0, c];\n  else[r, g, b] = [c, 0, x];\n  return [\n    Math.round((r + m) * 255),\n    Math.round((g + m) * 255),\n    Math.round((b + m) * 255)\n  ];\n}\n\n/**\n * Display data vertically like DuckDB .columns mode\n * Each field becomes a row with values separated by pipes\n */\nexport function vtable(data: Record<string, any>[], maxWidth = 80): void {\n  if (!data || data.length === 0) return;\n  \n  const keys = Object.keys(data[0]);\n  const maxKeyLen = Math.max(...keys.map(k => k.length));\n  const valueWidth = Math.floor((maxWidth - maxKeyLen - 3) / data.length) - 3;\n  \n  keys.forEach(key => {\n    const values = data.map(row => {\n      const val = row[key];\n      const str = val === null || val === undefined ? '' : String(val);\n      return str.length > valueWidth ? str.slice(0, valueWidth - 1) + '…' : str;\n    });\n    \n    const keyPart = key.padEnd(maxKeyLen) + ': ';\n    const valuePart = values.join(' | ');\n    console.log(keyPart + valuePart);\n  });\n}\n\nif (import.meta.main) {\n  for (let h = 0; h < 24; ++h) {\n    for (let m = 0; m < 60; m += 5) {\n      const d = new Date(2000, 0, 1, h, m, 0, 0);\n      const label = `${h.toString().padStart(2, \"0\")}:${m.toString().padStart(2, \"0\")}`;\n      // eslint-disable-next-line no-console\n      console.log(timecolor(label, d));\n    }\n  }\n}\n";export{n as default};
