var m;(function(e){e[e["Null"]=0]="Null";e[e["Backspace"]=8]="Backspace";e[e["Tab"]=9]="Tab";e[e["LineFeed"]=10]="LineFeed";e[e["CarriageReturn"]=13]="CarriageReturn";e[e["Space"]=32]="Space";e[e["ExclamationMark"]=33]="ExclamationMark";e[e["DoubleQuote"]=34]="DoubleQuote";e[e["Hash"]=35]="Hash";e[e["DollarSign"]=36]="DollarSign";e[e["PercentSign"]=37]="PercentSign";e[e["Ampersand"]=38]="Ampersand";e[e["SingleQuote"]=39]="SingleQuote";e[e["OpenParen"]=40]="OpenParen";e[e["CloseParen"]=41]="CloseParen";e[e["Asterisk"]=42]="Asterisk";e[e["Plus"]=43]="Plus";e[e["Comma"]=44]="Comma";e[e["Dash"]=45]="Dash";e[e["Period"]=46]="Period";e[e["Slash"]=47]="Slash";e[e["Digit0"]=48]="Digit0";e[e["Digit1"]=49]="Digit1";e[e["Digit2"]=50]="Digit2";e[e["Digit3"]=51]="Digit3";e[e["Digit4"]=52]="Digit4";e[e["Digit5"]=53]="Digit5";e[e["Digit6"]=54]="Digit6";e[e["Digit7"]=55]="Digit7";e[e["Digit8"]=56]="Digit8";e[e["Digit9"]=57]="Digit9";e[e["Colon"]=58]="Colon";e[e["Semicolon"]=59]="Semicolon";e[e["LessThan"]=60]="LessThan";e[e["Equals"]=61]="Equals";e[e["GreaterThan"]=62]="GreaterThan";e[e["QuestionMark"]=63]="QuestionMark";e[e["AtSign"]=64]="AtSign";e[e["A"]=65]="A";e[e["B"]=66]="B";e[e["C"]=67]="C";e[e["D"]=68]="D";e[e["E"]=69]="E";e[e["F"]=70]="F";e[e["G"]=71]="G";e[e["H"]=72]="H";e[e["I"]=73]="I";e[e["J"]=74]="J";e[e["K"]=75]="K";e[e["L"]=76]="L";e[e["M"]=77]="M";e[e["N"]=78]="N";e[e["O"]=79]="O";e[e["P"]=80]="P";e[e["Q"]=81]="Q";e[e["R"]=82]="R";e[e["S"]=83]="S";e[e["T"]=84]="T";e[e["U"]=85]="U";e[e["V"]=86]="V";e[e["W"]=87]="W";e[e["X"]=88]="X";e[e["Y"]=89]="Y";e[e["Z"]=90]="Z";e[e["OpenSquareBracket"]=91]="OpenSquareBracket";e[e["Backslash"]=92]="Backslash";e[e["CloseSquareBracket"]=93]="CloseSquareBracket";e[e["Caret"]=94]="Caret";e[e["Underline"]=95]="Underline";e[e["BackTick"]=96]="BackTick";e[e["a"]=97]="a";e[e["b"]=98]="b";e[e["c"]=99]="c";e[e["d"]=100]="d";e[e["e"]=101]="e";e[e["f"]=102]="f";e[e["g"]=103]="g";e[e["h"]=104]="h";e[e["i"]=105]="i";e[e["j"]=106]="j";e[e["k"]=107]="k";e[e["l"]=108]="l";e[e["m"]=109]="m";e[e["n"]=110]="n";e[e["o"]=111]="o";e[e["p"]=112]="p";e[e["q"]=113]="q";e[e["r"]=114]="r";e[e["s"]=115]="s";e[e["t"]=116]="t";e[e["u"]=117]="u";e[e["v"]=118]="v";e[e["w"]=119]="w";e[e["x"]=120]="x";e[e["y"]=121]="y";e[e["z"]=122]="z";e[e["OpenCurlyBrace"]=123]="OpenCurlyBrace";e[e["Pipe"]=124]="Pipe";e[e["CloseCurlyBrace"]=125]="CloseCurlyBrace";e[e["Tilde"]=126]="Tilde";e[e["NoBreakSpace"]=160]="NoBreakSpace";e[e["U_Combining_Grave_Accent"]=768]="U_Combining_Grave_Accent";e[e["U_Combining_Acute_Accent"]=769]="U_Combining_Acute_Accent";e[e["U_Combining_Circumflex_Accent"]=770]="U_Combining_Circumflex_Accent";e[e["U_Combining_Tilde"]=771]="U_Combining_Tilde";e[e["U_Combining_Macron"]=772]="U_Combining_Macron";e[e["U_Combining_Overline"]=773]="U_Combining_Overline";e[e["U_Combining_Breve"]=774]="U_Combining_Breve";e[e["U_Combining_Dot_Above"]=775]="U_Combining_Dot_Above";e[e["U_Combining_Diaeresis"]=776]="U_Combining_Diaeresis";e[e["U_Combining_Hook_Above"]=777]="U_Combining_Hook_Above";e[e["U_Combining_Ring_Above"]=778]="U_Combining_Ring_Above";e[e["U_Combining_Double_Acute_Accent"]=779]="U_Combining_Double_Acute_Accent";e[e["U_Combining_Caron"]=780]="U_Combining_Caron";e[e["U_Combining_Vertical_Line_Above"]=781]="U_Combining_Vertical_Line_Above";e[e["U_Combining_Double_Vertical_Line_Above"]=782]="U_Combining_Double_Vertical_Line_Above";e[e["U_Combining_Double_Grave_Accent"]=783]="U_Combining_Double_Grave_Accent";e[e["U_Combining_Candrabindu"]=784]="U_Combining_Candrabindu";e[e["U_Combining_Inverted_Breve"]=785]="U_Combining_Inverted_Breve";e[e["U_Combining_Turned_Comma_Above"]=786]="U_Combining_Turned_Comma_Above";e[e["U_Combining_Comma_Above"]=787]="U_Combining_Comma_Above";e[e["U_Combining_Reversed_Comma_Above"]=788]="U_Combining_Reversed_Comma_Above";e[e["U_Combining_Comma_Above_Right"]=789]="U_Combining_Comma_Above_Right";e[e["U_Combining_Grave_Accent_Below"]=790]="U_Combining_Grave_Accent_Below";e[e["U_Combining_Acute_Accent_Below"]=791]="U_Combining_Acute_Accent_Below";e[e["U_Combining_Left_Tack_Below"]=792]="U_Combining_Left_Tack_Below";e[e["U_Combining_Right_Tack_Below"]=793]="U_Combining_Right_Tack_Below";e[e["U_Combining_Left_Angle_Above"]=794]="U_Combining_Left_Angle_Above";e[e["U_Combining_Horn"]=795]="U_Combining_Horn";e[e["U_Combining_Left_Half_Ring_Below"]=796]="U_Combining_Left_Half_Ring_Below";e[e["U_Combining_Up_Tack_Below"]=797]="U_Combining_Up_Tack_Below";e[e["U_Combining_Down_Tack_Below"]=798]="U_Combining_Down_Tack_Below";e[e["U_Combining_Plus_Sign_Below"]=799]="U_Combining_Plus_Sign_Below";e[e["U_Combining_Minus_Sign_Below"]=800]="U_Combining_Minus_Sign_Below";e[e["U_Combining_Palatalized_Hook_Below"]=801]="U_Combining_Palatalized_Hook_Below";e[e["U_Combining_Retroflex_Hook_Below"]=802]="U_Combining_Retroflex_Hook_Below";e[e["U_Combining_Dot_Below"]=803]="U_Combining_Dot_Below";e[e["U_Combining_Diaeresis_Below"]=804]="U_Combining_Diaeresis_Below";e[e["U_Combining_Ring_Below"]=805]="U_Combining_Ring_Below";e[e["U_Combining_Comma_Below"]=806]="U_Combining_Comma_Below";e[e["U_Combining_Cedilla"]=807]="U_Combining_Cedilla";e[e["U_Combining_Ogonek"]=808]="U_Combining_Ogonek";e[e["U_Combining_Vertical_Line_Below"]=809]="U_Combining_Vertical_Line_Below";e[e["U_Combining_Bridge_Below"]=810]="U_Combining_Bridge_Below";e[e["U_Combining_Inverted_Double_Arch_Below"]=811]="U_Combining_Inverted_Double_Arch_Below";e[e["U_Combining_Caron_Below"]=812]="U_Combining_Caron_Below";e[e["U_Combining_Circumflex_Accent_Below"]=813]="U_Combining_Circumflex_Accent_Below";e[e["U_Combining_Breve_Below"]=814]="U_Combining_Breve_Below";e[e["U_Combining_Inverted_Breve_Below"]=815]="U_Combining_Inverted_Breve_Below";e[e["U_Combining_Tilde_Below"]=816]="U_Combining_Tilde_Below";e[e["U_Combining_Macron_Below"]=817]="U_Combining_Macron_Below";e[e["U_Combining_Low_Line"]=818]="U_Combining_Low_Line";e[e["U_Combining_Double_Low_Line"]=819]="U_Combining_Double_Low_Line";e[e["U_Combining_Tilde_Overlay"]=820]="U_Combining_Tilde_Overlay";e[e["U_Combining_Short_Stroke_Overlay"]=821]="U_Combining_Short_Stroke_Overlay";e[e["U_Combining_Long_Stroke_Overlay"]=822]="U_Combining_Long_Stroke_Overlay";e[e["U_Combining_Short_Solidus_Overlay"]=823]="U_Combining_Short_Solidus_Overlay";e[e["U_Combining_Long_Solidus_Overlay"]=824]="U_Combining_Long_Solidus_Overlay";e[e["U_Combining_Right_Half_Ring_Below"]=825]="U_Combining_Right_Half_Ring_Below";e[e["U_Combining_Inverted_Bridge_Below"]=826]="U_Combining_Inverted_Bridge_Below";e[e["U_Combining_Square_Below"]=827]="U_Combining_Square_Below";e[e["U_Combining_Seagull_Below"]=828]="U_Combining_Seagull_Below";e[e["U_Combining_X_Above"]=829]="U_Combining_X_Above";e[e["U_Combining_Vertical_Tilde"]=830]="U_Combining_Vertical_Tilde";e[e["U_Combining_Double_Overline"]=831]="U_Combining_Double_Overline";e[e["U_Combining_Grave_Tone_Mark"]=832]="U_Combining_Grave_Tone_Mark";e[e["U_Combining_Acute_Tone_Mark"]=833]="U_Combining_Acute_Tone_Mark";e[e["U_Combining_Greek_Perispomeni"]=834]="U_Combining_Greek_Perispomeni";e[e["U_Combining_Greek_Koronis"]=835]="U_Combining_Greek_Koronis";e[e["U_Combining_Greek_Dialytika_Tonos"]=836]="U_Combining_Greek_Dialytika_Tonos";e[e["U_Combining_Greek_Ypogegrammeni"]=837]="U_Combining_Greek_Ypogegrammeni";e[e["U_Combining_Bridge_Above"]=838]="U_Combining_Bridge_Above";e[e["U_Combining_Equals_Sign_Below"]=839]="U_Combining_Equals_Sign_Below";e[e["U_Combining_Double_Vertical_Line_Below"]=840]="U_Combining_Double_Vertical_Line_Below";e[e["U_Combining_Left_Angle_Below"]=841]="U_Combining_Left_Angle_Below";e[e["U_Combining_Not_Tilde_Above"]=842]="U_Combining_Not_Tilde_Above";e[e["U_Combining_Homothetic_Above"]=843]="U_Combining_Homothetic_Above";e[e["U_Combining_Almost_Equal_To_Above"]=844]="U_Combining_Almost_Equal_To_Above";e[e["U_Combining_Left_Right_Arrow_Below"]=845]="U_Combining_Left_Right_Arrow_Below";e[e["U_Combining_Upwards_Arrow_Below"]=846]="U_Combining_Upwards_Arrow_Below";e[e["U_Combining_Grapheme_Joiner"]=847]="U_Combining_Grapheme_Joiner";e[e["U_Combining_Right_Arrowhead_Above"]=848]="U_Combining_Right_Arrowhead_Above";e[e["U_Combining_Left_Half_Ring_Above"]=849]="U_Combining_Left_Half_Ring_Above";e[e["U_Combining_Fermata"]=850]="U_Combining_Fermata";e[e["U_Combining_X_Below"]=851]="U_Combining_X_Below";e[e["U_Combining_Left_Arrowhead_Below"]=852]="U_Combining_Left_Arrowhead_Below";e[e["U_Combining_Right_Arrowhead_Below"]=853]="U_Combining_Right_Arrowhead_Below";e[e["U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below"]=854]="U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below";e[e["U_Combining_Right_Half_Ring_Above"]=855]="U_Combining_Right_Half_Ring_Above";e[e["U_Combining_Dot_Above_Right"]=856]="U_Combining_Dot_Above_Right";e[e["U_Combining_Asterisk_Below"]=857]="U_Combining_Asterisk_Below";e[e["U_Combining_Double_Ring_Below"]=858]="U_Combining_Double_Ring_Below";e[e["U_Combining_Zigzag_Above"]=859]="U_Combining_Zigzag_Above";e[e["U_Combining_Double_Breve_Below"]=860]="U_Combining_Double_Breve_Below";e[e["U_Combining_Double_Breve"]=861]="U_Combining_Double_Breve";e[e["U_Combining_Double_Macron"]=862]="U_Combining_Double_Macron";e[e["U_Combining_Double_Macron_Below"]=863]="U_Combining_Double_Macron_Below";e[e["U_Combining_Double_Tilde"]=864]="U_Combining_Double_Tilde";e[e["U_Combining_Double_Inverted_Breve"]=865]="U_Combining_Double_Inverted_Breve";e[e["U_Combining_Double_Rightwards_Arrow_Below"]=866]="U_Combining_Double_Rightwards_Arrow_Below";e[e["U_Combining_Latin_Small_Letter_A"]=867]="U_Combining_Latin_Small_Letter_A";e[e["U_Combining_Latin_Small_Letter_E"]=868]="U_Combining_Latin_Small_Letter_E";e[e["U_Combining_Latin_Small_Letter_I"]=869]="U_Combining_Latin_Small_Letter_I";e[e["U_Combining_Latin_Small_Letter_O"]=870]="U_Combining_Latin_Small_Letter_O";e[e["U_Combining_Latin_Small_Letter_U"]=871]="U_Combining_Latin_Small_Letter_U";e[e["U_Combining_Latin_Small_Letter_C"]=872]="U_Combining_Latin_Small_Letter_C";e[e["U_Combining_Latin_Small_Letter_D"]=873]="U_Combining_Latin_Small_Letter_D";e[e["U_Combining_Latin_Small_Letter_H"]=874]="U_Combining_Latin_Small_Letter_H";e[e["U_Combining_Latin_Small_Letter_M"]=875]="U_Combining_Latin_Small_Letter_M";e[e["U_Combining_Latin_Small_Letter_R"]=876]="U_Combining_Latin_Small_Letter_R";e[e["U_Combining_Latin_Small_Letter_T"]=877]="U_Combining_Latin_Small_Letter_T";e[e["U_Combining_Latin_Small_Letter_V"]=878]="U_Combining_Latin_Small_Letter_V";e[e["U_Combining_Latin_Small_Letter_X"]=879]="U_Combining_Latin_Small_Letter_X";e[e["LINE_SEPARATOR"]=8232]="LINE_SEPARATOR";e[e["PARAGRAPH_SEPARATOR"]=8233]="PARAGRAPH_SEPARATOR";e[e["NEXT_LINE"]=133]="NEXT_LINE";e[e["U_CIRCUMFLEX"]=94]="U_CIRCUMFLEX";e[e["U_GRAVE_ACCENT"]=96]="U_GRAVE_ACCENT";e[e["U_DIAERESIS"]=168]="U_DIAERESIS";e[e["U_MACRON"]=175]="U_MACRON";e[e["U_ACUTE_ACCENT"]=180]="U_ACUTE_ACCENT";e[e["U_CEDILLA"]=184]="U_CEDILLA";e[e["U_MODIFIER_LETTER_LEFT_ARROWHEAD"]=706]="U_MODIFIER_LETTER_LEFT_ARROWHEAD";e[e["U_MODIFIER_LETTER_RIGHT_ARROWHEAD"]=707]="U_MODIFIER_LETTER_RIGHT_ARROWHEAD";e[e["U_MODIFIER_LETTER_UP_ARROWHEAD"]=708]="U_MODIFIER_LETTER_UP_ARROWHEAD";e[e["U_MODIFIER_LETTER_DOWN_ARROWHEAD"]=709]="U_MODIFIER_LETTER_DOWN_ARROWHEAD";e[e["U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING"]=722]="U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING";e[e["U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING"]=723]="U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING";e[e["U_MODIFIER_LETTER_UP_TACK"]=724]="U_MODIFIER_LETTER_UP_TACK";e[e["U_MODIFIER_LETTER_DOWN_TACK"]=725]="U_MODIFIER_LETTER_DOWN_TACK";e[e["U_MODIFIER_LETTER_PLUS_SIGN"]=726]="U_MODIFIER_LETTER_PLUS_SIGN";e[e["U_MODIFIER_LETTER_MINUS_SIGN"]=727]="U_MODIFIER_LETTER_MINUS_SIGN";e[e["U_BREVE"]=728]="U_BREVE";e[e["U_DOT_ABOVE"]=729]="U_DOT_ABOVE";e[e["U_RING_ABOVE"]=730]="U_RING_ABOVE";e[e["U_OGONEK"]=731]="U_OGONEK";e[e["U_SMALL_TILDE"]=732]="U_SMALL_TILDE";e[e["U_DOUBLE_ACUTE_ACCENT"]=733]="U_DOUBLE_ACUTE_ACCENT";e[e["U_MODIFIER_LETTER_RHOTIC_HOOK"]=734]="U_MODIFIER_LETTER_RHOTIC_HOOK";e[e["U_MODIFIER_LETTER_CROSS_ACCENT"]=735]="U_MODIFIER_LETTER_CROSS_ACCENT";e[e["U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR"]=741]="U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR";e[e["U_MODIFIER_LETTER_HIGH_TONE_BAR"]=742]="U_MODIFIER_LETTER_HIGH_TONE_BAR";e[e["U_MODIFIER_LETTER_MID_TONE_BAR"]=743]="U_MODIFIER_LETTER_MID_TONE_BAR";e[e["U_MODIFIER_LETTER_LOW_TONE_BAR"]=744]="U_MODIFIER_LETTER_LOW_TONE_BAR";e[e["U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR"]=745]="U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR";e[e["U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK"]=746]="U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK";e[e["U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK"]=747]="U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK";e[e["U_MODIFIER_LETTER_UNASPIRATED"]=749]="U_MODIFIER_LETTER_UNASPIRATED";e[e["U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD"]=751]="U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD";e[e["U_MODIFIER_LETTER_LOW_UP_ARROWHEAD"]=752]="U_MODIFIER_LETTER_LOW_UP_ARROWHEAD";e[e["U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD"]=753]="U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD";e[e["U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD"]=754]="U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD";e[e["U_MODIFIER_LETTER_LOW_RING"]=755]="U_MODIFIER_LETTER_LOW_RING";e[e["U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT"]=756]="U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT";e[e["U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT"]=757]="U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT";e[e["U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT"]=758]="U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT";e[e["U_MODIFIER_LETTER_LOW_TILDE"]=759]="U_MODIFIER_LETTER_LOW_TILDE";e[e["U_MODIFIER_LETTER_RAISED_COLON"]=760]="U_MODIFIER_LETTER_RAISED_COLON";e[e["U_MODIFIER_LETTER_BEGIN_HIGH_TONE"]=761]="U_MODIFIER_LETTER_BEGIN_HIGH_TONE";e[e["U_MODIFIER_LETTER_END_HIGH_TONE"]=762]="U_MODIFIER_LETTER_END_HIGH_TONE";e[e["U_MODIFIER_LETTER_BEGIN_LOW_TONE"]=763]="U_MODIFIER_LETTER_BEGIN_LOW_TONE";e[e["U_MODIFIER_LETTER_END_LOW_TONE"]=764]="U_MODIFIER_LETTER_END_LOW_TONE";e[e["U_MODIFIER_LETTER_SHELF"]=765]="U_MODIFIER_LETTER_SHELF";e[e["U_MODIFIER_LETTER_OPEN_SHELF"]=766]="U_MODIFIER_LETTER_OPEN_SHELF";e[e["U_MODIFIER_LETTER_LOW_LEFT_ARROW"]=767]="U_MODIFIER_LETTER_LOW_LEFT_ARROW";e[e["U_GREEK_LOWER_NUMERAL_SIGN"]=885]="U_GREEK_LOWER_NUMERAL_SIGN";e[e["U_GREEK_TONOS"]=900]="U_GREEK_TONOS";e[e["U_GREEK_DIALYTIKA_TONOS"]=901]="U_GREEK_DIALYTIKA_TONOS";e[e["U_GREEK_KORONIS"]=8125]="U_GREEK_KORONIS";e[e["U_GREEK_PSILI"]=8127]="U_GREEK_PSILI";e[e["U_GREEK_PERISPOMENI"]=8128]="U_GREEK_PERISPOMENI";e[e["U_GREEK_DIALYTIKA_AND_PERISPOMENI"]=8129]="U_GREEK_DIALYTIKA_AND_PERISPOMENI";e[e["U_GREEK_PSILI_AND_VARIA"]=8141]="U_GREEK_PSILI_AND_VARIA";e[e["U_GREEK_PSILI_AND_OXIA"]=8142]="U_GREEK_PSILI_AND_OXIA";e[e["U_GREEK_PSILI_AND_PERISPOMENI"]=8143]="U_GREEK_PSILI_AND_PERISPOMENI";e[e["U_GREEK_DASIA_AND_VARIA"]=8157]="U_GREEK_DASIA_AND_VARIA";e[e["U_GREEK_DASIA_AND_OXIA"]=8158]="U_GREEK_DASIA_AND_OXIA";e[e["U_GREEK_DASIA_AND_PERISPOMENI"]=8159]="U_GREEK_DASIA_AND_PERISPOMENI";e[e["U_GREEK_DIALYTIKA_AND_VARIA"]=8173]="U_GREEK_DIALYTIKA_AND_VARIA";e[e["U_GREEK_DIALYTIKA_AND_OXIA"]=8174]="U_GREEK_DIALYTIKA_AND_OXIA";e[e["U_GREEK_VARIA"]=8175]="U_GREEK_VARIA";e[e["U_GREEK_OXIA"]=8189]="U_GREEK_OXIA";e[e["U_GREEK_DASIA"]=8190]="U_GREEK_DASIA";e[e["U_IDEOGRAPHIC_FULL_STOP"]=12290]="U_IDEOGRAPHIC_FULL_STOP";e[e["U_LEFT_CORNER_BRACKET"]=12300]="U_LEFT_CORNER_BRACKET";e[e["U_RIGHT_CORNER_BRACKET"]=12301]="U_RIGHT_CORNER_BRACKET";e[e["U_LEFT_BLACK_LENTICULAR_BRACKET"]=12304]="U_LEFT_BLACK_LENTICULAR_BRACKET";e[e["U_RIGHT_BLACK_LENTICULAR_BRACKET"]=12305]="U_RIGHT_BLACK_LENTICULAR_BRACKET";e[e["U_OVERLINE"]=8254]="U_OVERLINE";e[e["UTF8_BOM"]=65279]="UTF8_BOM";e[e["U_FULLWIDTH_SEMICOLON"]=65307]="U_FULLWIDTH_SEMICOLON";e[e["U_FULLWIDTH_COMMA"]=65292]="U_FULLWIDTH_COMMA"})(m||(m={}));var J1;(function(e){e[e["Uri"]=1]="Uri";e[e["Regexp"]=2]="Regexp";e[e["ScmResource"]=3]="ScmResource";e[e["ScmResourceGroup"]=4]="ScmResourceGroup";e[e["ScmProvider"]=5]="ScmProvider";e[e["CommentController"]=6]="CommentController";e[e["CommentThread"]=7]="CommentThread";e[e["CommentThreadInstance"]=8]="CommentThreadInstance";e[e["CommentThreadReply"]=9]="CommentThreadReply";e[e["CommentNode"]=10]="CommentNode";e[e["CommentThreadNode"]=11]="CommentThreadNode";e[e["TimelineActionContext"]=12]="TimelineActionContext";e[e["NotebookCellActionContext"]=13]="NotebookCellActionContext";e[e["NotebookActionContext"]=14]="NotebookActionContext";e[e["TerminalContext"]=15]="TerminalContext";e[e["TestItemContext"]=16]="TestItemContext";e[e["Date"]=17]="Date";e[e["TestMessageMenuArgs"]=18]="TestMessageMenuArgs";e[e["ChatViewContext"]=19]="ChatViewContext";e[e["LanguageModelToolResult"]=20]="LanguageModelToolResult";e[e["LanguageModelTextPart"]=21]="LanguageModelTextPart";e[e["LanguageModelPromptTsxPart"]=22]="LanguageModelPromptTsxPart";e[e["LanguageModelDataPart"]=23]="LanguageModelDataPart";e[e["LanguageModelExtraDataPart"]=24]="LanguageModelExtraDataPart"})(J1||(J1={}));function Me(){return globalThis._VSCODE_NLS_LANGUAGE}Me()==="pseudo"||typeof document!=="undefined"&&document.location&&typeof document.location.hash==="string"&&document.location.hash.indexOf("pseudo=true")>=0;const d1="en";let v1=false;let N1=false;let x1=false;let xe=false;let le=false;let ke=false;let y1=void 0;let k1=d1;let me=d1;let st=void 0;let s1=void 0;const r1=globalThis;let z=void 0;if(typeof r1.vscode!=="undefined"&&typeof r1.vscode.process!=="undefined"){z=r1.vscode.process}else if(typeof process!=="undefined"&&typeof process?.versions?.node==="string"){z=process}const rt=typeof z?.versions?.electron==="string";const ot=rt&&z?.type==="renderer";if(typeof z==="object"){v1=z.platform==="win32";N1=z.platform==="darwin";x1=z.platform==="linux";x1&&!!z.env["SNAP"]&&!!z.env["SNAP_REVISION"];!!z.env["CI"]||!!z.env["BUILD_ARTIFACTSTAGINGDIRECTORY"];y1=d1;k1=d1;const e=z.env["VSCODE_NLS_CONFIG"];if(e){try{const t=JSON.parse(e);y1=t.userLocale;me=t.osLocale;k1=t.resolvedLanguage||d1;st=t.languagePack?.translationsConfigFile}catch(t){}}xe=true}else if(typeof navigator==="object"&&!ot){s1=navigator.userAgent;v1=s1.indexOf("Windows")>=0;N1=s1.indexOf("Macintosh")>=0;ke=(s1.indexOf("Macintosh")>=0||s1.indexOf("iPad")>=0||s1.indexOf("iPhone")>=0)&&!!navigator.maxTouchPoints&&navigator.maxTouchPoints>0;x1=s1.indexOf("Linux")>=0;s1?.indexOf("Mobi")>=0;le=true;k1=Me()||d1;y1=navigator.language.toLowerCase();me=y1}else{console.error("Unable to resolve platform.")}var b1;(function(e){e[e["Web"]=0]="Web";e[e["Mac"]=1]="Mac";e[e["Linux"]=2]="Linux";e[e["Windows"]=3]="Windows"})(b1||(b1={}));b1.Web;if(N1){b1.Mac}else if(v1){b1.Windows}else if(x1){b1.Linux}const f1=v1;const lt=N1;const ut=xe;const _t=le;const ct=le&&typeof r1.importScripts==="function";const ft=ct?r1.origin:void 0;const C=s1;const o1=k1;var he;(function(e){function t(){return o1}e.value=t;function n(){if(o1.length===2){return o1==="en"}else if(o1.length>=3){return o1[0]==="e"&&o1[1]==="n"&&o1[2]==="-"}else{return false}}e.isDefaultVariant=n;function i(){return o1==="en"}e.isDefault=i})(he||(he={}));const at=typeof r1.postMessage==="function"&&!r1.importScripts;(()=>{if(at){const e=[];r1.addEventListener("message",n=>{if(n.data&&n.data.vscodeScheduleAsyncWork){for(let i=0,s=e.length;i<s;i++){const r=e[i];if(r.id===n.data.vscodeScheduleAsyncWork){e.splice(i,1);r.callback();return}}}});let t=0;return n=>{const i=++t;e.push({id:i,callback:n});r1.postMessage({vscodeScheduleAsyncWork:i},"*")}}return e=>setTimeout(e)})();var w1;(function(e){e[e["Windows"]=1]="Windows";e[e["Macintosh"]=2]="Macintosh";e[e["Linux"]=3]="Linux"})(w1||(w1={}));N1||ke?w1.Macintosh:v1?w1.Windows:w1.Linux;const mt=!!(C&&C.indexOf("Chrome")>=0);!!(C&&C.indexOf("Firefox")>=0);!!(!mt&&(C&&C.indexOf("Safari")>=0));!!(C&&C.indexOf("Edg/")>=0);!!(C&&C.indexOf("Android")>=0);var ge={};let _1;const Q1=globalThis.vscode;if(typeof Q1!=="undefined"&&typeof Q1.process!=="undefined"){const e=Q1.process;_1={get platform(){return e.platform},get arch(){return e.arch},get env(){return e.env},cwd(){return e.cwd()}}}else if(typeof process!=="undefined"&&typeof process?.versions?.node==="string"){_1={get platform(){return process.platform},get arch(){return process.arch},get env(){return ge},cwd(){return ge["VSCODE_CWD"]||process.cwd()}}}else{_1={get platform(){return f1?"win32":lt?"darwin":"linux"},get arch(){return void 0},get env(){return{}},cwd(){return"/"}}}const $1=_1.cwd;const ht=_1.env;const gt=_1.platform;_1.arch;const dt=65;const Et=97;const bt=90;const Lt=122;const c1=46;const x=47;const G=92;const t1=58;const At=63;class Be extends Error{constructor(t,n,i){let s;if(typeof n==="string"&&n.indexOf("not ")===0){s="must not be";n=n.replace(/^not /,"")}else{s="must be"}const r=t.indexOf(".")!==-1?"property":"argument";let o=`The "${t}" ${r} ${s} of type ${n}`;o+=`. Received type ${typeof i}`;super(o);this.code="ERR_INVALID_ARG_TYPE"}}function Rt(e,t){if(e===null||typeof e!=="object"){throw new Be(t,"Object",e)}}function y(e,t){if(typeof e!=="string"){throw new Be(t,"string",e)}}const Z=gt==="win32";function A(e){return e===x||e===G}function C1(e){return e===x}function n1(e){return e>=dt&&e<=bt||e>=Et&&e<=Lt}function H1(e,t,n,i){let s="";let r=0;let o=-1;let l=0;let u=0;for(let _=0;_<=e.length;++_){if(_<e.length){u=e.charCodeAt(_)}else if(i(u)){break}else{u=x}if(i(u)){if(o===_-1||l===1);else if(l===2){if(s.length<2||r!==2||s.charCodeAt(s.length-1)!==c1||s.charCodeAt(s.length-2)!==c1){if(s.length>2){const f=s.lastIndexOf(n);if(f===-1){s="";r=0}else{s=s.slice(0,f);r=s.length-1-s.lastIndexOf(n)}o=_;l=0;continue}else if(s.length!==0){s="";r=0;o=_;l=0;continue}}if(t){s+=s.length>0?`${n}..`:"..";r=2}}else{if(s.length>0){s+=`${n}${e.slice(o+1,_)}`}else{s=e.slice(o+1,_)}r=_-o-1}o=_;l=0}else if(u===c1&&l!==-1){++l}else{l=-1}}return s}function Ut(e){return e?`${e[0]==="."?"":"."}${e}`:""}function Fe(e,t){Rt(t,"pathObject");const n=t.dir||t.root;const i=t.base||`${t.name||""}${Ut(t.ext)}`;if(!n){return i}return n===t.root?`${n}${i}`:`${n}${e}${i}`}const B={resolve(...e){let t="";let n="";let i=false;for(let s=e.length-1;s>=-1;s--){let r;if(s>=0){r=e[s];y(r,`paths[${s}]`);if(r.length===0){continue}}else if(t.length===0){r=$1()}else{r=ht[`=${t}`]||$1();if(r===void 0||r.slice(0,2).toLowerCase()!==t.toLowerCase()&&r.charCodeAt(2)===G){r=`${t}\\`}}const o=r.length;let l=0;let u="";let _=false;const f=r.charCodeAt(0);if(o===1){if(A(f)){l=1;_=true}}else if(A(f)){_=true;if(A(r.charCodeAt(1))){let c=2;let d=c;while(c<o&&!A(r.charCodeAt(c))){c++}if(c<o&&c!==d){const O=r.slice(d,c);d=c;while(c<o&&A(r.charCodeAt(c))){c++}if(c<o&&c!==d){d=c;while(c<o&&!A(r.charCodeAt(c))){c++}if(c===o||c!==d){u=`\\\\${O}\\${r.slice(d,c)}`;l=c}}}}else{l=1}}else if(n1(f)&&r.charCodeAt(1)===t1){u=r.slice(0,2);l=2;if(o>2&&A(r.charCodeAt(2))){_=true;l=3}}if(u.length>0){if(t.length>0){if(u.toLowerCase()!==t.toLowerCase()){continue}}else{t=u}}if(i){if(t.length>0){break}}else{n=`${r.slice(l)}\\${n}`;i=_;if(_&&t.length>0){break}}}n=H1(n,!i,"\\",A);return i?`${t}\\${n}`:`${t}${n}`||"."},normalize(e){y(e,"path");const t=e.length;if(t===0){return"."}let n=0;let i;let s=false;const r=e.charCodeAt(0);if(t===1){return C1(r)?"\\":e}if(A(r)){s=true;if(A(e.charCodeAt(1))){let l=2;let u=l;while(l<t&&!A(e.charCodeAt(l))){l++}if(l<t&&l!==u){const _=e.slice(u,l);u=l;while(l<t&&A(e.charCodeAt(l))){l++}if(l<t&&l!==u){u=l;while(l<t&&!A(e.charCodeAt(l))){l++}if(l===t){return`\\\\${_}\\${e.slice(u)}\\`}if(l!==u){i=`\\\\${_}\\${e.slice(u,l)}`;n=l}}}}else{n=1}}else if(n1(r)&&e.charCodeAt(1)===t1){i=e.slice(0,2);n=2;if(t>2&&A(e.charCodeAt(2))){s=true;n=3}}let o=n<t?H1(e.slice(n),!s,"\\",A):"";if(o.length===0&&!s){o="."}if(o.length>0&&A(e.charCodeAt(t-1))){o+="\\"}if(!s&&i===void 0&&e.includes(":")){if(o.length>=2&&n1(o.charCodeAt(0))&&o.charCodeAt(1)===t1){return`.\\${o}`}let l=e.indexOf(":");do{if(l===t-1||A(e.charCodeAt(l+1))){return`.\\${o}`}}while((l=e.indexOf(":",l+1))!==-1)}if(i===void 0){return s?`\\${o}`:o}return s?`${i}\\${o}`:`${i}${o}`},isAbsolute(e){y(e,"path");const t=e.length;if(t===0){return false}const n=e.charCodeAt(0);return A(n)||t>2&&n1(n)&&e.charCodeAt(1)===t1&&A(e.charCodeAt(2))},join(...e){if(e.length===0){return"."}let t;let n;for(let r=0;r<e.length;++r){const o=e[r];y(o,"path");if(o.length>0){if(t===void 0){t=n=o}else{t+=`\\${o}`}}}if(t===void 0){return"."}let i=true;let s=0;if(typeof n==="string"&&A(n.charCodeAt(0))){++s;const r=n.length;if(r>1&&A(n.charCodeAt(1))){++s;if(r>2){if(A(n.charCodeAt(2))){++s}else{i=false}}}}if(i){while(s<t.length&&A(t.charCodeAt(s))){s++}if(s>=2){t=`\\${t.slice(s)}`}}return B.normalize(t)},relative(e,t){y(e,"from");y(t,"to");if(e===t){return""}const n=B.resolve(e);const i=B.resolve(t);if(n===i){return""}e=n.toLowerCase();t=i.toLowerCase();if(e===t){return""}if(n.length!==e.length||i.length!==t.length){const v=n.split("\\");const F=i.split("\\");if(v[v.length-1]===""){v.pop()}if(F[F.length-1]===""){F.pop()}const $=v.length;const e1=F.length;const X=$<e1?$:e1;let H;for(H=0;H<X;H++){if(v[H].toLowerCase()!==F[H].toLowerCase()){break}}if(H===0){return i}else if(H===X){if(e1>X){return F.slice(H).join("\\")}if($>X){return"..\\".repeat($-1-H)+".."}return""}return"..\\".repeat($-H)+F.slice(H).join("\\")}let s=0;while(s<e.length&&e.charCodeAt(s)===G){s++}let r=e.length;while(r-1>s&&e.charCodeAt(r-1)===G){r--}const o=r-s;let l=0;while(l<t.length&&t.charCodeAt(l)===G){l++}let u=t.length;while(u-1>l&&t.charCodeAt(u-1)===G){u--}const _=u-l;const f=o<_?o:_;let c=-1;let d=0;for(;d<f;d++){const v=e.charCodeAt(s+d);if(v!==t.charCodeAt(l+d)){break}else if(v===G){c=d}}if(d!==f){if(c===-1){return i}}else{if(_>f){if(t.charCodeAt(l+d)===G){return i.slice(l+d+1)}if(d===2){return i.slice(l+d)}}if(o>f){if(e.charCodeAt(s+d)===G){c=d}else if(d===2){c=3}}if(c===-1){c=0}}let O="";for(d=s+c+1;d<=r;++d){if(d===r||e.charCodeAt(d)===G){O+=O.length===0?"..":"\\.."}}l+=c;if(O.length>0){return`${O}${i.slice(l,u)}`}if(i.charCodeAt(l)===G){++l}return i.slice(l,u)},toNamespacedPath(e){if(typeof e!=="string"||e.length===0){return e}const t=B.resolve(e);if(t.length<=2){return e}if(t.charCodeAt(0)===G){if(t.charCodeAt(1)===G){const n=t.charCodeAt(2);if(n!==At&&n!==c1){return`\\\\?\\UNC\\${t.slice(2)}`}}}else if(n1(t.charCodeAt(0))&&t.charCodeAt(1)===t1&&t.charCodeAt(2)===G){return`\\\\?\\${t}`}return t},dirname(e){y(e,"path");const t=e.length;if(t===0){return"."}let n=-1;let i=0;const s=e.charCodeAt(0);if(t===1){return A(s)?e:"."}if(A(s)){n=i=1;if(A(e.charCodeAt(1))){let l=2;let u=l;while(l<t&&!A(e.charCodeAt(l))){l++}if(l<t&&l!==u){u=l;while(l<t&&A(e.charCodeAt(l))){l++}if(l<t&&l!==u){u=l;while(l<t&&!A(e.charCodeAt(l))){l++}if(l===t){return e}if(l!==u){n=i=l+1}}}}}else if(n1(s)&&e.charCodeAt(1)===t1){n=t>2&&A(e.charCodeAt(2))?3:2;i=n}let r=-1;let o=true;for(let l=t-1;l>=i;--l){if(A(e.charCodeAt(l))){if(!o){r=l;break}}else{o=false}}if(r===-1){if(n===-1){return"."}r=n}return e.slice(0,r)},basename(e,t){if(t!==void 0){y(t,"suffix")}y(e,"path");let n=0;let i=-1;let s=true;let r;if(e.length>=2&&n1(e.charCodeAt(0))&&e.charCodeAt(1)===t1){n=2}if(t!==void 0&&t.length>0&&t.length<=e.length){if(t===e){return""}let o=t.length-1;let l=-1;for(r=e.length-1;r>=n;--r){const u=e.charCodeAt(r);if(A(u)){if(!s){n=r+1;break}}else{if(l===-1){s=false;l=r+1}if(o>=0){if(u===t.charCodeAt(o)){if(--o===-1){i=r}}else{o=-1;i=l}}}}if(n===i){i=l}else if(i===-1){i=e.length}return e.slice(n,i)}for(r=e.length-1;r>=n;--r){if(A(e.charCodeAt(r))){if(!s){n=r+1;break}}else if(i===-1){s=false;i=r+1}}if(i===-1){return""}return e.slice(n,i)},extname(e){y(e,"path");let t=0;let n=-1;let i=0;let s=-1;let r=true;let o=0;if(e.length>=2&&e.charCodeAt(1)===t1&&n1(e.charCodeAt(0))){t=i=2}for(let l=e.length-1;l>=t;--l){const u=e.charCodeAt(l);if(A(u)){if(!r){i=l+1;break}continue}if(s===-1){r=false;s=l+1}if(u===c1){if(n===-1){n=l}else if(o!==1){o=1}}else if(n!==-1){o=-1}}if(n===-1||s===-1||o===0||o===1&&n===s-1&&n===i+1){return""}return e.slice(n,s)},format:Fe.bind(null,"\\"),parse(e){y(e,"path");const t={root:"",dir:"",base:"",ext:"",name:""};if(e.length===0){return t}const n=e.length;let i=0;let s=e.charCodeAt(0);if(n===1){if(A(s)){t.root=t.dir=e;return t}t.base=t.name=e;return t}if(A(s)){i=1;if(A(e.charCodeAt(1))){let c=2;let d=c;while(c<n&&!A(e.charCodeAt(c))){c++}if(c<n&&c!==d){d=c;while(c<n&&A(e.charCodeAt(c))){c++}if(c<n&&c!==d){d=c;while(c<n&&!A(e.charCodeAt(c))){c++}if(c===n){i=c}else if(c!==d){i=c+1}}}}}else if(n1(s)&&e.charCodeAt(1)===t1){if(n<=2){t.root=t.dir=e;return t}i=2;if(A(e.charCodeAt(2))){if(n===3){t.root=t.dir=e;return t}i=3}}if(i>0){t.root=e.slice(0,i)}let r=-1;let o=i;let l=-1;let u=true;let _=e.length-1;let f=0;for(;_>=i;--_){s=e.charCodeAt(_);if(A(s)){if(!u){o=_+1;break}continue}if(l===-1){u=false;l=_+1}if(s===c1){if(r===-1){r=_}else if(f!==1){f=1}}else if(r!==-1){f=-1}}if(l!==-1){if(r===-1||f===0||f===1&&r===l-1&&r===o+1){t.base=t.name=e.slice(o,l)}else{t.name=e.slice(o,r);t.base=e.slice(o,l);t.ext=e.slice(r,l)}}if(o>0&&o!==i){t.dir=e.slice(0,o-1)}else{t.dir=t.root}return t},sep:"\\",delimiter:";",win32:null,posix:null};const pt=(()=>{if(Z){const e=/\\/g;return()=>{const t=$1().replace(e,"/");return t.slice(t.indexOf("/"))}}return()=>$1()})();const I={resolve(...e){let t="";let n=false;for(let i=e.length-1;i>=0&&!n;i--){const s=e[i];y(s,`paths[${i}]`);if(s.length===0){continue}t=`${s}/${t}`;n=s.charCodeAt(0)===x}if(!n){const i=pt();t=`${i}/${t}`;n=i.charCodeAt(0)===x}t=H1(t,!n,"/",C1);if(n){return`/${t}`}return t.length>0?t:"."},normalize(e){y(e,"path");if(e.length===0){return"."}const t=e.charCodeAt(0)===x;const n=e.charCodeAt(e.length-1)===x;e=H1(e,!t,"/",C1);if(e.length===0){if(t){return"/"}return n?"./":"."}if(n){e+="/"}return t?`/${e}`:e},isAbsolute(e){y(e,"path");return e.length>0&&e.charCodeAt(0)===x},join(...e){if(e.length===0){return"."}const t=[];for(let n=0;n<e.length;++n){const i=e[n];y(i,"path");if(i.length>0){t.push(i)}}if(t.length===0){return"."}return I.normalize(t.join("/"))},relative(e,t){y(e,"from");y(t,"to");if(e===t){return""}e=I.resolve(e);t=I.resolve(t);if(e===t){return""}const n=1;const i=e.length;const s=i-n;const r=1;const o=t.length-r;const l=s<o?s:o;let u=-1;let _=0;for(;_<l;_++){const c=e.charCodeAt(n+_);if(c!==t.charCodeAt(r+_)){break}else if(c===x){u=_}}if(_===l){if(o>l){if(t.charCodeAt(r+_)===x){return t.slice(r+_+1)}if(_===0){return t.slice(r+_)}}else if(s>l){if(e.charCodeAt(n+_)===x){u=_}else if(_===0){u=0}}}let f="";for(_=n+u+1;_<=i;++_){if(_===i||e.charCodeAt(_)===x){f+=f.length===0?"..":"/.."}}return`${f}${t.slice(r+u)}`},toNamespacedPath(e){return e},dirname(e){y(e,"path");if(e.length===0){return"."}const t=e.charCodeAt(0)===x;let n=-1;let i=true;for(let s=e.length-1;s>=1;--s){if(e.charCodeAt(s)===x){if(!i){n=s;break}}else{i=false}}if(n===-1){return t?"/":"."}if(t&&n===1){return"//"}return e.slice(0,n)},basename(e,t){if(t!==void 0){y(t,"suffix")}y(e,"path");let n=0;let i=-1;let s=true;let r;if(t!==void 0&&t.length>0&&t.length<=e.length){if(t===e){return""}let o=t.length-1;let l=-1;for(r=e.length-1;r>=0;--r){const u=e.charCodeAt(r);if(u===x){if(!s){n=r+1;break}}else{if(l===-1){s=false;l=r+1}if(o>=0){if(u===t.charCodeAt(o)){if(--o===-1){i=r}}else{o=-1;i=l}}}}if(n===i){i=l}else if(i===-1){i=e.length}return e.slice(n,i)}for(r=e.length-1;r>=0;--r){if(e.charCodeAt(r)===x){if(!s){n=r+1;break}}else if(i===-1){s=false;i=r+1}}if(i===-1){return""}return e.slice(n,i)},extname(e){y(e,"path");let t=-1;let n=0;let i=-1;let s=true;let r=0;for(let o=e.length-1;o>=0;--o){const l=e[o];if(l==="/"){if(!s){n=o+1;break}continue}if(i===-1){s=false;i=o+1}if(l==="."){if(t===-1){t=o}else if(r!==1){r=1}}else if(t!==-1){r=-1}}if(t===-1||i===-1||r===0||r===1&&t===i-1&&t===n+1){return""}return e.slice(t,i)},format:Fe.bind(null,"/"),parse(e){y(e,"path");const t={root:"",dir:"",base:"",ext:"",name:""};if(e.length===0){return t}const n=e.charCodeAt(0)===x;let i;if(n){t.root="/";i=1}else{i=0}let s=-1;let r=0;let o=-1;let l=true;let u=e.length-1;let _=0;for(;u>=i;--u){const f=e.charCodeAt(u);if(f===x){if(!l){r=u+1;break}continue}if(o===-1){l=false;o=u+1}if(f===c1){if(s===-1){s=u}else if(_!==1){_=1}}else if(s!==-1){_=-1}}if(o!==-1){const f=r===0&&n?1:r;if(s===-1||_===0||_===1&&s===o-1&&s===r+1){t.base=t.name=e.slice(f,o)}else{t.name=e.slice(f,s);t.base=e.slice(f,o);t.ext=e.slice(s,o)}}if(r>0){t.dir=e.slice(0,r-1)}else if(n){t.dir="/"}return t},sep:"/",delimiter:":",win32:null,posix:null};I.win32=B.win32=B;I.posix=B.posix=I;const wt=Z?B.normalize:I.normalize;Z?B.isAbsolute:I.isAbsolute;const Tt=Z?B.join:I.join;const vt=Z?B.resolve:I.resolve;const Nt=Z?B.relative:I.relative;const St=Z?B.dirname:I.dirname;Z?B.basename:I.basename;Z?B.extname:I.extname;Z?B.parse:I.parse;const B1=Z?B.sep:I.sep;const It=/^\w[\w\d+.-]*$/;const Ot=/^\//;const Dt=/^\/\//;function yt(e,t){if(!e.scheme&&t){throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${e.authority}", path: "${e.path}", query: "${e.query}", fragment: "${e.fragment}"}`)}if(e.scheme&&!It.test(e.scheme)){throw new Error("[UriError]: Scheme contains illegal characters.")}if(e.path){if(e.authority){if(!Ot.test(e.path)){throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}}else{if(Dt.test(e.path)){throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}}}}function Pt(e,t){if(!e&&!t){return"file"}return e}function Mt(e,t){switch(e){case"https":case"http":case"file":if(!t){t=Y}else if(t[0]!==Y){t=Y+t}break}return t}const N="";const Y="/";const xt=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class k{static isUri(t){if(t instanceof k){return true}if(!t){return false}return typeof t.authority==="string"&&typeof t.fragment==="string"&&typeof t.path==="string"&&typeof t.query==="string"&&typeof t.scheme==="string"&&typeof t.fsPath==="string"&&typeof t.with==="function"&&typeof t.toString==="function"}constructor(t,n,i,s,r,o=false){if(typeof t==="object"){this.scheme=t.scheme||N;this.authority=t.authority||N;this.path=t.path||N;this.query=t.query||N;this.fragment=t.fragment||N}else{this.scheme=Pt(t,o);this.authority=n||N;this.path=Mt(this.scheme,i||N);this.query=s||N;this.fragment=r||N;yt(this,o)}}get fsPath(){return q1(this,false)}with(t){if(!t){return this}let{scheme:n,authority:i,path:s,query:r,fragment:o}=t;if(n===void 0){n=this.scheme}else if(n===null){n=N}if(i===void 0){i=this.authority}else if(i===null){i=N}if(s===void 0){s=this.path}else if(s===null){s=N}if(r===void 0){r=this.query}else if(r===null){r=N}if(o===void 0){o=this.fragment}else if(o===null){o=N}if(n===this.scheme&&i===this.authority&&s===this.path&&r===this.query&&o===this.fragment){return this}return new h1(n,i,s,r,o)}static parse(t,n=false){const i=xt.exec(t);if(!i){return new h1(N,N,N,N,N)}return new h1(i[2]||N,P1(i[4]||N),P1(i[5]||N),P1(i[7]||N),P1(i[9]||N),n)}static file(t){let n=N;if(f1){t=t.replace(/\\/g,Y)}if(t[0]===Y&&t[1]===Y){const i=t.indexOf(Y,2);if(i===-1){n=t.substring(2);t=Y}else{n=t.substring(2,i);t=t.substring(i)||Y}}return new h1("file",n,t,N,N)}static from(t,n){const i=new h1(t.scheme,t.authority,t.path,t.query,t.fragment,n);return i}static joinPath(t,...n){if(!t.path){throw new Error(`[UriError]: cannot call joinPath on URI without path`)}let i;if(f1&&t.scheme==="file"){i=k.file(B.join(q1(t,true),...n)).path}else{i=I.join(t.path,...n)}return t.with({path:i})}toString(t=false){return ee(this,t)}toJSON(){return this}static revive(t){if(!t){return t}else if(t instanceof k){return t}else{const n=new h1(t);n._formatted=t.external??null;n._fsPath=t._sep===We?t.fsPath??null:null;return n}}[Symbol.for("debug.description")](){return`URI(${this.toString()})`}}const We=f1?1:void 0;class h1 extends k{constructor(){super(...arguments);this._formatted=null;this._fsPath=null}get fsPath(){if(!this._fsPath){this._fsPath=q1(this,false)}return this._fsPath}toString(t=false){if(!t){if(!this._formatted){this._formatted=ee(this,false)}return this._formatted}else{return ee(this,true)}}toJSON(){const t={$mid:J1.Uri};if(this._fsPath){t.fsPath=this._fsPath;t._sep=We}if(this._formatted){t.external=this._formatted}if(this.path){t.path=this.path}if(this.scheme){t.scheme=this.scheme}if(this.authority){t.authority=this.authority}if(this.query){t.query=this.query}if(this.fragment){t.fragment=this.fragment}return t}}const $e={[m.Colon]:"%3A",[m.Slash]:"%2F",[m.QuestionMark]:"%3F",[m.Hash]:"%23",[m.OpenSquareBracket]:"%5B",[m.CloseSquareBracket]:"%5D",[m.AtSign]:"%40",[m.ExclamationMark]:"%21",[m.DollarSign]:"%24",[m.Ampersand]:"%26",[m.SingleQuote]:"%27",[m.OpenParen]:"%28",[m.CloseParen]:"%29",[m.Asterisk]:"%2A",[m.Plus]:"%2B",[m.Comma]:"%2C",[m.Semicolon]:"%3B",[m.Equals]:"%3D",[m.Space]:"%20"};function de(e,t,n){let i=void 0;let s=-1;for(let r=0;r<e.length;r++){const o=e.charCodeAt(r);if(o>=m.a&&o<=m.z||o>=m.A&&o<=m.Z||o>=m.Digit0&&o<=m.Digit9||o===m.Dash||o===m.Period||o===m.Underline||o===m.Tilde||t&&o===m.Slash||n&&o===m.OpenSquareBracket||n&&o===m.CloseSquareBracket||n&&o===m.Colon){if(s!==-1){i+=encodeURIComponent(e.substring(s,r));s=-1}if(i!==void 0){i+=e.charAt(r)}}else{if(i===void 0){i=e.substr(0,r)}const l=$e[o];if(l!==void 0){if(s!==-1){i+=encodeURIComponent(e.substring(s,r));s=-1}i+=l}else if(s===-1){s=r}}}if(s!==-1){i+=encodeURIComponent(e.substring(s))}return i!==void 0?i:e}function kt(e){let t=void 0;for(let n=0;n<e.length;n++){const i=e.charCodeAt(n);if(i===m.Hash||i===m.QuestionMark){if(t===void 0){t=e.substr(0,n)}t+=$e[i]}else{if(t!==void 0){t+=e[n]}}}return t!==void 0?t:e}function q1(e,t){let n;if(e.authority&&e.path.length>1&&e.scheme==="file"){n=`//${e.authority}${e.path}`}else if(e.path.charCodeAt(0)===m.Slash&&(e.path.charCodeAt(1)>=m.A&&e.path.charCodeAt(1)<=m.Z||e.path.charCodeAt(1)>=m.a&&e.path.charCodeAt(1)<=m.z)&&e.path.charCodeAt(2)===m.Colon){if(!t){n=e.path[1].toLowerCase()+e.path.substr(2)}else{n=e.path.substr(1)}}else{n=e.path}if(f1){n=n.replace(/\//g,"\\")}return n}function ee(e,t){const n=!t?de:kt;let i="";let{scheme:s,authority:r,path:o,query:l,fragment:u}=e;if(s){i+=s;i+=":"}if(r||s==="file"){i+=Y;i+=Y}if(r){let _=r.indexOf("@");if(_!==-1){const f=r.substr(0,_);r=r.substr(_+1);_=f.lastIndexOf(":");if(_===-1){i+=n(f,false,false)}else{i+=n(f.substr(0,_),false,false);i+=":";i+=n(f.substr(_+1),false,true)}i+="@"}r=r.toLowerCase();_=r.lastIndexOf(":");if(_===-1){i+=n(r,false,true)}else{i+=n(r.substr(0,_),false,true);i+=r.substr(_)}}if(o){if(o.length>=3&&o.charCodeAt(0)===m.Slash&&o.charCodeAt(2)===m.Colon){const _=o.charCodeAt(1);if(_>=m.A&&_<=m.Z){o=`/${String.fromCharCode(_+32)}:${o.substr(3)}`}}else if(o.length>=2&&o.charCodeAt(1)===m.Colon){const _=o.charCodeAt(0);if(_>=m.A&&_<=m.Z){o=`${String.fromCharCode(_+32)}:${o.substr(2)}`}}i+=n(o,true,false)}if(l){i+="?";i+=n(l,false,false)}if(u){i+="#";i+=!t?de(u,false,false):u}return i}function He(e){try{return decodeURIComponent(e)}catch{if(e.length>3){return e.substr(0,3)+He(e.substr(3))}else{return e}}}const Ee=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function P1(e){if(!e.match(Ee)){return e}return e.replace(Ee,t=>He(t))}function Bt(e,t){const n=Object.create(null);for(const i of e){const s=t(i);let r=n[s];if(!r){r=n[s]=[]}r.push(i)}return n}class Ft{constructor(){this.listeners=[];this.unexpectedErrorHandler=function(t){setTimeout(()=>{if(t.stack){if(L1.isErrorNoTelemetry(t)){throw new L1(t.message+"\n\n"+t.stack)}throw new Error(t.message+"\n\n"+t.stack)}throw t},0)}}addListener(t){this.listeners.push(t);return()=>{this._removeListener(t)}}emit(t){this.listeners.forEach(n=>{n(t)})}_removeListener(t){this.listeners.splice(this.listeners.indexOf(t),1)}setUnexpectedErrorHandler(t){this.unexpectedErrorHandler=t}getUnexpectedErrorHandler(){return this.unexpectedErrorHandler}onUnexpectedError(t){this.unexpectedErrorHandler(t);this.emit(t)}onUnexpectedExternalError(t){this.unexpectedErrorHandler(t)}}const Wt=new Ft;function F1(e){if(!$t(e)){Wt.onUnexpectedError(e)}return void 0}function te(e){if(e instanceof Error){const{name:t,message:n,cause:i}=e;const s=e.stacktrace||e.stack;return{$isError:true,name:t,message:n,stack:s,noTelemetry:L1.isErrorNoTelemetry(e),cause:i?te(i):void 0,code:e.code}}return e}const ne="Canceled";function $t(e){if(e instanceof Ht){return true}return e instanceof Error&&e.name===ne&&e.message===ne}class Ht extends Error{constructor(){super(ne);this.name=this.message}}class L1 extends Error{constructor(t){super(t);this.name="CodeExpectedError"}static fromError(t){if(t instanceof L1){return t}const n=new L1;n.message=t.message;n.stack=t.stack;return n}static isErrorNoTelemetry(t){return t.name==="CodeExpectedError"}}function qt(e,t){const n=this;let i=false;let s;return function(){if(i){return s}i=true;{s=e.apply(n,arguments)}return s}}var ie;(function(e){function t(r){return r<0}e.isLessThan=t;function n(r){return r<=0}e.isLessThanOrEqual=n;function i(r){return r>0}e.isGreaterThan=i;function s(r){return r===0}e.isNeitherLessOrGreaterThan=s;e.greaterThan=1;e.lessThan=-1;e.neitherLessOrGreaterThan=0})(ie||(ie={}));function Gt(e,t){return(n,i)=>t(e(n),e(i))}const Kt=(e,t)=>e-t;class W1{static{this.empty=new W1(t=>{})}constructor(t){this.iterate=t}forEach(t){this.iterate(n=>{t(n);return true})}toArray(){const t=[];this.iterate(n=>{t.push(n);return true});return t}filter(t){return new W1(n=>this.iterate(i=>t(i)?n(i):true))}map(t){return new W1(n=>this.iterate(i=>n(t(i))))}some(t){let n=false;this.iterate(i=>{n=t(i);return!n});return n}findFirst(t){let n;this.iterate(i=>{if(t(i)){n=i;return false}return true});return n}findLast(t){let n;this.iterate(i=>{if(t(i)){n=i}return true});return n}findLastMaxBy(t){let n;let i=true;this.iterate(s=>{if(i||ie.isGreaterThan(t(s,n))){i=false;n=s}return true});return n}}var be;class Vt{constructor(t,n){this.uri=t;this.value=n}}function zt(e){return Array.isArray(e)}class E1{static{this.defaultToKey=t=>t.toString()}constructor(t,n){this[be]="ResourceMap";if(t instanceof E1){this.map=new Map(t.map);this.toKey=n??E1.defaultToKey}else if(zt(t)){this.map=new Map;this.toKey=n??E1.defaultToKey;for(const[i,s]of t){this.set(i,s)}}else{this.map=new Map;this.toKey=t??E1.defaultToKey}}set(t,n){this.map.set(this.toKey(t),new Vt(t,n));return this}get(t){return this.map.get(this.toKey(t))?.value}has(t){return this.map.has(this.toKey(t))}get size(){return this.map.size}clear(){this.map.clear()}delete(t){return this.map.delete(this.toKey(t))}forEach(t,n){if(typeof n!=="undefined"){t=t.bind(n)}for(const[i,s]of this.map){t(s.value,s.uri,this)}}*values(){for(const t of this.map.values()){yield t.value}}*keys(){for(const t of this.map.values()){yield t.uri}}*entries(){for(const t of this.map.values()){yield[t.uri,t.value]}}*[(be=Symbol.toStringTag,Symbol.iterator)](){for(const[,t]of this.map){yield[t.uri,t.value]}}}var Le;(function(e){e[e["None"]=0]="None";e[e["AsOld"]=1]="AsOld";e[e["AsNew"]=2]="AsNew"})(Le||(Le={}));class jt{constructor(){this.map=new Map}add(t,n){let i=this.map.get(t);if(!i){i=new Set;this.map.set(t,i)}i.add(n)}delete(t,n){const i=this.map.get(t);if(!i){return}i.delete(n);if(i.size===0){this.map.delete(t)}}forEach(t,n){const i=this.map.get(t);if(!i){return}i.forEach(n)}get(t){const n=this.map.get(t);if(!n){return new Set}return n}}function Xt(e){return!!e&&typeof e[Symbol.iterator]==="function"}var G1;(function(e){function t(L){return L&&typeof L==="object"&&typeof L[Symbol.iterator]==="function"}e.is=t;const n=Object.freeze([]);function i(){return n}e.empty=i;function*s(L){yield L}e.single=s;function r(L){if(t(L)){return L}else{return s(L)}}e.wrap=r;function o(L){return L||n}e.from=o;function*l(L){for(let U=L.length-1;U>=0;U--){yield L[U]}}e.reverse=l;function u(L){return!L||L[Symbol.iterator]().next().done===true}e.isEmpty=u;function _(L){return L[Symbol.iterator]().next().value}e.first=_;function f(L,U){let w=0;for(const q of L){if(U(q,w++)){return true}}return false}e.some=f;function c(L,U){for(const w of L){if(U(w)){return w}}return void 0}e.find=c;function*d(L,U){for(const w of L){if(U(w)){yield w}}}e.filter=d;function*O(L,U){let w=0;for(const q of L){yield U(q,w++)}}e.map=O;function*v(L,U){let w=0;for(const q of L){yield*U(q,w++)}}e.flatMap=v;function*F(...L){for(const U of L){if(Xt(U)){yield*U}else{yield U}}}e.concat=F;function $(L,U,w){let q=w;for(const a1 of L){q=U(q,a1)}return q}e.reduce=$;function e1(L){let U=0;for(const w of L){U++}return U}e.length=e1;function*X(L,U,w=L.length){if(U<-L.length){U=0}if(U<0){U+=L.length}if(w<0){w+=L.length}else if(w>L.length){w=L.length}for(;U<w;U++){yield L[U]}}e.slice=X;function H(L,U=Number.POSITIVE_INFINITY){const w=[];if(U===0){return[w,L]}const q=L[Symbol.iterator]();for(let a1=0;a1<U;a1++){const I1=q.next();if(I1.done){return[w,e.empty()]}w.push(I1.value)}return[w,{[Symbol.iterator](){return q}}]}e.consume=H;async function X1(L){const U=[];for await(const w of L){U.push(w)}return Promise.resolve(U)}e.asyncToArray=X1})(G1||(G1={}));class qe{constructor(){this.livingDisposables=new Map}static{this.idx=0}getDisposableData(t){let n=this.livingDisposables.get(t);if(!n){n={parent:null,source:null,isSingleton:false,value:t,idx:qe.idx++};this.livingDisposables.set(t,n)}return n}trackDisposable(t){const n=this.getDisposableData(t);if(!n.source){n.source=new Error().stack}}setParent(t,n){const i=this.getDisposableData(t);i.parent=n}markAsDisposed(t){this.livingDisposables.delete(t)}markAsSingleton(t){this.getDisposableData(t).isSingleton=true}getRootParent(t,n){const i=n.get(t);if(i){return i}const s=t.parent?this.getRootParent(this.getDisposableData(t.parent),n):t;n.set(t,s);return s}getTrackedDisposables(){const t=new Map;const n=[...this.livingDisposables.entries()].filter(([,i])=>i.source!==null&&!this.getRootParent(i,t).isSingleton).flatMap(([i])=>i);return n}computeLeakingDisposables(t=10,n){let i;if(n){i=n}else{const u=new Map;const _=[...this.livingDisposables.values()].filter(c=>c.source!==null&&!this.getRootParent(c,u).isSingleton);if(_.length===0){return}const f=new Set(_.map(c=>c.value));i=_.filter(c=>{return!(c.parent&&f.has(c.parent))});if(i.length===0){throw new Error("There are cyclic diposable chains!")}}if(!i){return void 0}function s(u){function _(c,d){while(c.length>0&&d.some(O=>typeof O==="string"?O===c[0]:c[0].match(O))){c.shift()}}const f=u.source.split("\n").map(c=>c.trim().replace("at ","")).filter(c=>c!=="");_(f,["Error",/^trackDisposable \(.*\)$/,/^DisposableTracker.trackDisposable \(.*\)$/]);return f.reverse()}const r=new jt;for(const u of i){const _=s(u);for(let f=0;f<=_.length;f++){r.add(_.slice(0,f).join("\n"),u)}}i.sort(Gt(u=>u.idx,Kt));let o="";let l=0;for(const u of i.slice(0,t)){l++;const _=s(u);const f=[];for(let c=0;c<_.length;c++){let d=_[c];const O=r.get(_.slice(0,c+1).join("\n"));d=`(shared with ${O.size}/${i.length} leaks) at ${d}`;const v=r.get(_.slice(0,c).join("\n"));const F=Bt([...v].map($=>s($)[c]),$=>$);delete F[_[c]];for(const[$,e1]of Object.entries(F)){f.unshift(`    - stacktraces of ${e1.length} other leaks continue with ${$}`)}f.unshift(d)}o+=`


==================== Leaking disposable ${l}/${i.length}: ${u.value.constructor.name} ====================
${f.join("\n")}
============================================================

`}if(i.length>t){o+=`


... and ${i.length-t} more leaking disposables

`}return{leaks:i,details:o}}}function Qt(e){return e}function Yt(e,t){}function Ge(e){if(G1.is(e)){const t=[];for(const n of e){if(n){try{n.dispose()}catch(i){t.push(i)}}}if(t.length===1){throw t[0]}else if(t.length>1){throw new AggregateError(t,"Encountered errors while disposing of store")}return Array.isArray(e)?[]:e}else if(e){e.dispose();return e}}function Zt(...e){const t=ue(()=>Ge(e));return t}function ue(e){const t=Qt({dispose:qt(()=>{e()})});return t}class S1{static{this.DISABLE_DISPOSED_WARNING=false}constructor(){this._toDispose=new Set;this._isDisposed=false}dispose(){if(this._isDisposed){return}this._isDisposed=true;this.clear()}get isDisposed(){return this._isDisposed}clear(){if(this._toDispose.size===0){return}try{Ge(this._toDispose)}finally{this._toDispose.clear()}}add(t){if(!t){return t}if(t===this){throw new Error("Cannot register a disposable on itself!")}if(this._isDisposed){if(!S1.DISABLE_DISPOSED_WARNING){console.warn(new Error("Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!").stack)}}else{this._toDispose.add(t)}return t}delete(t){if(!t){return}if(t===this){throw new Error("Cannot dispose a disposable on itself!")}this._toDispose.delete(t);t.dispose()}deleteAndLeak(t){if(!t){return}if(this._toDispose.has(t)){this._toDispose.delete(t)}}}class se{static{this.None=Object.freeze({dispose(){}})}constructor(){this._store=new S1;Yt(this._store)}dispose(){this._store.dispose()}_register(t){if(t===this){throw new Error("Cannot register a disposable on itself!")}return this._store.add(t)}}class S{static{this.Undefined=new S(void 0)}constructor(t){this.element=t;this.next=S.Undefined;this.prev=S.Undefined}}class Jt{constructor(){this._first=S.Undefined;this._last=S.Undefined;this._size=0}get size(){return this._size}isEmpty(){return this._first===S.Undefined}clear(){let t=this._first;while(t!==S.Undefined){const n=t.next;t.prev=S.Undefined;t.next=S.Undefined;t=n}this._first=S.Undefined;this._last=S.Undefined;this._size=0}unshift(t){return this._insert(t,false)}push(t){return this._insert(t,true)}_insert(t,n){const i=new S(t);if(this._first===S.Undefined){this._first=i;this._last=i}else if(n){const r=this._last;this._last=i;i.prev=r;r.next=i}else{const r=this._first;this._first=i;i.next=r;r.prev=i}this._size+=1;let s=false;return()=>{if(!s){s=true;this._remove(i)}}}shift(){if(this._first===S.Undefined){return void 0}else{const t=this._first.element;this._remove(this._first);return t}}pop(){if(this._last===S.Undefined){return void 0}else{const t=this._last.element;this._remove(this._last);return t}}_remove(t){if(t.prev!==S.Undefined&&t.next!==S.Undefined){const n=t.prev;n.next=t.next;t.next.prev=n}else if(t.prev===S.Undefined&&t.next===S.Undefined){this._first=S.Undefined;this._last=S.Undefined}else if(t.next===S.Undefined){this._last=this._last.prev;this._last.next=S.Undefined}else if(t.prev===S.Undefined){this._first=this._first.next;this._first.prev=S.Undefined}this._size-=1}*[Symbol.iterator](){let t=this._first;while(t!==S.Undefined){yield t.element;t=t.next}}}const Ct=globalThis.performance.now.bind(globalThis.performance);class _e{static create(t){return new _e(t)}constructor(t){this._now=t===false?Date.now:Ct;this._startTime=this._now();this._stopTime=-1}stop(){this._stopTime=this._now()}reset(){this._startTime=this._now();this._stopTime=-1}elapsed(){if(this._stopTime!==-1){return this._stopTime-this._startTime}return this._now()-this._startTime}}var K1;(function(e){e.None=()=>se.None;function t(E,a){return d(E,()=>void 0,0,void 0,true,void 0,a)}e.defer=t;function n(E){return(a,g=null,h)=>{let b=false;let R=void 0;R=E(T=>{if(b){return}else if(R){R.dispose()}else{b=true}return a.call(g,T)},null,h);if(b){R.dispose()}return R}}e.once=n;function i(E,a){return e.once(e.filter(E,a))}e.onceIf=i;function s(E,a,g){return f((h,b=null,R)=>E(T=>h.call(b,a(T)),null,R),g)}e.map=s;function r(E,a,g){return f((h,b=null,R)=>E(T=>{a(T);h.call(b,T)},null,R),g)}e.forEach=r;function o(E,a,g){return f((h,b=null,R)=>E(T=>a(T)&&h.call(b,T),null,R),g)}e.filter=o;function l(E){return E}e.signal=l;function u(...E){return(a,g=null,h)=>{const b=Zt(...E.map(R=>R(T=>a.call(g,T))));return c(b,h)}}e.any=u;function _(E,a,g,h){let b=g;return s(E,R=>{b=a(b,R);return b},h)}e.reduce=_;function f(E,a){let g;const h={onWillAddFirstListener(){g=E(b.fire,b)},onDidRemoveLastListener(){g?.dispose()}};const b=new J(h);a?.add(b);return b.event}function c(E,a){if(a instanceof Array){a.push(E)}else if(a){a.add(E)}return E}function d(E,a,g=100,h=false,b=false,R,T){let M;let W=void 0;let m1=void 0;let O1=0;let A1;const tt={leakWarningThreshold:R,onWillAddFirstListener(){M=E(nt=>{O1++;W=a(W,nt);if(h&&!m1){D1.fire(W);W=void 0}A1=()=>{const it=W;W=void 0;m1=void 0;if(!h||O1>1){D1.fire(it)}O1=0};if(typeof g==="number"){clearTimeout(m1);m1=setTimeout(A1,g)}else{if(m1===void 0){m1=0;queueMicrotask(A1)}}})},onWillRemoveListener(){if(b&&O1>0){A1?.()}},onDidRemoveLastListener(){A1=void 0;M.dispose()}};const D1=new J(tt);T?.add(D1);return D1.event}e.debounce=d;function O(E,a=0,g){return e.debounce(E,(h,b)=>{if(!h){return[b]}h.push(b);return h},a,void 0,true,void 0,g)}e.accumulate=O;function v(E,a=(h,b)=>h===b,g){let h=true;let b;return o(E,R=>{const T=h||!a(R,b);h=false;b=R;return T},g)}e.latch=v;function F(E,a,g){return[e.filter(E,a,g),e.filter(E,h=>!a(h),g)]}e.split=F;function $(E,a=false,g=[],h){let b=g.slice();let R=E(W=>{if(b){b.push(W)}else{M.fire(W)}});if(h){h.add(R)}const T=()=>{b?.forEach(W=>M.fire(W));b=null};const M=new J({onWillAddFirstListener(){if(!R){R=E(W=>M.fire(W));if(h){h.add(R)}}},onDidAddFirstListener(){if(b){if(a){setTimeout(T)}else{T()}}},onDidRemoveLastListener(){if(R){R.dispose()}R=null}});if(h){h.add(M)}return M.event}e.buffer=$;function e1(E,a){const g=(h,b,R)=>{const T=a(new H);return E(function(M){const W=T.evaluate(M);if(W!==X){h.call(b,W)}},void 0,R)};return g}e.chain=e1;const X=Symbol("HaltChainable");class H{constructor(){this.steps=[]}map(a){this.steps.push(a);return this}forEach(a){this.steps.push(g=>{a(g);return g});return this}filter(a){this.steps.push(g=>a(g)?g:X);return this}reduce(a,g){let h=g;this.steps.push(b=>{h=a(h,b);return h});return this}latch(a=(g,h)=>g===h){let g=true;let h;this.steps.push(b=>{const R=g||!a(b,h);g=false;h=b;return R?b:X});return this}evaluate(a){for(const g of this.steps){a=g(a);if(a===X){break}}return a}}function X1(E,a,g=h=>h){const h=(...M)=>T.fire(g(...M));const b=()=>E.on(a,h);const R=()=>E.removeListener(a,h);const T=new J({onWillAddFirstListener:b,onDidRemoveLastListener:R});return T.event}e.fromNodeEventEmitter=X1;function L(E,a,g=h=>h){const h=(...M)=>T.fire(g(...M));const b=()=>E.addEventListener(a,h);const R=()=>E.removeEventListener(a,h);const T=new J({onWillAddFirstListener:b,onDidRemoveLastListener:R});return T.event}e.fromDOMEventEmitter=L;function U(E,a){return new Promise(g=>n(E)(g,null,a))}e.toPromise=U;function w(E){const a=new J;E.then(g=>{a.fire(g)},()=>{a.fire(void 0)}).finally(()=>{a.dispose()});return a.event}e.fromPromise=w;function q(E,a){return E(g=>a.fire(g))}e.forward=q;function a1(E,a,g){a(g);return E(h=>a(h))}e.runAndSubscribe=a1;class I1{constructor(a,g){this._observable=a;this._counter=0;this._hasChanged=false;const h={onWillAddFirstListener:()=>{a.addObserver(this);this._observable.reportChanges()},onDidRemoveLastListener:()=>{a.removeObserver(this)}};this.emitter=new J(h);if(g){g.add(this.emitter)}}beginUpdate(a){this._counter++}handlePossibleChange(a){}handleChange(a,g){this._hasChanged=true}endUpdate(a){this._counter--;if(this._counter===0){this._observable.reportChanges();if(this._hasChanged){this._hasChanged=false;this.emitter.fire(this._observable.get())}}}}function Ce(E,a){const g=new I1(E,a);return g.emitter.event}e.fromObservable=Ce;function et(E){return(a,g,h)=>{let b=0;let R=false;const T={beginUpdate(){b++},endUpdate(){b--;if(b===0){E.reportChanges();if(R){R=false;a.call(g)}}},handlePossibleChange(){},handleChange(){R=true}};E.addObserver(T);E.reportChanges();const M={dispose(){E.removeObserver(T)}};if(h instanceof S1){h.add(M)}else if(Array.isArray(h)){h.push(M)}return M}}e.fromObservableLight=et})(K1||(K1={}));class V1{static{this.all=new Set}static{this._idPool=0}constructor(t){this.listenerCount=0;this.invocationCount=0;this.elapsedOverall=0;this.durations=[];this.name=`${t}_${V1._idPool++}`;V1.all.add(this)}start(t){this._stopWatch=new _e;this.listenerCount=t}stop(){if(this._stopWatch){const t=this._stopWatch.elapsed();this.durations.push(t);this.elapsedOverall+=t;this.invocationCount+=1;this._stopWatch=void 0}}}let e2=-1;class ce{static{this._idPool=1}constructor(t,n,i=(ce._idPool++).toString(16).padStart(3,"0")){this._errorHandler=t;this.threshold=n;this.name=i;this._warnCountdown=0}dispose(){this._stacks?.clear()}check(t,n){const i=this.threshold;if(i<=0||n<i){return void 0}if(!this._stacks){this._stacks=new Map}const s=this._stacks.get(t.value)||0;this._stacks.set(t.value,s+1);this._warnCountdown-=1;if(this._warnCountdown<=0){this._warnCountdown=i*.5;const[r,o]=this.getMostFrequentStack();const l=`[${this.name}] potential listener LEAK detected, having ${n} listeners already. MOST frequent listener (${o}):`;console.warn(l);console.warn(r);const u=new t2(l,r);this._errorHandler(u)}return()=>{const r=this._stacks.get(t.value)||0;this._stacks.set(t.value,r-1)}}getMostFrequentStack(){if(!this._stacks){return void 0}let t;let n=0;for(const[i,s]of this._stacks){if(!t||n<s){t=[i,s];n=s}}return t}}class fe{static create(){const t=new Error;return new fe(t.stack??"")}constructor(t){this.value=t}print(){console.warn(this.value.split("\n").slice(2).join("\n"))}}class t2 extends Error{constructor(t,n){super(t);this.name="ListenerLeakError";this.stack=n}}class n2 extends Error{constructor(t,n){super(t);this.name="ListenerRefusalError";this.stack=n}}let i2=0;class Y1{constructor(t){this.value=t;this.id=i2++}}const s2=2;class J{constructor(t){this._size=0;this._options=t;this._leakageMon=this._options?.leakWarningThreshold?new ce(t?.onListenerError??F1,this._options?.leakWarningThreshold??e2):void 0;this._perfMon=this._options?._profName?new V1(this._options._profName):void 0;this._deliveryQueue=this._options?.deliveryQueue}dispose(){if(!this._disposed){this._disposed=true;if(this._deliveryQueue?.current===this){this._deliveryQueue.reset()}if(this._listeners){this._listeners=void 0;this._size=0}this._options?.onDidRemoveLastListener?.();this._leakageMon?.dispose()}}get event(){this._event??=(t,n,i)=>{if(this._leakageMon&&this._size>this._leakageMon.threshold**2){const l=`[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;console.warn(l);const u=this._leakageMon.getMostFrequentStack()??["UNKNOWN stack",-1];const _=new n2(`${l}. HINT: Stack shows most frequent listener (${u[1]}-times)`,u[0]);const f=this._options?.onListenerError||F1;f(_);return se.None}if(this._disposed){return se.None}if(n){t=t.bind(n)}const s=new Y1(t);let r;if(this._leakageMon&&this._size>=Math.ceil(this._leakageMon.threshold*.2)){s.stack=fe.create();r=this._leakageMon.check(s.stack,this._size+1)}if(!this._listeners){this._options?.onWillAddFirstListener?.(this);this._listeners=s;this._options?.onDidAddFirstListener?.(this)}else if(this._listeners instanceof Y1){this._deliveryQueue??=new r2;this._listeners=[this._listeners,s]}else{this._listeners.push(s)}this._options?.onDidAddListener?.(this);this._size++;const o=ue(()=>{r?.();this._removeListener(s)});if(i instanceof S1){i.add(o)}else if(Array.isArray(i)){i.push(o)}return o};return this._event}_removeListener(t){this._options?.onWillRemoveListener?.(this);if(!this._listeners){return}if(this._size===1){this._listeners=void 0;this._options?.onDidRemoveLastListener?.(this);this._size=0;return}const n=this._listeners;const i=n.indexOf(t);if(i===-1){console.log("disposed?",this._disposed);console.log("size?",this._size);console.log("arr?",JSON.stringify(this._listeners));throw new Error("Attempted to dispose unknown listener")}this._size--;n[i]=void 0;const s=this._deliveryQueue.current===this;if(this._size*s2<=n.length){let r=0;for(let o=0;o<n.length;o++){if(n[o]){n[r++]=n[o]}else if(s&&r<this._deliveryQueue.end){this._deliveryQueue.end--;if(r<this._deliveryQueue.i){this._deliveryQueue.i--}}}n.length=r}}_deliver(t,n){if(!t){return}const i=this._options?.onListenerError||F1;if(!i){t.value(n);return}try{t.value(n)}catch(s){i(s)}}_deliverQueue(t){const n=t.current._listeners;while(t.i<t.end){this._deliver(n[t.i++],t.value)}t.reset()}fire(t){if(this._deliveryQueue?.current){this._deliverQueue(this._deliveryQueue);this._perfMon?.stop()}this._perfMon?.start(this._size);if(!this._listeners);else if(this._listeners instanceof Y1){this._deliver(this._listeners,t)}else{const n=this._deliveryQueue;n.enqueue(this,t,this._listeners.length);this._deliverQueue(n)}this._perfMon?.stop()}hasListeners(){return this._size>0}}class r2{constructor(){this.i=-1;this.end=0}enqueue(t,n,i){this.i=0;this.end=i;this.current=t;this.value=n}reset(){this.i=this.end;this.current=void 0;this.value=void 0}}const Ke=Object.freeze(function(e,t){const n=setTimeout(e.bind(t),0);return{dispose(){clearTimeout(n)}}});var Ae;(function(e){function t(n){if(n===e.None||n===e.Cancelled){return true}if(n instanceof o2){return true}if(!n||typeof n!=="object"){return false}return typeof n.isCancellationRequested==="boolean"&&typeof n.onCancellationRequested==="function"}e.isCancellationToken=t;e.None=Object.freeze({isCancellationRequested:false,onCancellationRequested:K1.None});e.Cancelled=Object.freeze({isCancellationRequested:true,onCancellationRequested:Ke})})(Ae||(Ae={}));class o2{constructor(){this._isCancelled=false;this._emitter=null}cancel(){if(!this._isCancelled){this._isCancelled=true;if(this._emitter){this._emitter.fire(void 0);this.dispose()}}}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){if(this._isCancelled){return Ke}if(!this._emitter){this._emitter=new J}return this._emitter.event}dispose(){if(this._emitter){this._emitter.dispose();this._emitter=null}}}function l2(e){return e}class u2{constructor(t,n){this.lastCache=void 0;this.lastArgKey=void 0;if(typeof t==="function"){this._fn=t;this._computeKey=l2}else{this._fn=n;this._computeKey=t.getCacheKey}}get(t){const n=this._computeKey(t);if(this.lastArgKey!==n){this.lastArgKey=n;this.lastCache=this._fn(t)}return this.lastCache}}class Re{constructor(t){this.executor=t;this._didRun=false}get hasValue(){return this._didRun}get value(){if(!this._didRun){try{this._value=this.executor()}catch(t){this._error=t}finally{this._didRun=true}}if(this._error){throw this._error}return this._value}get rawValue(){return this._value}}var z1;(function(e){e[e["MAX_SAFE_SMALL_INTEGER"]=1073741824]="MAX_SAFE_SMALL_INTEGER";e[e["MIN_SAFE_SMALL_INTEGER"]=-1073741824]="MIN_SAFE_SMALL_INTEGER";e[e["MAX_UINT_8"]=255]="MAX_UINT_8";e[e["MAX_UINT_16"]=65535]="MAX_UINT_16";e[e["MAX_UINT_32"]=4294967295]="MAX_UINT_32";e[e["UNICODE_SUPPLEMENTARY_PLANE_BEGIN"]=65536]="UNICODE_SUPPLEMENTARY_PLANE_BEGIN"})(z1||(z1={}));function g1(e){if(e<0){return 0}if(e>z1.MAX_UINT_32){return z1.MAX_UINT_32}return e|0}const _2=/{(\d+)}/g;function Ue(e,...t){if(t.length===0){return e}return e.replace(_2,function(n,i){const s=parseInt(i,10);return isNaN(s)||s<0||s>=t.length?n:t[s]})}function M1(e){return e.replace(/[\\\{\}\*\+\?\|\^\$\.\[\]\(\)]/g,"\\$&")}function pe(e,t){if(!e||false){return e}const n=t.length,i=e.length;if(n===0||i===0){return e}let s=i,r=-1;while(true){r=e.lastIndexOf(t,s-1);if(r===-1||r+n!==s){break}if(r===0){return""}s=r}return e.substring(0,s)}function Ve(e){return e.split(/\r\n|\r|\n/)}function c2(e,t){if(e<t){return-1}else if(e>t){return 1}else{return 0}}function f2(e,t,n=0,i=e.length,s=0,r=t.length){for(;n<i&&s<r;n++,s++){const u=e.charCodeAt(n);const _=t.charCodeAt(s);if(u<_){return-1}else if(u>_){return 1}}const o=i-n;const l=r-s;if(o<l){return-1}else if(o>l){return 1}return 0}function ze(e,t,n=0,i=e.length,s=0,r=t.length){for(;n<i&&s<r;n++,s++){let u=e.charCodeAt(n);let _=t.charCodeAt(s);if(u===_){continue}if(u>=128||_>=128){return f2(e.toLowerCase(),t.toLowerCase(),n,i,s,r)}if(we(u)){u-=32}if(we(_)){_-=32}const f=u-_;if(f===0){continue}return f}const o=i-n;const l=r-s;if(o<l){return-1}else if(o>l){return 1}return 0}function we(e){return e>=m.a&&e<=m.z}function je(e){return e>=m.A&&e<=m.Z}function a2(e,t){return e.length===t.length&&ze(e,t)===0}function m2(e,t){const n=t.length;if(t.length>e.length){return false}return ze(e,t,0,n)===0}String.fromCharCode(m.UTF8_BOM);var u1;(function(e){e[e["Other"]=0]="Other";e[e["Prepend"]=1]="Prepend";e[e["CR"]=2]="CR";e[e["LF"]=3]="LF";e[e["Control"]=4]="Control";e[e["Extend"]=5]="Extend";e[e["Regional_Indicator"]=6]="Regional_Indicator";e[e["SpacingMark"]=7]="SpacingMark";e[e["L"]=8]="L";e[e["V"]=9]="V";e[e["T"]=10]="T";e[e["LV"]=11]="LV";e[e["LVT"]=12]="LVT";e[e["ZWJ"]=13]="ZWJ";e[e["Extended_Pictographic"]=14]="Extended_Pictographic"})(u1||(u1={}));class R1{static{this._INSTANCE=null}static getInstance(){if(!R1._INSTANCE){R1._INSTANCE=new R1}return R1._INSTANCE}constructor(){this._data=h2()}getGraphemeBreakType(t){if(t<32){if(t===m.LineFeed){return u1.LF}if(t===m.CarriageReturn){return u1.CR}return u1.Control}if(t<127){return u1.Other}const n=this._data;const i=n.length/3;let s=1;while(s<=i){if(t<n[3*s]){s=2*s}else if(t>n[3*s+1]){s=2*s+1}else{return n[3*s+2]}}return u1.Other}}function h2(){return JSON.parse("[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]")}var re;(function(e){e[e["zwj"]=8205]="zwj";e[e["emojiVariantSelector"]=65039]="emojiVariantSelector";e[e["enclosingKeyCap"]=8419]="enclosingKeyCap";e[e["space"]=32]="space"})(re||(re={}));class U1{static{this.ambiguousCharacterData=new Re(()=>{return JSON.parse('{"_common":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,1523,96,8242,96,1370,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,118002,50,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,118003,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,118004,52,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,118005,53,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,118006,54,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,118007,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,118008,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,118009,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,117974,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,117975,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71913,67,71922,67,65315,67,8557,67,8450,67,8493,67,117976,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,117977,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,117978,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,117979,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,117980,71,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,117981,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,117983,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,117984,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,118001,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,117982,108,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,117985,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,117986,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,117987,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,118000,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,117988,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,117989,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,117990,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,117991,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,117992,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,117993,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,117994,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,117995,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71910,87,71919,87,117996,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,117997,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,117998,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,71909,90,66293,90,65338,90,8484,90,8488,90,117999,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65283,35,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],"_default":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"cs":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"de":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"es":[8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"fr":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"it":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"ja":[8211,45,8218,44,65281,33,8216,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65292,44,65297,49,65307,59],"ko":[8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"pl":[65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"pt-BR":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"qps-ploc":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"ru":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"tr":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"zh-hans":[160,32,65374,126,8218,44,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65297,49],"zh-hant":[8211,45,65374,126,8218,44,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89]}')})}static{this.cache=new u2({getCacheKey:JSON.stringify},t=>{function n(f){const c=new Map;for(let d=0;d<f.length;d+=2){c.set(f[d],f[d+1])}return c}function i(f,c){const d=new Map(f);for(const[O,v]of c){d.set(O,v)}return d}function s(f,c){if(!f){return c}const d=new Map;for(const[O,v]of f){if(c.has(O)){d.set(O,v)}}return d}const r=this.ambiguousCharacterData.value;let o=t.filter(f=>!f.startsWith("_")&&f in r);if(o.length===0){o=["_default"]}let l=void 0;for(const f of o){const c=n(r[f]);l=s(l,c)}const u=n(r["_common"]);const _=i(u,l);return new U1(_)})}static getInstance(t){return U1.cache.get(Array.from(t))}static{this._locales=new Re(()=>Object.keys(U1.ambiguousCharacterData.value).filter(t=>!t.startsWith("_")))}static getLocales(){return U1._locales.value}constructor(t){this.confusableDictionary=t}isAmbiguous(t){return this.confusableDictionary.has(t)}containsAmbiguousCharacter(t){for(let n=0;n<t.length;n++){const i=t.codePointAt(n);if(typeof i==="number"&&this.isAmbiguous(i)){return true}}return false}getPrimaryConfusable(t){return this.confusableDictionary.get(t)}getConfusableCodePoints(){return new Set(this.confusableDictionary.keys())}}class p1{static getRawData(){return JSON.parse('{"_common":[11,12,13,127,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999],"cs":[173,8203,12288],"de":[173,8203,12288],"es":[8203,12288],"fr":[173,8203,12288],"it":[160,173,12288],"ja":[173],"ko":[173,12288],"pl":[173,8203,12288],"pt-BR":[173,8203,12288],"qps-ploc":[160,173,8203,12288],"ru":[173,12288],"tr":[160,173,8203,12288],"zh-hans":[160,173,8203,12288],"zh-hant":[173,12288]}')}static{this._data=void 0}static getData(){if(!this._data){this._data=new Set([...Object.values(p1.getRawData())].flat())}return this._data}static isInvisibleCharacter(t){return p1.getData().has(t)}static containsInvisibleCharacter(t){for(let n=0;n<t.length;n++){const i=t.codePointAt(n);if(typeof i==="number"&&(p1.isInvisibleCharacter(i)||i===re.space)){return true}}return false}static get codePoints(){return p1.getData()}}function l1(e){return e===m.Slash||e===m.Backslash}function ae(e){return e.replace(/[\\/]/g,I.sep)}function g2(e){if(e.indexOf("/")===-1){e=ae(e)}if(/^[a-zA-Z]:(\/|$)/.test(e)){e="/"+e}return e}function Te(e,t=I.sep){if(!e){return""}const n=e.length;const i=e.charCodeAt(0);if(l1(i)){if(l1(e.charCodeAt(1))){if(!l1(e.charCodeAt(2))){let r=3;const o=r;for(;r<n;r++){if(l1(e.charCodeAt(r))){break}}if(o!==r&&!l1(e.charCodeAt(r+1))){r+=1;for(;r<n;r++){if(l1(e.charCodeAt(r))){return e.slice(0,r+1).replace(/[\\/]/g,t)}}}}}return t}else if(d2(i)){if(e.charCodeAt(1)===m.Colon){if(l1(e.charCodeAt(2))){return e.slice(0,2)+t}else{return e.slice(0,2)}}}let s=e.indexOf("://");if(s!==-1){s+=3;for(;s<n;s++){if(l1(e.charCodeAt(s))){return e.slice(0,s+1)}}}return""}function ve(e,t,n,i=B1){if(e===t){return true}if(!e||!t){return false}if(t.length>e.length){return false}if(n){const s=m2(e,t);if(!s){return false}if(t.length===e.length){return true}let r=t.length;if(t.charAt(t.length-1)===i){r--}return e.charAt(r)===i}if(t.charAt(t.length-1)!==i){t+=i}return e.indexOf(t)===0}function d2(e){return e>=m.A&&e<=m.Z||e>=m.a&&e<=m.z}var P;(function(e){e.inMemory="inmemory";e.vscode="vscode";e.internal="private";e.walkThrough="walkThrough";e.walkThroughSnippet="walkThroughSnippet";e.http="http";e.https="https";e.file="file";e.mailto="mailto";e.untitled="untitled";e.data="data";e.command="command";e.vscodeRemote="vscode-remote";e.vscodeRemoteResource="vscode-remote-resource";e.vscodeManagedRemoteResource="vscode-managed-remote-resource";e.vscodeUserData="vscode-userdata";e.vscodeCustomEditor="vscode-custom-editor";e.vscodeNotebookCell="vscode-notebook-cell";e.vscodeNotebookCellMetadata="vscode-notebook-cell-metadata";e.vscodeNotebookCellMetadataDiff="vscode-notebook-cell-metadata-diff";e.vscodeNotebookCellOutput="vscode-notebook-cell-output";e.vscodeNotebookCellOutputDiff="vscode-notebook-cell-output-diff";e.vscodeNotebookMetadata="vscode-notebook-metadata";e.vscodeInteractiveInput="vscode-interactive-input";e.vscodeSettings="vscode-settings";e.vscodeWorkspaceTrust="vscode-workspace-trust";e.vscodeTerminal="vscode-terminal";e.vscodeChatCodeBlock="vscode-chat-code-block";e.vscodeChatCodeCompareBlock="vscode-chat-code-compare-block";e.vscodeChatSesssion="vscode-chat-editor";e.webviewPanel="webview-panel";e.vscodeWebview="vscode-webview";e.extension="extension";e.vscodeFileResource="vscode-file";e.tmp="tmp";e.vsls="vsls";e.vscodeSourceControl="vscode-scm";e.commentsInput="comment";e.codeSetting="code-setting";e.outputChannel="output";e.accessibleView="accessible-view"})(P||(P={}));const E2="tkn";class b2{constructor(){this._hosts=Object.create(null);this._ports=Object.create(null);this._connectionTokens=Object.create(null);this._preferredWebSchema="http";this._delegate=null;this._serverRootPath="/"}setPreferredWebSchema(t){this._preferredWebSchema=t}setDelegate(t){this._delegate=t}setServerRootPath(t,n){this._serverRootPath=I.join(n??"/",A2(t))}getServerRootPath(){return this._serverRootPath}get _remoteResourcesPath(){return I.join(this._serverRootPath,P.vscodeRemoteResource)}set(t,n,i){this._hosts[t]=n;this._ports[t]=i}setConnectionToken(t,n){this._connectionTokens[t]=n}getPreferredWebSchema(){return this._preferredWebSchema}rewrite(t){if(this._delegate){try{return this._delegate(t)}catch(l){F1(l);return t}}const n=t.authority;let i=this._hosts[n];if(i&&i.indexOf(":")!==-1&&i.indexOf("[")===-1){i=`[${i}]`}const s=this._ports[n];const r=this._connectionTokens[n];let o=`path=${encodeURIComponent(t.path)}`;if(typeof r==="string"){o+=`&${E2}=${encodeURIComponent(r)}`}return k.from({scheme:_t?this._preferredWebSchema:P.vscodeRemoteResource,authority:`${i}:${s}`,path:this._remoteResourcesPath,query:o})}}const L2=new b2;function A2(e){return`${e.quality??"oss"}-${e.commit??"dev"}`}const R2="vscode-app";class T1{constructor(){this.staticBrowserUris=new E1;this.appResourcePathUrls=new Map}static{this.FALLBACK_AUTHORITY=R2}registerAppResourcePathUrl(t,n){this.appResourcePathUrls.set(t,n)}toUrl(t){let n=this.appResourcePathUrls.get(t);if(typeof n==="function"){n=n()}return new URL(n??t,globalThis.location?.href??import.meta.url).toString()}asBrowserUri(t){const n=this.toUri(t);return this.uriToBrowserUri(n)}uriToBrowserUri(t){if(t.scheme===P.vscodeRemote){return L2.rewrite(t)}if(t.scheme===P.file&&(ut||ft===`${P.vscodeFileResource}://${T1.FALLBACK_AUTHORITY}`)){return t.with({scheme:P.vscodeFileResource,authority:t.authority||T1.FALLBACK_AUTHORITY,query:null,fragment:null})}return this.staticBrowserUris.get(t)??t}asFileUri(t){const n=this.toUri(t);return this.uriToFileUri(n)}uriToFileUri(t){if(t.scheme===P.vscodeFileResource){return t.with({scheme:P.file,authority:t.authority!==T1.FALLBACK_AUTHORITY?t.authority:null,query:null,fragment:null})}return t}toUri(t){if(k.isUri(t)){return t}if(globalThis._VSCODE_FILE_ROOT){const n=globalThis._VSCODE_FILE_ROOT;if(/^\w[\w\d+.-]*:\/\//.test(n)){return k.joinPath(k.parse(n,true),t)}const i=Tt(n,t);return k.file(i)}return k.parse(this.toUrl(t))}registerStaticBrowserUri(t,n){this.staticBrowserUris.set(t,n);return ue(()=>{if(this.staticBrowserUris.get(t)===n){this.staticBrowserUris.delete(t)}})}getRegisteredBrowserUris(){return this.staticBrowserUris.keys()}}new T1;var Ne;(function(e){const t=new Map([["1",{"Cross-Origin-Opener-Policy":"same-origin"}],["2",{"Cross-Origin-Embedder-Policy":"require-corp"}],["3",{"Cross-Origin-Opener-Policy":"same-origin","Cross-Origin-Embedder-Policy":"require-corp"}]]);e.CoopAndCoep=Object.freeze(t.get("3"));const n="vscode-coi";function i(r){let o;if(typeof r==="string"){o=new URL(r).searchParams}else if(r instanceof URL){o=r.searchParams}else if(k.isUri(r)){o=new URL(r.toString(true)).searchParams}const l=o?.get(n);if(!l){return void 0}return t.get(l)}e.getHeadersFromQuery=i;function s(r,o,l){if(!globalThis.crossOriginIsolated){return}const u=o&&l?"3":l?"2":"1";if(r instanceof URLSearchParams){r.set(n,u)}else{r[n]=u}}e.addSearchParam=s})(Ne||(Ne={}));function i1(e){return q1(e,true)}class U2{constructor(t){this._ignorePathCasing=t}compare(t,n,i=false){if(t===n){return 0}return c2(this.getComparisonKey(t,i),this.getComparisonKey(n,i))}isEqual(t,n,i=false){if(t===n){return true}if(!t||!n){return false}return this.getComparisonKey(t,i)===this.getComparisonKey(n,i)}getComparisonKey(t,n=false){return t.with({path:this._ignorePathCasing(t)?t.path.toLowerCase():void 0,fragment:n?null:void 0}).toString()}ignorePathCasing(t){return this._ignorePathCasing(t)}isEqualOrParent(t,n,i=false){if(t.scheme===n.scheme){if(t.scheme===P.file){return ve(i1(t),i1(n),this._ignorePathCasing(t))&&t.query===n.query&&(i||t.fragment===n.fragment)}if(Se(t.authority,n.authority)){return ve(t.path,n.path,this._ignorePathCasing(t),"/")&&t.query===n.query&&(i||t.fragment===n.fragment)}}return false}joinPath(t,...n){return k.joinPath(t,...n)}basenameOrAuthority(t){return p2(t)||t.authority}basename(t){return I.basename(t.path)}extname(t){return I.extname(t.path)}dirname(t){if(t.path.length===0){return t}let n;if(t.scheme===P.file){n=k.file(St(i1(t))).path}else{n=I.dirname(t.path);if(t.authority&&n.length&&n.charCodeAt(0)!==m.Slash){console.error(`dirname("${t.toString})) resulted in a relative path`);n="/"}}return t.with({path:n})}normalizePath(t){if(!t.path.length){return t}let n;if(t.scheme===P.file){n=k.file(wt(i1(t))).path}else{n=I.normalize(t.path)}return t.with({path:n})}relativePath(t,n){if(t.scheme!==n.scheme||!Se(t.authority,n.authority)){return void 0}if(t.scheme===P.file){const r=Nt(i1(t),i1(n));return f1?ae(r):r}let i=t.path||"/";const s=n.path||"/";if(this._ignorePathCasing(t)){let r=0;for(const o=Math.min(i.length,s.length);r<o;r++){if(i.charCodeAt(r)!==s.charCodeAt(r)){if(i.charAt(r).toLowerCase()!==s.charAt(r).toLowerCase()){break}}}i=s.substr(0,r)+i.substr(r)}return I.relative(i,s)}resolvePath(t,n){if(t.scheme===P.file){const i=k.file(vt(i1(t),n));return t.with({authority:i.authority,path:i.path})}n=g2(n);return t.with({path:I.resolve(t.path,n)})}isAbsolutePath(t){return!!t.path&&t.path[0]==="/"}isEqualAuthority(t,n){return t===n||t!==void 0&&n!==void 0&&a2(t,n)}hasTrailingPathSeparator(t,n=B1){if(t.scheme===P.file){const i=i1(t);return i.length>Te(i).length&&i[i.length-1]===n}else{const i=t.path;return i.length>1&&i.charCodeAt(i.length-1)===m.Slash&&!/^[a-zA-Z]:(\/$|\\$)/.test(t.fsPath)}}removeTrailingPathSeparator(t,n=B1){if(Ie(t,n)){return t.with({path:t.path.substr(0,t.path.length-1)})}return t}addTrailingPathSeparator(t,n=B1){let i=false;if(t.scheme===P.file){const s=i1(t);i=s!==void 0&&s.length===Te(s).length&&s[s.length-1]===n}else{n="/";const s=t.path;i=s.length===1&&s.charCodeAt(s.length-1)===m.Slash}if(!i&&!Ie(t,n)){return t.with({path:t.path+"/"})}return t}}const p=new U2(()=>false);p.isEqual.bind(p);p.isEqualOrParent.bind(p);p.getComparisonKey.bind(p);p.basenameOrAuthority.bind(p);const p2=p.basename.bind(p);p.extname.bind(p);p.dirname.bind(p);const w2=p.joinPath.bind(p);p.normalizePath.bind(p);p.relativePath.bind(p);p.resolvePath.bind(p);p.isAbsolutePath.bind(p);const Se=p.isEqualAuthority.bind(p);const Ie=p.hasTrailingPathSeparator.bind(p);p.removeTrailingPathSeparator.bind(p);p.addTrailingPathSeparator.bind(p);var Oe;(function(e){e.META_DATA_LABEL="label";e.META_DATA_DESCRIPTION="description";e.META_DATA_SIZE="size";e.META_DATA_MIME="mime";function t(n){const i=new Map;const s=n.path.substring(n.path.indexOf(";")+1,n.path.lastIndexOf(";"));s.split(";").forEach(o=>{const[l,u]=o.split(":");if(l&&u){i.set(l,u)}});const r=n.path.substring(0,n.path.indexOf(";"));if(r){i.set(e.META_DATA_MIME,r)}return i}e.parseMetaData=t})(Oe||(Oe={}));class j{constructor(t,n){this.lineNumber=t;this.column=n}with(t=this.lineNumber,n=this.column){if(t===this.lineNumber&&n===this.column){return this}else{return new j(t,n)}}delta(t=0,n=0){return this.with(Math.max(1,this.lineNumber+t),Math.max(1,this.column+n))}equals(t){return j.equals(this,t)}static equals(t,n){if(!t&&!n){return true}return!!t&&!!n&&t.lineNumber===n.lineNumber&&t.column===n.column}isBefore(t){return j.isBefore(this,t)}static isBefore(t,n){if(t.lineNumber<n.lineNumber){return true}if(n.lineNumber<t.lineNumber){return false}return t.column<n.column}isBeforeOrEqual(t){return j.isBeforeOrEqual(this,t)}static isBeforeOrEqual(t,n){if(t.lineNumber<n.lineNumber){return true}if(n.lineNumber<t.lineNumber){return false}return t.column<=n.column}static compare(t,n){const i=t.lineNumber|0;const s=n.lineNumber|0;if(i===s){const r=t.column|0;const o=n.column|0;return r-o}return i-s}clone(){return new j(this.lineNumber,this.column)}toString(){return"("+this.lineNumber+","+this.column+")"}static lift(t){return new j(t.lineNumber,t.column)}static isIPosition(t){return t&&typeof t.lineNumber==="number"&&typeof t.column==="number"}toJSON(){return{lineNumber:this.lineNumber,column:this.column}}}class D{constructor(t,n,i,s){if(t>i||t===i&&n>s){this.startLineNumber=i;this.startColumn=s;this.endLineNumber=t;this.endColumn=n}else{this.startLineNumber=t;this.startColumn=n;this.endLineNumber=i;this.endColumn=s}}isEmpty(){return D.isEmpty(this)}static isEmpty(t){return t.startLineNumber===t.endLineNumber&&t.startColumn===t.endColumn}containsPosition(t){return D.containsPosition(this,t)}static containsPosition(t,n){if(n.lineNumber<t.startLineNumber||n.lineNumber>t.endLineNumber){return false}if(n.lineNumber===t.startLineNumber&&n.column<t.startColumn){return false}if(n.lineNumber===t.endLineNumber&&n.column>t.endColumn){return false}return true}static strictContainsPosition(t,n){if(n.lineNumber<t.startLineNumber||n.lineNumber>t.endLineNumber){return false}if(n.lineNumber===t.startLineNumber&&n.column<=t.startColumn){return false}if(n.lineNumber===t.endLineNumber&&n.column>=t.endColumn){return false}return true}containsRange(t){return D.containsRange(this,t)}static containsRange(t,n){if(n.startLineNumber<t.startLineNumber||n.endLineNumber<t.startLineNumber){return false}if(n.startLineNumber>t.endLineNumber||n.endLineNumber>t.endLineNumber){return false}if(n.startLineNumber===t.startLineNumber&&n.startColumn<t.startColumn){return false}if(n.endLineNumber===t.endLineNumber&&n.endColumn>t.endColumn){return false}return true}strictContainsRange(t){return D.strictContainsRange(this,t)}static strictContainsRange(t,n){if(n.startLineNumber<t.startLineNumber||n.endLineNumber<t.startLineNumber){return false}if(n.startLineNumber>t.endLineNumber||n.endLineNumber>t.endLineNumber){return false}if(n.startLineNumber===t.startLineNumber&&n.startColumn<=t.startColumn){return false}if(n.endLineNumber===t.endLineNumber&&n.endColumn>=t.endColumn){return false}return true}plusRange(t){return D.plusRange(this,t)}static plusRange(t,n){let i;let s;let r;let o;if(n.startLineNumber<t.startLineNumber){i=n.startLineNumber;s=n.startColumn}else if(n.startLineNumber===t.startLineNumber){i=n.startLineNumber;s=Math.min(n.startColumn,t.startColumn)}else{i=t.startLineNumber;s=t.startColumn}if(n.endLineNumber>t.endLineNumber){r=n.endLineNumber;o=n.endColumn}else if(n.endLineNumber===t.endLineNumber){r=n.endLineNumber;o=Math.max(n.endColumn,t.endColumn)}else{r=t.endLineNumber;o=t.endColumn}return new D(i,s,r,o)}intersectRanges(t){return D.intersectRanges(this,t)}static intersectRanges(t,n){let i=t.startLineNumber;let s=t.startColumn;let r=t.endLineNumber;let o=t.endColumn;const l=n.startLineNumber;const u=n.startColumn;const _=n.endLineNumber;const f=n.endColumn;if(i<l){i=l;s=u}else if(i===l){s=Math.max(s,u)}if(r>_){r=_;o=f}else if(r===_){o=Math.min(o,f)}if(i>r){return null}if(i===r&&s>o){return null}return new D(i,s,r,o)}equalsRange(t){return D.equalsRange(this,t)}static equalsRange(t,n){if(!t&&!n){return true}return!!t&&!!n&&t.startLineNumber===n.startLineNumber&&t.startColumn===n.startColumn&&t.endLineNumber===n.endLineNumber&&t.endColumn===n.endColumn}getEndPosition(){return D.getEndPosition(this)}static getEndPosition(t){return new j(t.endLineNumber,t.endColumn)}getStartPosition(){return D.getStartPosition(this)}static getStartPosition(t){return new j(t.startLineNumber,t.startColumn)}toString(){return"["+this.startLineNumber+","+this.startColumn+" -> "+this.endLineNumber+","+this.endColumn+"]"}setEndPosition(t,n){return new D(this.startLineNumber,this.startColumn,t,n)}setStartPosition(t,n){return new D(t,n,this.endLineNumber,this.endColumn)}collapseToStart(){return D.collapseToStart(this)}static collapseToStart(t){return new D(t.startLineNumber,t.startColumn,t.startLineNumber,t.startColumn)}collapseToEnd(){return D.collapseToEnd(this)}static collapseToEnd(t){return new D(t.endLineNumber,t.endColumn,t.endLineNumber,t.endColumn)}delta(t){return new D(this.startLineNumber+t,this.startColumn,this.endLineNumber+t,this.endColumn)}isSingleLine(){return this.startLineNumber===this.endLineNumber}static fromPositions(t,n=t){return new D(t.lineNumber,t.column,n.lineNumber,n.column)}static lift(t){if(!t){return null}return new D(t.startLineNumber,t.startColumn,t.endLineNumber,t.endColumn)}static isIRange(t){return t&&typeof t.startLineNumber==="number"&&typeof t.startColumn==="number"&&typeof t.endLineNumber==="number"&&typeof t.endColumn==="number"}static areIntersectingOrTouching(t,n){if(t.endLineNumber<n.startLineNumber||t.endLineNumber===n.startLineNumber&&t.endColumn<n.startColumn){return false}if(n.endLineNumber<t.startLineNumber||n.endLineNumber===t.startLineNumber&&n.endColumn<t.startColumn){return false}return true}static areIntersecting(t,n){if(t.endLineNumber<n.startLineNumber||t.endLineNumber===n.startLineNumber&&t.endColumn<=n.startColumn){return false}if(n.endLineNumber<t.startLineNumber||n.endLineNumber===t.startLineNumber&&n.endColumn<=t.startColumn){return false}return true}static areOnlyIntersecting(t,n){if(t.endLineNumber<n.startLineNumber-1||t.endLineNumber===n.startLineNumber&&t.endColumn<n.startColumn-1){return false}if(n.endLineNumber<t.startLineNumber-1||n.endLineNumber===t.startLineNumber&&n.endColumn<t.startColumn-1){return false}return true}static compareRangesUsingStarts(t,n){if(t&&n){const r=t.startLineNumber|0;const o=n.startLineNumber|0;if(r===o){const l=t.startColumn|0;const u=n.startColumn|0;if(l===u){const _=t.endLineNumber|0;const f=n.endLineNumber|0;if(_===f){const c=t.endColumn|0;const d=n.endColumn|0;return c-d}return _-f}return l-u}return r-o}const i=t?1:0;const s=n?1:0;return i-s}static compareRangesUsingEnds(t,n){if(t.endLineNumber===n.endLineNumber){if(t.endColumn===n.endColumn){if(t.startLineNumber===n.startLineNumber){return t.startColumn-n.startColumn}return t.startLineNumber-n.startLineNumber}return t.endColumn-n.endColumn}return t.endLineNumber-n.endLineNumber}static spansMultipleLines(t){return t.endLineNumber>t.startLineNumber}toJSON(){return this}}var De;(function(e){e[e["Resolved"]=0]="Resolved";e[e["Rejected"]=1]="Rejected"})(De||(De={}));var ye;(function(e){async function t(i){let s=void 0;const r=await Promise.all(i.map(o=>o.then(l=>l,l=>{if(!s){s=l}return void 0})));if(typeof s!=="undefined"){throw s}return r}e.settled=t;function n(i){return new Promise(async(s,r)=>{try{await i(s,r)}catch(o){r(o)}})}e.withAsyncBody=n})(ye||(ye={}));var Q;(function(e){e[e["Initial"]=0]="Initial";e[e["DoneOK"]=1]="DoneOK";e[e["DoneError"]=2]="DoneError"})(Q||(Q={}));class V{static fromArray(t){return new V(n=>{n.emitMany(t)})}static fromPromise(t){return new V(async n=>{n.emitMany(await t)})}static fromPromisesResolveOrder(t){return new V(async n=>{await Promise.all(t.map(async i=>n.emitOne(await i)))})}static merge(t){return new V(async n=>{await Promise.all(t.map(async i=>{for await(const s of i){n.emitOne(s)}}))})}static{this.EMPTY=V.fromArray([])}constructor(t,n){this._state=Q.Initial;this._results=[];this._error=null;this._onReturn=n;this._onStateChanged=new J;queueMicrotask(async()=>{const i={emitOne:s=>this.emitOne(s),emitMany:s=>this.emitMany(s),reject:s=>this.reject(s)};try{await Promise.resolve(t(i));this.resolve()}catch(s){this.reject(s)}finally{i.emitOne=void 0;i.emitMany=void 0;i.reject=void 0}})}[Symbol.asyncIterator](){let t=0;return{next:async()=>{do{if(this._state===Q.DoneError){throw this._error}if(t<this._results.length){return{done:false,value:this._results[t++]}}if(this._state===Q.DoneOK){return{done:true,value:void 0}}await K1.toPromise(this._onStateChanged.event)}while(true)},return:async()=>{this._onReturn?.();return{done:true,value:void 0}}}}static map(t,n){return new V(async i=>{for await(const s of t){i.emitOne(n(s))}})}map(t){return V.map(this,t)}static filter(t,n){return new V(async i=>{for await(const s of t){if(n(s)){i.emitOne(s)}}})}filter(t){return V.filter(this,t)}static coalesce(t){return V.filter(t,n=>!!n)}coalesce(){return V.coalesce(this)}static async toPromise(t){const n=[];for await(const i of t){n.push(i)}return n}toPromise(){return V.toPromise(this)}emitOne(t){if(this._state!==Q.Initial){return}this._results.push(t);this._onStateChanged.fire()}emitMany(t){if(this._state!==Q.Initial){return}this._results=this._results.concat(t);this._onStateChanged.fire()}resolve(){if(this._state!==Q.Initial){return}this._state=Q.DoneOK;this._onStateChanged.fire()}reject(t){if(this._state!==Q.Initial){return}this._state=Q.DoneError;this._error=t;this._onStateChanged.fire()}}const T2="`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?";function v2(e=""){let t="(-?\\d*\\.\\d\\w*)|([^";for(const n of T2){if(e.indexOf(n)>=0){continue}t+="\\"+n}t+="\\s]+)";return new RegExp(t,"g")}const N2=v2();function Xe(e){let t=N2;if(e&&e instanceof RegExp){if(!e.global){let n="g";if(e.ignoreCase){n+="i"}if(e.multiline){n+="m"}if(e.unicode){n+="u"}t=new RegExp(e.source,n)}else{t=e}}t.lastIndex=0;return t}const Qe=new Jt;Qe.unshift({maxLen:1e3,windowSize:15,timeBudget:150});function Ye(e,t,n,i,s){t=Xe(t);if(!s){s=G1.first(Qe)}if(n.length>s.maxLen){let _=e-s.maxLen/2;if(_<0){_=0}else{i+=_}n=n.substring(_,e+s.maxLen/2);return Ye(e,t,n,i,s)}const r=Date.now();const o=e-1-i;let l=-1;let u=null;for(let _=1;;_++){if(Date.now()-r>=s.timeBudget){break}const f=o-s.windowSize*_;t.lastIndex=Math.max(0,f);const c=S2(t,n,o,l);if(!c&&u){break}u=c;if(f<=0){break}l=f}if(u){const _={word:u[0],startColumn:i+1+u.index,endColumn:i+1+u.index+u[0].length};t.lastIndex=0;return _}return null}function S2(e,t,n,i){let s;while(s=e.exec(t)){const r=s.index||0;if(r<=n&&e.lastIndex>=n){return s}else if(i>0&&r>i){return null}}return null}class I2{constructor(t){this.values=t;this.prefixSum=new Uint32Array(t.length);this.prefixSumValidIndex=new Int32Array(1);this.prefixSumValidIndex[0]=-1}getCount(){return this.values.length}insertValues(t,n){t=g1(t);const i=this.values;const s=this.prefixSum;const r=n.length;if(r===0){return false}this.values=new Uint32Array(i.length+r);this.values.set(i.subarray(0,t),0);this.values.set(i.subarray(t),t+r);this.values.set(n,t);if(t-1<this.prefixSumValidIndex[0]){this.prefixSumValidIndex[0]=t-1}this.prefixSum=new Uint32Array(this.values.length);if(this.prefixSumValidIndex[0]>=0){this.prefixSum.set(s.subarray(0,this.prefixSumValidIndex[0]+1))}return true}setValue(t,n){t=g1(t);n=g1(n);if(this.values[t]===n){return false}this.values[t]=n;if(t-1<this.prefixSumValidIndex[0]){this.prefixSumValidIndex[0]=t-1}return true}removeValues(t,n){t=g1(t);n=g1(n);const i=this.values;const s=this.prefixSum;if(t>=i.length){return false}const r=i.length-t;if(n>=r){n=r}if(n===0){return false}this.values=new Uint32Array(i.length-n);this.values.set(i.subarray(0,t),0);this.values.set(i.subarray(t+n),t);this.prefixSum=new Uint32Array(this.values.length);if(t-1<this.prefixSumValidIndex[0]){this.prefixSumValidIndex[0]=t-1}if(this.prefixSumValidIndex[0]>=0){this.prefixSum.set(s.subarray(0,this.prefixSumValidIndex[0]+1))}return true}getTotalSum(){if(this.values.length===0){return 0}return this._getPrefixSum(this.values.length-1)}getPrefixSum(t){if(t<0){return 0}t=g1(t);return this._getPrefixSum(t)}_getPrefixSum(t){if(t<=this.prefixSumValidIndex[0]){return this.prefixSum[t]}let n=this.prefixSumValidIndex[0]+1;if(n===0){this.prefixSum[0]=this.values[0];n++}if(t>=this.values.length){t=this.values.length-1}for(let i=n;i<=t;i++){this.prefixSum[i]=this.prefixSum[i-1]+this.values[i]}this.prefixSumValidIndex[0]=Math.max(this.prefixSumValidIndex[0],t);return this.prefixSum[t]}getIndexOf(t){t=Math.floor(t);this.getTotalSum();let n=0;let i=this.values.length-1;let s=0;let r=0;let o=0;while(n<=i){s=n+(i-n)/2|0;r=this.prefixSum[s];o=r-this.values[s];if(t<o){i=s-1}else if(t>=r){n=s+1}else{break}}return new O2(s,t-o)}}class O2{constructor(t,n){this.index=t;this.remainder=n;this._prefixSumIndexOfResultBrand=void 0;this.index=t;this.remainder=n}}class D2{constructor(t,n,i,s){this._uri=t;this._lines=n;this._eol=i;this._versionId=s;this._lineStarts=null;this._cachedTextValue=null}dispose(){this._lines.length=0}get version(){return this._versionId}getText(){if(this._cachedTextValue===null){this._cachedTextValue=this._lines.join(this._eol)}return this._cachedTextValue}onEvents(t){if(t.eol&&t.eol!==this._eol){this._eol=t.eol;this._lineStarts=null}const n=t.changes;for(const i of n){this._acceptDeleteRange(i.range);this._acceptInsertText(new j(i.range.startLineNumber,i.range.startColumn),i.text)}this._versionId=t.versionId;this._cachedTextValue=null}_ensureLineStarts(){if(!this._lineStarts){const t=this._eol.length;const n=this._lines.length;const i=new Uint32Array(n);for(let s=0;s<n;s++){i[s]=this._lines[s].length+t}this._lineStarts=new I2(i)}}_setLineText(t,n){this._lines[t]=n;if(this._lineStarts){this._lineStarts.setValue(t,this._lines[t].length+this._eol.length)}}_acceptDeleteRange(t){if(t.startLineNumber===t.endLineNumber){if(t.startColumn===t.endColumn){return}this._setLineText(t.startLineNumber-1,this._lines[t.startLineNumber-1].substring(0,t.startColumn-1)+this._lines[t.startLineNumber-1].substring(t.endColumn-1));return}this._setLineText(t.startLineNumber-1,this._lines[t.startLineNumber-1].substring(0,t.startColumn-1)+this._lines[t.endLineNumber-1].substring(t.endColumn-1));this._lines.splice(t.startLineNumber,t.endLineNumber-t.startLineNumber);if(this._lineStarts){this._lineStarts.removeValues(t.startLineNumber,t.endLineNumber-t.startLineNumber)}}_acceptInsertText(t,n){if(n.length===0){return}const i=Ve(n);if(i.length===1){this._setLineText(t.lineNumber-1,this._lines[t.lineNumber-1].substring(0,t.column-1)+i[0]+this._lines[t.lineNumber-1].substring(t.column-1));return}i[i.length-1]+=this._lines[t.lineNumber-1].substring(t.column-1);this._setLineText(t.lineNumber-1,this._lines[t.lineNumber-1].substring(0,t.column-1)+i[0]);const s=new Uint32Array(i.length-1);for(let r=1;r<i.length;r++){this._lines.splice(t.lineNumber+r-1,0,i[r]);s[r-1]=i[r].length+this._eol.length}if(this._lineStarts){this._lineStarts.insertValues(t.lineNumber,s)}}}const y2="workerTextModelSync";class P2{constructor(){this._models=Object.create(null)}bindToServer(t){t.setChannel(y2,this)}getModel(t){return this._models[t]}getModels(){const t=[];Object.keys(this._models).forEach(n=>t.push(this._models[n]));return t}$acceptNewModel(t){this._models[t.url]=new M2(k.parse(t.url),t.lines,t.EOL,t.versionId)}$acceptModelChanged(t,n){if(!this._models[t]){return}const i=this._models[t];i.onEvents(n)}$acceptRemovedModel(t){if(!this._models[t]){return}delete this._models[t]}}class M2 extends D2{get uri(){return this._uri}get eol(){return this._eol}getValue(){return this.getText()}findMatches(t){const n=[];for(let i=0;i<this._lines.length;i++){const s=this._lines[i];const r=this.offsetAt(new j(i+1,1));const o=s.matchAll(t);for(const l of o){if(l.index||l.index===0){l.index=l.index+r}n.push(l)}}return n}getLinesContent(){return this._lines.slice(0)}getLineCount(){return this._lines.length}getLineContent(t){return this._lines[t-1]}getWordAtPosition(t,n){const i=Ye(t.column,Xe(n),this._lines[t.lineNumber-1],0);if(i){return new D(t.lineNumber,i.startColumn,t.lineNumber,i.endColumn)}return null}getWordUntilPosition(t,n){const i=this.getWordAtPosition(t,n);if(!i){return{word:"",startColumn:t.column,endColumn:t.column}}return{word:this._lines[t.lineNumber-1].substring(i.startColumn-1,t.column-1),startColumn:i.startColumn,endColumn:t.column}}words(t){const n=this._lines;const i=this._wordenize.bind(this);let s=0;let r="";let o=0;let l=[];return{*[Symbol.iterator](){while(true){if(o<l.length){const u=r.substring(l[o].start,l[o].end);o+=1;yield u}else{if(s<n.length){r=n[s];l=i(r,t);o=0;s+=1}else{break}}}}}}getLineWords(t,n){const i=this._lines[t-1];const s=this._wordenize(i,n);const r=[];for(const o of s){r.push({word:i.substring(o.start,o.end),startColumn:o.start+1,endColumn:o.end+1})}return r}_wordenize(t,n){const i=[];let s;n.lastIndex=0;while(s=n.exec(t)){if(s[0].length===0){break}i.push({start:s.index,end:s.index+s[0].length})}return i}getValueInRange(t){t=this._validateRange(t);if(t.startLineNumber===t.endLineNumber){return this._lines[t.startLineNumber-1].substring(t.startColumn-1,t.endColumn-1)}const n=this._eol;const i=t.startLineNumber-1;const s=t.endLineNumber-1;const r=[];r.push(this._lines[i].substring(t.startColumn-1));for(let o=i+1;o<s;o++){r.push(this._lines[o])}r.push(this._lines[s].substring(0,t.endColumn-1));return r.join(n)}offsetAt(t){t=this._validatePosition(t);this._ensureLineStarts();return this._lineStarts.getPrefixSum(t.lineNumber-2)+(t.column-1)}positionAt(t){t=Math.floor(t);t=Math.max(0,t);this._ensureLineStarts();const n=this._lineStarts.getIndexOf(t);const i=this._lines[n.index].length;return{lineNumber:1+n.index,column:1+Math.min(n.remainder,i)}}_validateRange(t){const n=this._validatePosition({lineNumber:t.startLineNumber,column:t.startColumn});const i=this._validatePosition({lineNumber:t.endLineNumber,column:t.endColumn});if(n.lineNumber!==t.startLineNumber||n.column!==t.startColumn||i.lineNumber!==t.endLineNumber||i.column!==t.endColumn){return{startLineNumber:n.lineNumber,startColumn:n.column,endLineNumber:i.lineNumber,endColumn:i.column}}return t}_validatePosition(t){if(!j.isIPosition(t)){throw new Error("bad position")}let{lineNumber:n,column:i}=t;let s=false;if(n<1){n=1;i=1;s=true}else if(n>this._lines.length){n=this._lines.length;i=this._lines[n-1].length+1;s=true}else{const r=this._lines[n-1].length+1;if(i<1){i=1;s=true}else if(i>r){i=r;s=true}}if(!s){return t}else{return{lineNumber:n,column:i}}}}class j1{constructor(t){this.workerTextModelSyncServer=new P2;this.patterns=new Map;this.workerTextModelSyncServer.bindToServer(t)}$setWorkspaceFolders(t){this.computePatterns(t)}computePatterns(t){const n=t.sort((i,s)=>s.length-i.length).map(i=>k.parse(i));for(const i of n){const s=j1.createPatterns(i);this.patterns.set(i,s)}}getModel(t){return this.workerTextModelSyncServer.getModel(t)}$computeLinks(t){const n=this.getModel(t);if(!n){return[]}const i=[];const s=Ve(n.getValue());for(const[r,o]of this.patterns){const l={toResource:u=>{if(typeof u==="string"){return w2(r,u)}return null}};for(let u=0,_=s.length;u<_;u++){i.push(...j1.detectLinks(s[u],u+1,o,l))}}return i}static createPatterns(t){const n=[];const i=t.scheme===P.file?t.fsPath:t.path;const s=[i];if(f1&&t.scheme===P.file){s.push(ae(i))}for(const r of s){const o=`[^\\s\\(\\):<>'"]`;const l=`(?:${o}| ${o})`;const u=`${l}+\\.${o}+`;const _=`${o}+`;n.push(new RegExp(M1(r)+`(${u}) on line ((\\d+)(, column (\\d+))?)`,"gi"));n.push(new RegExp(M1(r)+`(${u}):line ((\\d+)(, column (\\d+))?)`,"gi"));n.push(new RegExp(M1(r)+`(${u})(\\s?\\((\\d+)(,(\\d+))?)\\)`,"gi"));n.push(new RegExp(M1(r)+`(${_})(:(\\d+))?(:(\\d+))?`,"gi"))}return n}static detectLinks(t,n,i,s){const r=[];i.forEach(o=>{o.lastIndex=0;let l;let u=0;while((l=o.exec(t))!==null){const _=pe(l[1],".").replace(/\\/g,"/");let f;try{const v=s.toResource(_);if(v){f=v.toString()}}catch(v){continue}if(l[3]){const v=l[3];if(l[5]){const F=l[5];f=Ue("{0}#{1},{2}",f,v,F)}else{f=Ue("{0}#{1}",f,v)}}const c=pe(l[0],".");const d=t.indexOf(c,u);u=d+c.length;const O={startColumn:d+1,startLineNumber:n,endColumn:d+1+c.length,endLineNumber:n};if(r.some(v=>D.areIntersectingOrTouching(v.range,O))){return}r.push({range:O,url:f})}});return r}}function x2(e){return new j1(e)}const Z1="default";const k2="$initialize";var K;(function(e){e[e["Request"]=0]="Request";e[e["Reply"]=1]="Reply";e[e["SubscribeEvent"]=2]="SubscribeEvent";e[e["Event"]=3]="Event";e[e["UnsubscribeEvent"]=4]="UnsubscribeEvent"})(K||(K={}));class B2{constructor(t,n,i,s,r){this.vsWorker=t;this.req=n;this.channel=i;this.method=s;this.args=r;this.type=K.Request}}class Pe{constructor(t,n,i,s){this.vsWorker=t;this.seq=n;this.res=i;this.err=s;this.type=K.Reply}}class F2{constructor(t,n,i,s,r){this.vsWorker=t;this.req=n;this.channel=i;this.eventName=s;this.arg=r;this.type=K.SubscribeEvent}}class W2{constructor(t,n,i){this.vsWorker=t;this.req=n;this.event=i;this.type=K.Event}}class $2{constructor(t,n){this.vsWorker=t;this.req=n;this.type=K.UnsubscribeEvent}}class H2{constructor(t){this._workerId=-1;this._handler=t;this._lastSentReq=0;this._pendingReplies=Object.create(null);this._pendingEmitters=new Map;this._pendingEvents=new Map}setWorkerId(t){this._workerId=t}sendMessage(t,n,i){const s=String(++this._lastSentReq);return new Promise((r,o)=>{this._pendingReplies[s]={resolve:r,reject:o};this._send(new B2(this._workerId,s,t,n,i))})}listen(t,n,i){let s=null;const r=new J({onWillAddFirstListener:()=>{s=String(++this._lastSentReq);this._pendingEmitters.set(s,r);this._send(new F2(this._workerId,s,t,n,i))},onDidRemoveLastListener:()=>{this._pendingEmitters.delete(s);this._send(new $2(this._workerId,s));s=null}});return r.event}handleMessage(t){if(!t||!t.vsWorker){return}if(this._workerId!==-1&&t.vsWorker!==this._workerId){return}this._handleMessage(t)}createProxyToRemoteChannel(t,n){const i={get:(s,r)=>{if(typeof r==="string"&&!s[r]){if(Je(r)){s[r]=o=>{return this.listen(t,r,o)}}else if(Ze(r)){s[r]=this.listen(t,r,void 0)}else if(r.charCodeAt(0)===m.DollarSign){s[r]=async(...o)=>{await n?.();return this.sendMessage(t,r,o)}}}return s[r]}};return new Proxy(Object.create(null),i)}_handleMessage(t){switch(t.type){case K.Reply:return this._handleReplyMessage(t);case K.Request:return this._handleRequestMessage(t);case K.SubscribeEvent:return this._handleSubscribeEventMessage(t);case K.Event:return this._handleEventMessage(t);case K.UnsubscribeEvent:return this._handleUnsubscribeEventMessage(t)}}_handleReplyMessage(t){if(!this._pendingReplies[t.seq]){console.warn("Got reply to unknown seq");return}const n=this._pendingReplies[t.seq];delete this._pendingReplies[t.seq];if(t.err){let i=t.err;if(t.err.$isError){i=new Error;i.name=t.err.name;i.message=t.err.message;i.stack=t.err.stack}n.reject(i);return}n.resolve(t.res)}_handleRequestMessage(t){const n=t.req;const i=this._handler.handleMessage(t.channel,t.method,t.args);i.then(s=>{this._send(new Pe(this._workerId,n,s,void 0))},s=>{if(s.detail instanceof Error){s.detail=te(s.detail)}this._send(new Pe(this._workerId,n,void 0,te(s)))})}_handleSubscribeEventMessage(t){const n=t.req;const i=this._handler.handleEvent(t.channel,t.eventName,t.arg)(s=>{this._send(new W2(this._workerId,n,s))});this._pendingEvents.set(n,i)}_handleEventMessage(t){if(!this._pendingEmitters.has(t.req)){console.warn("Got event for unknown req");return}this._pendingEmitters.get(t.req).fire(t.event)}_handleUnsubscribeEventMessage(t){if(!this._pendingEvents.has(t.req)){console.warn("Got unsubscribe for unknown req");return}this._pendingEvents.get(t.req).dispose();this._pendingEvents.delete(t.req)}_send(t){const n=[];if(t.type===K.Request){for(let i=0;i<t.args.length;i++){if(t.args[i]instanceof ArrayBuffer){n.push(t.args[i])}}}else if(t.type===K.Reply){if(t.res instanceof ArrayBuffer){n.push(t.res)}}this._handler.sendMessage(t,n)}}function Ze(e){return e[0]==="o"&&e[1]==="n"&&je(e.charCodeAt(2))}function Je(e){return/^onDynamic/.test(e)&&je(e.charCodeAt(9))}class q2{constructor(t,n){this._localChannels=new Map;this._remoteChannels=new Map;this._protocol=new H2({sendMessage:(i,s)=>{t(i,s)},handleMessage:(i,s,r)=>this._handleMessage(i,s,r),handleEvent:(i,s,r)=>this._handleEvent(i,s,r)});this.requestHandler=n(this)}onmessage(t){this._protocol.handleMessage(t)}_handleMessage(t,n,i){if(t===Z1&&n===k2){return this.initialize(i[0])}const s=t===Z1?this.requestHandler:this._localChannels.get(t);if(!s){return Promise.reject(new Error(`Missing channel ${t} on worker thread`))}if(typeof s[n]!=="function"){return Promise.reject(new Error(`Missing method ${n} on worker thread channel ${t}`))}try{return Promise.resolve(s[n].apply(s,i))}catch(r){return Promise.reject(r)}}_handleEvent(t,n,i){const s=t===Z1?this.requestHandler:this._localChannels.get(t);if(!s){throw new Error(`Missing channel ${t} on worker thread`)}if(Je(n)){const r=s[n].call(s,i);if(typeof r!=="function"){throw new Error(`Missing dynamic event ${n} on request handler.`)}return r}if(Ze(n)){const r=s[n];if(typeof r!=="function"){throw new Error(`Missing event ${n} on request handler.`)}return r}throw new Error(`Malformed event name ${n}`)}setChannel(t,n){this._localChannels.set(t,n)}getChannel(t){if(!this._remoteChannels.has(t)){const n=this._protocol.createProxyToRemoteChannel(t);this._remoteChannels.set(t,n)}return this._remoteChannels.get(t)}async initialize(t){this._protocol.setWorkerId(t)}}let oe=false;function G2(e){if(oe){throw new Error("WebWorker already initialized!")}oe=true;const t=new q2(n=>globalThis.postMessage(n),n=>e(n));globalThis.onmessage=n=>{t.onmessage(n.data)};return t}function K2(e){globalThis.onmessage=t=>{if(!oe){G2(e)}}}K2(x2);
