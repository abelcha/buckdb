function Eh(e,t){t.forEach(function(n){n&&typeof n!=="string"&&!Array.isArray(n)&&Object.keys(n).forEach(function(s){if(s!=="default"&&!(s in e)){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,r.get?r:{enumerable:true,get:function(){return n[s]}})}})});return Object.freeze(e)}function Dn(e,t,n,s){function r(o){return o instanceof n?o:new n(function(i){i(o)})}return new(n||(n=Promise))(function(o,i){function a(u){try{c(s.next(u))}catch(f){i(f)}}function l(u){try{c(s["throw"](u))}catch(f){i(f)}}function c(u){u.done?o(u.value):r(u.value).then(a,l)}c((s=s.apply(e,[])).next())})}function Rn(e,t){var n={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},s,r,o,i;return i={next:a(0),"throw":a(1),"return":a(2)},typeof Symbol==="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(c){return function(u){return l([c,u])}}function l(c){if(s)throw new TypeError("Generator is already executing.");while(i&&(i=0,c[0]&&(n=0)),n)try{if(s=1,r&&(o=c[0]&2?r["return"]:c[0]?r["throw"]||((o=r["return"])&&o.call(r),0):r.next)&&!(o=o.call(r,c[1])).done)return o;if(r=0,o)c=[c[0]&2,o.value];switch(c[0]){case 0:case 1:o=c;break;case 4:n.label++;return{value:c[1],done:false};case 5:n.label++;r=c[1];c=[0];continue;case 7:c=n.ops.pop();n.trys.pop();continue;default:if(!(o=n.trys,o=o.length>0&&o[o.length-1])&&(c[0]===6||c[0]===2)){n=0;continue}if(c[0]===3&&(!o||c[1]>o[0]&&c[1]<o[3])){n.label=c[1];break}if(c[0]===6&&n.label<o[1]){n.label=o[1];o=c;break}if(o&&n.label<o[2]){n.label=o[2];n.ops.push(c);break}if(o[2])n.ops.pop();n.trys.pop();continue}c=t.call(e,n)}catch(u){c=[6,u];r=0}finally{s=o=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:true}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vh=1e-7;const xh=1e-4;class $h{constructor(t,n){this.backend=t;this.dataMover=n;this.data=new WeakMap;this.dataIdsCount=0}get(t){if(!this.data.has(t)){this.dataMover.moveData(this.backend,t)}return this.data.get(t)}set(t,n){this.dataIdsCount++;this.data.set(t,n)}has(t){return this.data.has(t)}delete(t){this.dataIdsCount--;return this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class ic{refCount(t){return pe("refCount")}incRef(t){return pe("incRef")}timerAvailable(){return true}time(t){return pe("time")}read(t){return pe("read")}readSync(t){return pe("readSync")}readToGPU(t,n){return pe("readToGPU")}numDataIds(){return pe("numDataIds")}disposeData(t,n){return pe("disposeData")}write(t,n,s){return pe("write")}move(t,n,s,r,o){return pe("move")}memory(){return pe("memory")}floatPrecision(){return pe("floatPrecision")}epsilon(){return this.floatPrecision()===32?vh:xh}dispose(){return pe("dispose")}}function pe(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mi(e,t,n){return Math.max(e,Math.min(t,n))}function Rs(e,t,n){const s=e[t];e[t]=e[n];e[n]=s}function S(e,t){if(!e){throw new Error(typeof t==="string"?t:t())}}function ge(e,t,n=""){S(Oe(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Ss(e){S(e!=null,()=>`The input to the tensor constructor must be a non-null value.`)}function Kr(e,t=[],n=false){if(t==null){t=[]}if(Array.isArray(e)||qe(e)&&!n){for(let s=0;s<e.length;++s){Kr(e[s],t,n)}}else{t.push(e)}return t}function q(e){if(e.length===0){return 1}let t=e[0];for(let n=1;n<e.length;n++){t*=e[n]}return t}function Oe(e,t){if(e===t){return true}if(e==null||t==null){return false}if(e.length!==t.length){return false}for(let n=0;n<e.length;n++){if(e[n]!==t[n]){return false}}return true}function js(e){return e%1===0}function fr(e,t){if(t<=e.length){return e}return e+" ".repeat(t-e.length)}function Ah(e,t){let n=1;let s=-1;for(let o=0;o<e.length;++o){if(e[o]>=0){n*=e[o]}else if(e[o]===-1){if(s!==-1){throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`)}s=o}else if(e[o]<0){throw Error(`Shapes can not be < 0. Found ${e[o]} at dim ${o}`)}}if(s===-1){if(t>0&&t!==n){throw Error(`Size(${t}) must match the product of shape ${e}`)}return e}if(n===0){throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`)}if(t%n!==0){throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`)}const r=e.slice();r[s]=t/n;return r}function Bt(e,t){const n=t.length;e=e==null?t.map((s,r)=>r):[].concat(e);S(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`);S(e.every(s=>js(s)),()=>`All values in axis param must be integers but got axis ${e}`);return e.map(s=>s<0?n+s:s)}function Dh(e,t){const n=[];const s=[];const r=t!=null&&Array.isArray(t)&&t.length===0;const o=t==null||r?null:Bt(t,e).sort();let i=0;for(let a=0;a<e.length;++a){if(o!=null){if(o[i]===a&&e[a]!==1){throw new Error(`Can't squeeze axis ${a} since its dim '${e[a]}' is not 1`)}if((o[i]==null||o[i]>a)&&e[a]===1){n.push(e[a]);s.push(a)}if(o[i]<=a){i++}}if(e[a]!==1){n.push(e[a]);s.push(a)}}return{newShape:n,keptDims:s}}function Xt(e,t){let n=null;if(e==null||e==="float32"){n=new Float32Array(t)}else if(e==="int32"){n=new Int32Array(t)}else if(e==="bool"){n=new Uint8Array(t)}else{throw new Error(`Unknown data type ${e}`)}return n}function Ht(e,t){let n=null;if(e==null||e==="float32"){n=new Float32Array(t)}else if(e==="int32"){n=new Int32Array(t)}else if(e==="bool"){n=new Uint8Array(t)}else if(e==="string"){n=new Array(t)}else{throw new Error(`Unknown data type ${e}`)}return n}function Rh(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s)){throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}}function Oh(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function Lh(e,t){if(t==="complex64"){return false}if(t==="float32"&&e!=="complex64"){return false}if(t==="int32"&&e!=="float32"&&e!=="complex64"){return false}if(t==="bool"&&e==="bool"){return false}return true}function qe(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function tl(e){if(e==="float32"||e==="int32"){return 4}else if(e==="complex64"){return 8}else if(e==="bool"){return 1}else{throw new Error(`Unknown dtype ${e}`)}}function Fh(e){if(e==null){return 0}let t=0;e.forEach(n=>t+=n.length);return t}function jr(e){return typeof e==="string"||e instanceof String}function Ph(e){return typeof e==="boolean"}function Uh(e){return typeof e==="number"}function Xr(e){if(Array.isArray(e)){return Xr(e[0])}if(e instanceof Float32Array){return"float32"}else if(e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray){return"int32"}else if(Uh(e)){return"float32"}else if(jr(e)){return"string"}else if(Ph(e)){return"bool"}return"float32"}function el(e){return!!(e&&e.constructor&&e.call&&e.apply)}function nt(e){const t=e.length;if(t<2){return[]}const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s){n[s]=n[s+1]*e[s+1]}return n}function ac(e,t,n,s=false){const r=new Array;if(t.length===1){const o=t[0]*(s?2:1);for(let i=0;i<o;i++){r[i]=n[e+i]}}else{const o=t[0];const i=t.slice(1);const a=i.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<o;l++){r[l]=ac(e+l*a,i,n,s)}}return r}function Se(e,t,n=false){if(e.length===0){return t[0]}const s=e.reduce((r,o)=>r*o)*(n?2:1);if(s===0){return[]}if(s!==t.length){throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`)}return ac(0,e,t,n)}function gi(e,t){const n=Yt(e,t);for(let s=0;s<n.length;s++){n[s]=1}return n}function Yt(e,t){if(t==null||t==="float32"||t==="complex64"){return new Float32Array(e)}else if(t==="int32"){return new Int32Array(e)}else if(t==="bool"){return new Uint8Array(e)}else{throw new Error(`Unknown data type ${t}`)}}function lc(e,t){const n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32"){return Se(e,new Float32Array(n))}else if(t==="int32"){return Se(e,new Int32Array(n))}else if(t==="bool"){return Se(e,new Uint8Array(n))}else{throw new Error(`Unknown data type ${t}`)}}function cc(e){e.forEach(t=>{S(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function He(e,t,n){if(t===0){return 0}else if(t===1){return e[0]}let s=e[e.length-1];for(let r=0;r<e.length-1;++r){s+=n[r]*e[r]}return s}function Es(e,t,n){if(t===0){return[]}else if(t===1){return[e]}const s=new Array(t);for(let r=0;r<s.length-1;++r){s[r]=Math.floor(e/n[r]);e-=s[r]*n[r]}s[s.length-1]=e;return s}function ps(e){return e&&e.then&&typeof e.then==="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nl="tfjsflags";class Mh{constructor(t){this.global=t;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=Vh;this.populateURLFlags()}setPlatform(t,n){if(this.platform!=null){if(!(lt().getBool("IS_TEST")||lt().getBool("PROD"))){console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)}}this.platformName=t;this.platform=n}registerFlag(t,n,s){this.flagRegistry[t]={evaluationFn:n,setHook:s};if(this.urlFlags[t]!=null){const r=this.urlFlags[t];if(!(lt().getBool("IS_TEST")||lt().getBool("PROD"))){console.warn(`Setting feature override from URL ${t}: ${r}.`)}this.set(t,r)}}async getAsync(t){if(t in this.flags){return this.flags[t]}this.flags[t]=await this.evaluateFlag(t);return this.flags[t]}get(t){if(t in this.flags){return this.flags[t]}const n=this.evaluateFlag(t);if(ps(n)){throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`)}this.flags[t]=n;return this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,n){if(this.flagRegistry[t]==null){throw new Error(`Cannot set flag ${t} as it has not been registered.`)}this.flags[t]=n;if(this.flagRegistry[t].setHook!=null){this.flagRegistry[t].setHook(n)}}evaluateFlag(t){if(this.flagRegistry[t]==null){throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`)}return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={};this.urlFlags={};this.populateURLFlags()}populateURLFlags(){if(typeof this.global==="undefined"||typeof this.global.location==="undefined"||typeof this.global.location.search==="undefined"){return}const t=this.getQueryParams(this.global.location.search);if(nl in t){const n=t[nl].split(",");n.forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=Ch(r,o)})}}}function Vh(e){const t={};e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>{Bh(t,s[0],s[1]);return s.join("=")});return t}function Bh(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function Ch(e,t){t=t.toLowerCase();if(t==="true"||t==="false"){return t==="true"}else if(`${+t}`===t){return+t}throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function lt(){return uc}let uc=null;function zh(e){uc=e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let go;function fc(){if(go==null){let e;if(typeof window!=="undefined"){e=window}else if(typeof global!=="undefined"){e=global}else if(typeof process!=="undefined"){e=process}else if(typeof self!=="undefined"){e=self}else{throw new Error("Could not find a global object")}go=e}return go}function Wh(){const e=fc();if(e._tfGlobals==null){e._tfGlobals=new Map}return e._tfGlobals}function yi(e,t){const n=Wh();if(n.has(e)){return n.get(e)}else{const s=t();n.set(e,s);return n.get(e)}}const hc="Abs";const bi="Acos";const _i="Acosh";const Yr="Add";const pc="AddN";const dc="All";const mc="Any";const gc="ArgMax";const yc="ArgMin";const wi="Asin";const Ni="Asinh";const Ii="Atan";const ki="Atanh";const Ti="Atan2";const bc="AvgPool";const Hh="AvgPoolGrad";const _c="AvgPool3D";const qh="AvgPool3DGrad";const wc="BatchMatMul";const Nc="BatchToSpaceND";const Ic="Bincount";const kc="BroadcastArgs";const Si="Cast";const Ei="Ceil";const vi="ClipByValue";const Tc="Complex";const Sc="ComplexAbs";const Ec="Concat";const vc="Conv2D";const xc="Conv2DBackpropFilter";const $c="Conv2DBackpropInput";const Ac="Conv3D";const Gh="Conv3DBackpropFilterV2";const Dc="Conv3DBackpropInputV2";const xi="Cos";const $i="Cosh";const Rc="Cumprod";const Oc="Cumsum";const Lc="CropAndResize";const Fc="DenseBincount";const Pc="DepthToSpace";const Uc="DepthwiseConv2dNative";const Mc="DepthwiseConv2dNativeBackpropFilter";const Vc="DepthwiseConv2dNativeBackpropInput";const Bc="Diag";const Cc="Dilation2D";const sl="Dilation2DBackpropInput";const rl="Dilation2DBackpropFilter";const Ai="RealDiv";const zc="Einsum";const Di="Elu";const Kh="EluGrad";const Ri="Erf";const Oi="Equal";const Li="Exp";const Wc="ExpandDims";const Fi="Expm1";const Hc="FFT";const qc="Fill";const Gc="FlipLeftRight";const Pi="Floor";const Ui="FloorDiv";const Kc="FusedBatchNorm";const jc="GatherV2";const Xc="GatherNd";const Mi="Greater";const Vi="GreaterEqual";const Bi="Identity";const Yc="IFFT";const Zc="Imag";const Ci="IsFinite";const zi="IsInf";const Wi="IsNan";const Jc="LeakyRelu";const Hi="Less";const qi="LessEqual";const Qc="LinSpace";const Gi="Log";const Ki="Log1p";const ji="LogicalAnd";const Xi="LogicalNot";const Yi="LogicalOr";const tu="LRN";const jh="LRNGrad";const eu="Max";const Zi="Maximum";const nu="MaxPool";const Xh="MaxPoolGrad";const su="MaxPool3D";const Yh="MaxPool3DGrad";const ru="MaxPoolWithArgmax";const ou="Mean";const iu="Min";const Ji="Minimum";const au="MirrorPad";const Qi="Mod";const lu="Multinomial";const ta="Multiply";const cu="Neg";const ea="NotEqual";const uu="NonMaxSuppressionV3";const fu="NonMaxSuppressionV4";const hu="NonMaxSuppressionV5";const pu="OnesLike";const du="OneHot";const mu="Pack";const gu="PadV2";const na="Pow";const yu="Prelu";const bu="Prod";const _u="RaggedGather";const wu="RaggedTensorToTensor";const Nu="Range";const Iu="Real";const sa="Reciprocal";const ra="Relu";const ku="Reshape";const Tu="ResizeNearestNeighbor";const Zh="ResizeNearestNeighborGrad";const Su="ResizeBilinear";const Jh="ResizeBilinearGrad";const oa="Relu6";const Eu="Reverse";const ia="Round";const aa="Rsqrt";const vu="ScatterNd";const xu="SearchSorted";const $u="Select";const la="Selu";const Au="Slice";const ca="Sin";const ua="Sinh";const fa="Sign";const ha="Sigmoid";const pa="Softplus";const da="Sqrt";const Du="Sum";const Ru="SpaceToBatchND";const Ou="SplitV";const Lu="Softmax";const Fu="SparseFillEmptyRows";const Pu="SparseReshape";const Uu="SparseSegmentMean";const Mu="SparseSegmentSum";const Vu="SparseToDense";const ma="SquaredDifference";const Qh="Square";const Bu="StridedSlice";const Cu="StringNGrams";const zu="StringSplit";const Wu="StringToHashBucketFast";const ga="Sub";const ya="Tan";const ba="Tanh";const _a="Tile";const Hu="TopK";const qu="Transform";const hr="Transpose";const Gu="Unique";const Ku="Unpack";const ju="UnsortedSegmentSum";const Xu="ZerosLike";const wa="Step";const Yu="RotateWithOffset";const Eo="_FusedMatMul";const vo="FusedConv2D";const xo="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(...e){if(!(lt().getBool("IS_TEST")||lt().getBool("PROD"))){console.warn(...e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr=yi("kernelRegistry",()=>new Map);const tp=yi("gradRegistry",()=>new Map);function ol(e,t){const n=Zu(e,t);return Nr.get(n)}function il(e){return tp.get(e)}function al(e){const t=Nr.entries();const n=[];while(true){const{done:s,value:r}=t.next();if(s){break}const[o,i]=r;const[a]=o.split("_");if(a===e){n.push(i)}}return n}function ep(e){const{kernelName:t,backendName:n}=e;const s=Zu(t,n);if(Nr.has(s)){xn(`The kernel '${t}' for backend '${n}' is already registered`)}Nr.set(s,e)}function Zu(e,t){return`${t}_${e}`}var jn=typeof globalThis!=="undefined"?globalThis:typeof window!=="undefined"?window:typeof global!=="undefined"?global:typeof self!=="undefined"?self:{};function np(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e["default"]:e}function sp(e){if(e.__esModule)return e;var t=e.default;if(typeof t=="function"){var n=function s(){if(this instanceof s){return Reflect.construct(t,arguments,this.constructor)}return t.apply(this,arguments)};n.prototype=t.prototype}else n={};Object.defineProperty(n,"__esModule",{value:true});Object.keys(e).forEach(function(s){var r=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(n,s,r.get?r:{enumerable:true,get:function(){return e[s]}})});return n}var Ju=St;var Ie=null;try{Ie=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function St(e,t,n){this.low=e|0;this.high=t|0;this.unsigned=!!n}St.prototype.__isLong__;Object.defineProperty(St.prototype,"__isLong__",{value:true});function fe(e){return(e&&e["__isLong__"])===true}St.isLong=fe;var ll={};var cl={};function Xn(e,t){var n,s,r;if(t){e>>>=0;if(r=0<=e&&e<256){s=cl[e];if(s)return s}n=Et(e,(e|0)<0?-1:0,true);if(r)cl[e]=n;return n}else{e|=0;if(r=-128<=e&&e<128){s=ll[e];if(s)return s}n=Et(e,e<0?-1:0,false);if(r)ll[e]=n;return n}}St.fromInt=Xn;function ke(e,t){if(isNaN(e))return t?On:Te;if(t){if(e<0)return On;if(e>=Qu)return n1}else{if(e<=-9223372036854776e3)return ce;if(e+1>=op)return e1}if(e<0)return ke(-e,t).neg();return Et(e%ds|0,e/ds|0,t)}St.fromNumber=ke;function Et(e,t,n){return new St(e,t,n)}St.fromBits=Et;var Ir=Math.pow;function Na(e,t,n){if(e.length===0)throw Error("empty string");if(e==="NaN"||e==="Infinity"||e==="+Infinity"||e==="-Infinity")return Te;if(typeof t==="number"){n=t,t=false}else{t=!!t}n=n||10;if(n<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");else if(s===0){return Na(e.substring(1),t,n).neg()}var r=ke(Ir(n,8));var o=Te;for(var i=0;i<e.length;i+=8){var a=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+a),n);if(a<8){var c=ke(Ir(n,a));o=o.mul(c).add(ke(l))}else{o=o.mul(r);o=o.add(ke(l))}}o.unsigned=t;return o}St.fromString=Na;function Le(e,t){if(typeof e==="number")return ke(e,t);if(typeof e==="string")return Na(e,t);return Et(e.low,e.high,typeof t==="boolean"?t:e.unsigned)}St.fromValue=Le;var ul=1<<16;var rp=1<<24;var ds=ul*ul;var Qu=ds*ds;var op=Qu/2;var fl=Xn(rp);var Te=Xn(0);St.ZERO=Te;var On=Xn(0,true);St.UZERO=On;var os=Xn(1);St.ONE=os;var t1=Xn(1,true);St.UONE=t1;var $o=Xn(-1);St.NEG_ONE=$o;var e1=Et(4294967295|0,2147483647|0,false);St.MAX_VALUE=e1;var n1=Et(4294967295|0,4294967295|0,true);St.MAX_UNSIGNED_VALUE=n1;var ce=Et(0,2147483648|0,false);St.MIN_VALUE=ce;var X=St.prototype;X.toInt=function e(){return this.unsigned?this.low>>>0:this.low};X.toNumber=function e(){if(this.unsigned)return(this.high>>>0)*ds+(this.low>>>0);return this.high*ds+(this.low>>>0)};X.toString=function e(t){t=t||10;if(t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(ce)){var n=ke(t),s=this.div(n),r=s.mul(n).sub(this);return s.toString(t)+r.toInt().toString(t)}else return"-"+this.neg().toString(t)}var o=ke(Ir(t,6),this.unsigned),i=this;var a="";while(true){var l=i.div(o),c=i.sub(l.mul(o)).toInt()>>>0,u=c.toString(t);i=l;if(i.isZero())return u+a;else{while(u.length<6)u="0"+u;a=""+u+a}}};X.getHighBits=function e(){return this.high};X.getHighBitsUnsigned=function e(){return this.high>>>0};X.getLowBits=function e(){return this.low};X.getLowBitsUnsigned=function e(){return this.low>>>0};X.getNumBitsAbs=function e(){if(this.isNegative())return this.eq(ce)?64:this.neg().getNumBitsAbs();var t=this.high!=0?this.high:this.low;for(var n=31;n>0;n--)if((t&1<<n)!=0)break;return this.high!=0?n+33:n+1};X.isZero=function e(){return this.high===0&&this.low===0};X.eqz=X.isZero;X.isNegative=function e(){return!this.unsigned&&this.high<0};X.isPositive=function e(){return this.unsigned||this.high>=0};X.isOdd=function e(){return(this.low&1)===1};X.isEven=function e(){return(this.low&1)===0};X.equals=function e(t){if(!fe(t))t=Le(t);if(this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1)return false;return this.high===t.high&&this.low===t.low};X.eq=X.equals;X.notEquals=function e(t){return!this.eq(t)};X.neq=X.notEquals;X.ne=X.notEquals;X.lessThan=function e(t){return this.comp(t)<0};X.lt=X.lessThan;X.lessThanOrEqual=function e(t){return this.comp(t)<=0};X.lte=X.lessThanOrEqual;X.le=X.lessThanOrEqual;X.greaterThan=function e(t){return this.comp(t)>0};X.gt=X.greaterThan;X.greaterThanOrEqual=function e(t){return this.comp(t)>=0};X.gte=X.greaterThanOrEqual;X.ge=X.greaterThanOrEqual;X.compare=function e(t){if(!fe(t))t=Le(t);if(this.eq(t))return 0;var n=this.isNegative(),s=t.isNegative();if(n&&!s)return-1;if(!n&&s)return 1;if(!this.unsigned)return this.sub(t).isNegative()?-1:1;return t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1};X.comp=X.compare;X.negate=function e(){if(!this.unsigned&&this.eq(ce))return ce;return this.not().add(os)};X.neg=X.negate;X.add=function e(t){if(!fe(t))t=Le(t);var n=this.high>>>16;var s=this.high&65535;var r=this.low>>>16;var o=this.low&65535;var i=t.high>>>16;var a=t.high&65535;var l=t.low>>>16;var c=t.low&65535;var u=0,f=0,h=0,p=0;p+=o+c;h+=p>>>16;p&=65535;h+=r+l;f+=h>>>16;h&=65535;f+=s+a;u+=f>>>16;f&=65535;u+=n+i;u&=65535;return Et(h<<16|p,u<<16|f,this.unsigned)};X.subtract=function e(t){if(!fe(t))t=Le(t);return this.add(t.neg())};X.sub=X.subtract;X.multiply=function e(t){if(this.isZero())return Te;if(!fe(t))t=Le(t);if(Ie){var n=Ie.mul(this.low,this.high,t.low,t.high);return Et(n,Ie.get_high(),this.unsigned)}if(t.isZero())return Te;if(this.eq(ce))return t.isOdd()?ce:Te;if(t.eq(ce))return this.isOdd()?ce:Te;if(this.isNegative()){if(t.isNegative())return this.neg().mul(t.neg());else return this.neg().mul(t).neg()}else if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(fl)&&t.lt(fl))return ke(this.toNumber()*t.toNumber(),this.unsigned);var s=this.high>>>16;var r=this.high&65535;var o=this.low>>>16;var i=this.low&65535;var a=t.high>>>16;var l=t.high&65535;var c=t.low>>>16;var u=t.low&65535;var f=0,h=0,p=0,d=0;d+=i*u;p+=d>>>16;d&=65535;p+=o*u;h+=p>>>16;p&=65535;p+=i*c;h+=p>>>16;p&=65535;h+=r*u;f+=h>>>16;h&=65535;h+=o*c;f+=h>>>16;h&=65535;h+=i*l;f+=h>>>16;h&=65535;f+=s*u+r*c+o*l+i*a;f&=65535;return Et(p<<16|d,f<<16|h,this.unsigned)};X.mul=X.multiply;X.divide=function e(t){if(!fe(t))t=Le(t);if(t.isZero())throw Error("division by zero");if(Ie){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1){return this}var n=(this.unsigned?Ie.div_u:Ie.div_s)(this.low,this.high,t.low,t.high);return Et(n,Ie.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?On:Te;var s,r,o;if(!this.unsigned){if(this.eq(ce)){if(t.eq(os)||t.eq($o))return ce;else if(t.eq(ce))return os;else{var i=this.shr(1);s=i.div(t).shl(1);if(s.eq(Te)){return t.isNegative()?os:$o}else{r=this.sub(t.mul(s));o=s.add(r.div(t));return o}}}else if(t.eq(ce))return this.unsigned?On:Te;if(this.isNegative()){if(t.isNegative())return this.neg().div(t.neg());return this.neg().div(t).neg()}else if(t.isNegative())return this.div(t.neg()).neg();o=Te}else{if(!t.unsigned)t=t.toUnsigned();if(t.gt(this))return On;if(t.gt(this.shru(1)))return t1;o=On}r=this;while(r.gte(t)){s=Math.max(1,Math.floor(r.toNumber()/t.toNumber()));var a=Math.ceil(Math.log(s)/Math.LN2),l=a<=48?1:Ir(2,a-48),c=ke(s),u=c.mul(t);while(u.isNegative()||u.gt(r)){s-=l;c=ke(s,this.unsigned);u=c.mul(t)}if(c.isZero())c=os;o=o.add(c);r=r.sub(u)}return o};X.div=X.divide;X.modulo=function e(t){if(!fe(t))t=Le(t);if(Ie){var n=(this.unsigned?Ie.rem_u:Ie.rem_s)(this.low,this.high,t.low,t.high);return Et(n,Ie.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};X.mod=X.modulo;X.rem=X.modulo;X.not=function e(){return Et(~this.low,~this.high,this.unsigned)};X.and=function e(t){if(!fe(t))t=Le(t);return Et(this.low&t.low,this.high&t.high,this.unsigned)};X.or=function e(t){if(!fe(t))t=Le(t);return Et(this.low|t.low,this.high|t.high,this.unsigned)};X.xor=function e(t){if(!fe(t))t=Le(t);return Et(this.low^t.low,this.high^t.high,this.unsigned)};X.shiftLeft=function e(t){if(fe(t))t=t.toInt();if((t&=63)===0)return this;else if(t<32)return Et(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned);else return Et(0,this.low<<t-32,this.unsigned)};X.shl=X.shiftLeft;X.shiftRight=function e(t){if(fe(t))t=t.toInt();if((t&=63)===0)return this;else if(t<32)return Et(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned);else return Et(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};X.shr=X.shiftRight;X.shiftRightUnsigned=function e(t){if(fe(t))t=t.toInt();t&=63;if(t===0)return this;else{var n=this.high;if(t<32){var s=this.low;return Et(s>>>t|n<<32-t,n>>>t,this.unsigned)}else if(t===32)return Et(n,0,this.unsigned);else return Et(n>>>t-32,0,this.unsigned)}};X.shru=X.shiftRightUnsigned;X.shr_u=X.shiftRightUnsigned;X.toSigned=function e(){if(!this.unsigned)return this;return Et(this.low,this.high,false)};X.toUnsigned=function e(){if(this.unsigned)return this;return Et(this.low,this.high,true)};X.toBytes=function e(t){return t?this.toBytesLE():this.toBytesBE()};X.toBytesLE=function e(){var t=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};X.toBytesBE=function e(){var t=this.high,n=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};St.fromBytes=function e(t,n,s){return s?St.fromBytesLE(t,n):St.fromBytesBE(t,n)};St.fromBytesLE=function e(t,n){return new St(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,n)};St.fromBytesBE=function e(t,n){return new St(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],n)};var s1=np(Ju);var ip=Eh({__proto__:null,default:s1},[Ju]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=s1||ip;function Zr(e){return $n.fromString(e,true,16)}const r1=Zr("c3a5c85c97cb3127");const En=Zr("b492b66fbe98f273");const Qt=Zr("9ae16a3b2f90404f");function Ao(e){return e.xor(e.shru(47))}function o1(e,t,n){const s=e.slice(t,t+n);return $n.fromBytes(Array.from(s),true,true)}function _t(e,t){return o1(e,t,8)}function hl(e,t){return o1(e,t,4)}function Pt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function _n(e,t,n=Zr("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);r=r.xor(r.shru(47));r=r.mul(n);return r}function ap(e,t,n,s,r,o){r=r.add(e);o=Pt(o.add(r).add(s),21);const i=r;r=r.add(t);r=r.add(n);o=o.add(Pt(r,44));return[r.add(s),o.add(i)]}function ar(e,t,n,s){return ap(_t(e,t),_t(e,t+8),_t(e,t+16),_t(e,t+24),n,s)}function lp(e,t=e.length){if(t>=8){const n=Qt.add(t*2);const s=_t(e,0).add(Qt);const r=_t(e,t-8);const o=Pt(r,37).mul(n).add(s);const i=Pt(s,25).add(r).mul(n);return _n(o,i,n)}if(t>=4){const n=Qt.add(t*2);const s=hl(e,0);return _n(s.shl(3).add(t),hl(e,t-4),n)}if(t>0){const n=e[0];const s=e[t>>1];const r=e[t-1];const o=n+(s<<8);const i=t+(r<<2);return Ao(Qt.mul(o).xor(r1.mul(i))).mul(Qt)}return Qt}function cp(e,t=e.length){const n=Qt.add(t*2);const s=_t(e,0).mul(En);const r=_t(e,8);const o=_t(e,t-8).mul(n);const i=_t(e,t-16).mul(Qt);return _n(Pt(s.add(r),43).add(Pt(o,30)).add(i),s.add(Pt(r.add(Qt),18)).add(o),n)}function up(e,t=e.length){const n=Qt.add(t*2);const s=_t(e,0).mul(Qt);const r=_t(e,8);const o=_t(e,t-8).mul(n);const i=_t(e,t-16).mul(Qt);const a=Pt(s.add(r),43).add(Pt(o,30)).add(i);const l=_n(a,s.add(Pt(r.add(Qt),18)).add(o),n);const c=_t(e,16).mul(n);const u=_t(e,24);const f=a.add(_t(e,t-32)).mul(n);const h=l.add(_t(e,t-24)).mul(n);return _n(Pt(c.add(u),43).add(Pt(f,30)).add(h),c.add(Pt(u.add(s),18)).add(f),n)}function fp(e,t=e.length){const n=$n.fromNumber(81,true);if(t<=32){if(t<=16){return lp(e,t)}else{return cp(e,t)}}else if(t<=64){return up(e,t)}let s=n;let r=n.mul(En).add(113);let o=Ao(r.mul(Qt).add(113)).mul(Qt);let i=[$n.UZERO,$n.UZERO];let a=[$n.UZERO,$n.UZERO];s=s.mul(Qt).add(_t(e,0));let l=0;const c=(t-1>>6)*64;const u=c+(t-1&63)-63;do{s=Pt(s.add(r).add(i[0]).add(_t(e,l+8)),37).mul(En);r=Pt(r.add(i[1]).add(_t(e,l+48)),42).mul(En);s=s.xor(a[1]);r=r.add(i[0]).add(_t(e,l+40));o=Pt(o.add(a[0]),33).mul(En);i=ar(e,l,i[1].mul(En),s.add(a[0]));a=ar(e,l+32,o.add(a[1]),r.add(_t(e,l+16)));[o,s]=[s,o];l+=64}while(l!==c);const f=En.add(o.and(255).shl(1));l=u;a[0]=a[0].add(t-1&63);i[0]=i[0].add(a[0]);a[0]=a[0].add(i[0]);s=Pt(s.add(r).add(i[0]).add(_t(e,l+8)),37).mul(f);r=Pt(r.add(i[1]).add(_t(e,l+48)),42).mul(f);s=s.xor(a[1].mul(9));r=r.add(i[0].mul(9).add(_t(e,l+40)));o=Pt(o.add(a[0]),33).mul(f);i=ar(e,l,i[1].mul(f),s.add(a[0]));a=ar(e,l+32,o.add(a[1]),r.add(_t(e,l+16)));[o,s]=[s,o];return _n(_n(i[0],a[0],f).add(Ao(r).mul(r1)).add(o),_n(i[1],a[1],f).add(s),f)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ia(e,t){if(t==="string"){return Pn(e)}return Yn([e],t)}function hp(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function Yn(e,t){if(t==="string"){throw new Error("Cannot convert a string[] to a TypedArray")}if(Array.isArray(e)){e=Kr(e)}if(lt().getBool("DEBUG")){Rh(e,t)}if(hp(e,t)){return e}if(t==null||t==="float32"||t==="complex64"){return new Float32Array(e)}else if(t==="int32"){return new Int32Array(e)}else if(t==="bool"){const n=new Uint8Array(e.length);for(let s=0;s<n.length;++s){if(Math.round(e[s])!==0){n[s]=1}}return n}else{throw new Error(`Unknown data type ${t}`)}}function ms(){return lt().platform.now()}function Pn(e,t="utf-8"){t=t||"utf-8";return lt().platform.encode(e,t)}function Xs(e,t="utf-8"){t=t||"utf-8";return lt().platform.decode(e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pp{constructor(t,n){this.backendTimer=t;this.logger=n;if(n==null){this.logger=new mp}}profileKernel(t,n,s){let r;const o=()=>{r=s()};let i;const a=ms();if(this.backendTimer.timerAvailable()){i=this.backendTimer.time(o)}else{o();for(const c of r){c.dataSync()}i=Promise.resolve({kernelMs:ms()-a})}if(lt().getBool("CHECK_COMPUTATION_FOR_ERRORS")){for(let c=0;c<r.length;c++){const u=r[c];u.data().then(f=>{dp(f,u.dtype,t)})}}const l={kernelName:t,outputs:r,inputs:n,timeMs:i.then(c=>c.kernelMs),extraInfo:i.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")};return l}logKernelProfile(t){const{kernelName:n,outputs:s,timeMs:r,inputs:o,extraInfo:i}=t;s.forEach(a=>{Promise.all([a.data(),r,i]).then(l=>{this.logger.logKernelProfile(n,a,l[0],l[1],o,l[2])})})}}function dp(e,t,n){if(t!=="float32"){return false}for(let s=0;s<e.length;s++){const r=e[s];if(isNaN(r)||!isFinite(r)){console.warn(`Found ${r} in the result of '${n}'`);return true}}return false}class mp{logKernelProfile(t,n,s,r,o,i){const a=typeof r==="number"?fr(`${r}ms`,9):r["error"];const l=fr(t,25);const c=n.rank;const u=n.size;const f=fr(n.shape.toString(),14);let h="";for(const p in o){const d=o[p];if(d!=null){const g=d.shape||n.shape;const m=g.length;h+=`${p}: ${m}D ${m>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${f}	%c${u}	%c${h}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gp(e,t,n){const s={};const r={};for(let l=0;l<t.length;l++){s[t[l].id]=true}for(let l=0;l<e.length;l++){const c=e[l];const u=c.inputs;for(const f in u){const h=u[f];let p=false;for(let d=0;d<t.length;d++){if(s[h.id]){c.outputs.forEach(g=>s[g.id]=true);p=true;r[c.id]=true;break}}if(p){break}}}const o={};o[n.id]=true;const i={};for(let l=e.length-1;l>=0;l--){const c=e[l];const u=c.inputs;for(let f=0;f<c.outputs.length;f++){if(o[c.outputs[f].id]){for(const h in u){o[u[h].id]=true;i[c.id]=true}break}}}const a=[];for(let l=0;l<e.length;l++){const c=e[l];if(r[c.id]&&i[c.id]){const u={};for(const h in c.inputs){const p=c.inputs[h];if(s[p.id]){u[h]=p}}const f=Object.assign({},c);f.inputs=u;f.outputs=c.outputs;a.push(f)}}return a}function yp(e,t,n,s){for(let r=t.length-1;r>=0;r--){const o=t[r];const i=[];o.outputs.forEach(l=>{const c=e[l.id];if(c!=null){i.push(c)}else{i.push(null)}});if(o.gradient==null){throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`)}const a=o.gradient(i);for(const l in o.inputs){if(!(l in a)){throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`)}const c=n(()=>a[l]());if(c.dtype!=="float32"){throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`)}const u=o.inputs[l];if(!Oe(c.shape,u.shape)){throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`)}if(e[u.id]==null){e[u.id]=c}else{const f=e[u.id];e[u.id]=s(f,c);f.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pl=20;const Os=3;const yo=7;function bp(e,t,n,s){const r=nt(t);const o=_p(e,t,n,r);const i=t.length;const a=pr(e,t,n,r,o);const l=["Tensor"];if(s){l.push(`  dtype: ${n}`);l.push(`  rank: ${i}`);l.push(`  shape: [${t}]`);l.push(`  values:`)}l.push(a.map(c=>"    "+c).join("\n"));return l.join("\n")}function _p(e,t,n,s){const r=q(t);const o=s[s.length-1];const i=new Array(o).fill(0);const a=t.length;const l=n==="complex64"?Ps(e):e;if(a>1){for(let c=0;c<r/o;c++){const u=c*o;for(let f=0;f<o;f++){i[f]=Math.max(i[f],Fs(l[u+f],0,n).length)}}}return i}function Fs(e,t,n){let s;if(Array.isArray(e)){s=`${parseFloat(e[0].toFixed(yo))} + ${parseFloat(e[1].toFixed(yo))}j`}else if(jr(e)){s=`'${e}'`}else if(n==="bool"){s=i1(e)}else{s=parseFloat(e.toFixed(yo)).toString()}return fr(s,t)}function i1(e){return e===0?"false":"true"}function pr(e,t,n,s,r,o=true){const i=n==="complex64"?2:1;const a=t[0];const l=t.length;if(l===0){if(n==="complex64"){const g=Ps(e);return[Fs(g[0],0,n)]}if(n==="bool"){return[i1(e[0])]}return[e[0].toString()]}if(l===1){if(a>pl){const m=Os*i;let b=Array.from(e.slice(0,m));let _=Array.from(e.slice((a-Os)*i,a*i));if(n==="complex64"){b=Ps(b);_=Ps(_)}return["["+b.map((w,N)=>Fs(w,r[N],n)).join(", ")+", ..., "+_.map((w,N)=>Fs(w,r[a-Os+N],n)).join(", ")+"]"]}const g=n==="complex64"?Ps(e):Array.from(e);return["["+g.map((m,b)=>Fs(m,r[b],n)).join(", ")+"]"]}const c=t.slice(1);const u=s.slice(1);const f=s[0]*i;const h=[];if(a>pl){for(let g=0;g<Os;g++){const m=g*f;const b=m+f;h.push(...pr(e.slice(m,b),c,n,u,r,false))}h.push("...");for(let g=a-Os;g<a;g++){const m=g*f;const b=m+f;h.push(...pr(e.slice(m,b),c,n,u,r,g===a-1))}}else{for(let g=0;g<a;g++){const m=g*f;const b=m+f;h.push(...pr(e.slice(m,b),c,n,u,r,g===a-1))}}const p=l===2?",":"";h[0]="["+h[0]+p;for(let g=1;g<h.length-1;g++){h[g]=" "+h[g]+p}let d=",\n";for(let g=2;g<l;g++){d+="\n"}h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":d);return h}function Ps(e){const t=[];for(let n=0;n<e.length;n+=2){t.push([e[n],e[n+1]])}return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ut{constructor(t,n,s){this.dtype=n;this.shape=t.slice();this.size=q(t);if(s!=null){const r=s.length;S(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64"){throw new Error(`complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).`)}this.values=s||Ht(n,this.size);this.strides=nt(t)}set(t,...n){if(n.length===0){n=[0]}S(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const s=this.locToIndex(n);this.values[s]=t}get(...t){if(t.length===0){t=[0]}let n=0;for(const r of t){if(r<0||r>=this.shape[n]){const o=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(o)}n++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r){s+=this.strides[r]*t[r]}return this.values[s]}locToIndex(t){if(this.rank===0){return 0}else if(this.rank===1){return t[0]}let n=t[t.length-1];for(let s=0;s<t.length-1;++s){n+=this.strides[s]*t[s]}return n}indexToLoc(t){if(this.rank===0){return[]}else if(this.rank===1){return[t]}const n=new Array(this.shape.length);for(let s=0;s<n.length-1;++s){n[s]=Math.floor(t/this.strides[s]);t-=n[s]*this.strides[s]}n[n.length-1]=t;return n}get rank(){return this.shape.length}toTensor(){return $e().makeTensor(this.values,this.shape,this.dtype)}}let $e=null;let ss=null;function wp(e){$e=e}function Np(e){ss=e}class Kt{constructor(t,n,s,r){this.kept=false;this.isDisposedInternal=false;this.shape=t.slice();this.dtype=n||"float32";this.size=q(t);this.strides=nt(t);this.dataId=s;this.id=r;this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return ss.buffer(this.shape,this.dtype,t)}bufferSync(){return ss.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Se(this.shape,t,this.dtype==="complex64")}arraySync(){return Se(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=$e().read(this.dataId);if(this.dtype==="string"){const n=await t;try{return n.map(s=>Xs(s))}catch(s){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){this.throwIfDisposed();return $e().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=$e().readSync(this.dataId);if(this.dtype==="string"){try{return t.map(n=>Xs(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}async bytes(){this.throwIfDisposed();const t=await $e().read(this.dataId);if(this.dtype==="string"){return t}else{return new Uint8Array(t.buffer)}}dispose(){if(this.isDisposed){return}$e().disposeTensor(this);this.isDisposedInternal=true}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed){throw new Error(`Tensor is disposed.`)}}print(t=false){return ss.print(this,t)}clone(){this.throwIfDisposed();return ss.clone(this)}toString(t=false){const n=this.dataSync();return bp(n,this.shape,this.dtype,t)}cast(t){this.throwIfDisposed();return ss.cast(this,t)}variable(t=true,n,s){this.throwIfDisposed();return $e().makeVariable(this,t,n,s)}}Object.defineProperty(Kt,Symbol.hasInstance,{value:e=>{return!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null}});function Ip(){return yi("Tensor",()=>{return Kt})}Ip();class Do extends Kt{constructor(t,n,s,r){super(t.shape,t.dtype,t.dataId,r);this.trainable=n;this.name=s}assign(t){if(t.dtype!==this.dtype){throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`)}if(!Oe(t.shape,this.shape)){throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`)}$e().disposeTensor(this);this.dataId=t.dataId;$e().incRef(this,null)}dispose(){$e().disposeVariable(this);this.isDisposedInternal=true}}Object.defineProperty(Do,Symbol.hasInstance,{value:e=>{return e instanceof Kt&&e.assign!=null&&e.assign instanceof Function}});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var dl;(function(e){e["R0"]="R0";e["R1"]="R1";e["R2"]="R2";e["R3"]="R3";e["R4"]="R4";e["R5"]="R5";e["R6"]="R6"})(dl||(dl={}));var Ro;(function(e){e["float32"]="float32";e["int32"]="int32";e["bool"]="int32";e["complex64"]="complex64"})(Ro||(Ro={}));var Oo;(function(e){e["float32"]="float32";e["int32"]="int32";e["bool"]="bool";e["complex64"]="complex64"})(Oo||(Oo={}));var Lo;(function(e){e["float32"]="float32";e["int32"]="float32";e["bool"]="float32";e["complex64"]="complex64"})(Lo||(Lo={}));var Fo;(function(e){e["float32"]="complex64";e["int32"]="complex64";e["bool"]="complex64";e["complex64"]="complex64"})(Fo||(Fo={}));const kp={"float32":Lo,"int32":Ro,"bool":Oo,"complex64":Fo};function vs(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string"){return"string"}throw new Error(`Can not upcast ${e} with ${t}`)}return kp[e][t]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(e,t){if(e.dtype===t.dtype){return[e,t]}const n=vs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Tp(e,t){S(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function a1(e){const t=[];const n=new Set;l1(e,t,n);return t}function l1(e,t,n){if(e==null){return}if(e instanceof Kt){t.push(e);return}if(!Sp(e)){return}const s=e;for(const r in s){const o=s[r];if(!n.has(o)){n.add(o);l1(o,t,n)}}}function Sp(e){return Array.isArray(e)||typeof e==="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bo(e){return e.kernelName!=null}class ml{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=false;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables){this.registeredVariables[t].dispose()}}}class gs{constructor(t){this.ENV=t;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new ml}async ready(){if(this.pendingBackendInit!=null){return this.pendingBackendInit.then(()=>{})}if(this.backendInstance!=null){return}const t=this.getSortedBackends();for(let n=0;n<t.length;n++){const s=t[n];const r=await this.initializeBackend(s).success;if(r){await this.setBackend(s);return}}throw new Error(`Could not initialize any backends, all backend initializations failed.`)}get backend(){if(this.pendingBackendInit!=null){throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`)}if(this.backendInstance==null){const{name:t,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n){throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`)}this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(t in this.registryFactory){const{asyncInit:n}=this.initializeBackend(t);if(n){return null}}else{return null}}return this.registry[t]}findBackendFactory(t){if(!(t in this.registryFactory)){return null}return this.registryFactory[t].factory}registerBackend(t,n,s=1){if(t in this.registryFactory){xn(`${t} backend was already registered. Reusing existing backend factory.`);return false}this.registryFactory[t]={factory:n,priority:s};return true}async setBackend(t){if(this.registryFactory[t]==null){throw new Error(`Backend name '${t}' not found in registry`)}this.backendName=t;if(this.registry[t]==null){this.backendInstance=null;const{success:n,asyncInit:s}=this.initializeBackend(t);const r=s?await n:n;if(!r){return false}}this.backendInstance=this.registry[t];this.setupRegisteredKernels();this.profiler=new pp(this.backendInstance);return true}setupRegisteredKernels(){const t=al(this.backendName);t.forEach(n=>{if(n.setupFunc!=null){n.setupFunc(this.backendInstance)}})}disposeRegisteredKernels(t){const n=al(t);n.forEach(s=>{if(s.disposeFunc!=null){s.disposeFunc(this.registry[t])}})}initializeBackend(t){const n=this.registryFactory[t];if(n==null){throw new Error(`Cannot initialize backend ${t}, no registration found.`)}try{const s=n.factory();if(s&&!(s instanceof ic)&&typeof s.then==="function"){const r=++this.pendingBackendInitId;const o=s.then(i=>{if(r<this.pendingBackendInitId){return false}this.registry[t]=i;this.pendingBackendInit=null;return true}).catch(i=>{if(r<this.pendingBackendInitId){return false}this.pendingBackendInit=null;xn(`Initialization of backend ${t} failed`);xn(i.stack||i.message);return false});this.pendingBackendInit=o;return{success:o,asyncInit:true}}else{this.registry[t]=s;return{success:true,asyncInit:false}}}catch(s){xn(`Initialization of backend ${t} failed`);xn(s.stack||s.message);return{success:false,asyncInit:false}}}removeBackend(t){if(!(t in this.registryFactory)){throw new Error(`${t} backend not found in registry`)}if(this.backendName===t&&this.pendingBackendInit!=null){this.pendingBackendInitId++}if(t in this.registry){this.disposeRegisteredKernels(t);this.registry[t].dispose();delete this.registry[t]}delete this.registryFactory[t];if(this.backendName===t){this.pendingBackendInit=null;this.backendName=null;this.backendInstance=null}}getSortedBackends(){if(Object.keys(this.registryFactory).length===0){throw new Error("No backend found in registry.")}return Object.keys(this.registryFactory).sort((t,n)=>{return this.registryFactory[n].priority-this.registryFactory[t].priority})}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let n=0;n<t.length;n++){const s=t[n];const{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r){return{name:s,asyncInit:o}}}throw new Error(`Could not initialize any backends, all backend initializations failed.`)}moveData(t,n){const s=this.state.tensorInfo.get(n);const r=s.backend;const o=this.readSync(n);const i=r.refCount(n);r.disposeData(n,true);s.backend=t;t.move(n,o,s.shape,s.dtype,i);if(this.shouldCheckForMemLeaks()){this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}}tidy(t,n){let s=null;if(n==null){if(typeof t!=="function"){throw new Error("Please provide a function to tidy()")}n=t}else{if(typeof t!=="string"&&!(t instanceof String)){throw new Error("When calling with two arguments, the first argument to tidy() must be a string")}if(typeof n!=="function"){throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function")}s=t}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>{r=n();if(r instanceof Promise){console.error("Cannot return a Promise inside of tidy.")}return r})}scopedRun(t,n,s){t();try{const r=s();n();return r}catch(r){n();throw r}}nextTensorId(){return gs.nextTensorId++}nextVariableId(){return gs.nextVariableId++}clone(t){const n=R.runKernel(Bi,{x:t});const s={x:t};const r=i=>({x:()=>{const a="float32";const l={x:i};const c={dtype:a};return R.runKernel(Si,l,c)}});const o=[];this.addTapeNode(this.state.activeScope.name,s,[n],r,o,{});return n}runKernel(t,n,s){if(this.backendName==null){this.backend}const r=ol(t,this.backendName)!=null;if(!r){throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`)}return this.runKernelFunc({kernelName:t,inputs:n,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,n,s){const r=this.backend.numDataIds();let o=0;s.forEach(l=>{o+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];const a=r-n-o-i;if(a>0){throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}}runKernelFunc(t){let n;let s=[];const r=this.isTapeOn();const o=this.state.numBytes;const i=this.state.numTensors;if(this.shouldCheckForMemLeaks()){this.state.numDataMovesStack.push(0)}let a;if(this.backendName==null){this.backend}let l;const c=bo(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(bo(t)){const{kernelName:d,inputs:g,attrs:m}=t;if(this.backendName==null){this.backend}const b=ol(d,this.backendName);S(b!=null,()=>`Cannot find registered kernel '${d}' for backend '${this.backendName}'`);a=()=>{const _=this.backend.numDataIds();l=b.kernelFunc({inputs:g,attrs:m,backend:this.backend});const w=Array.isArray(l)?l:[l];if(this.shouldCheckForMemLeaks()){this.checkKernelForMemLeak(d,_,w)}const N=w.map(I=>{if(I.rank!=null){return I}return this.makeTensorFromTensorInfo(I)});if(r){const I=this.getTensorsForGradient(d,g,N);s=this.saveTensorsForBackwardMode(I)}return N}}else{const{forwardFunc:d}=t;const g=m=>{if(!r){return}s=m.map(b=>this.keep(this.clone(b)))};a=()=>{const m=this.backend.numDataIds();l=this.tidy(()=>d(this.backend,g));const b=Array.isArray(l)?l:[l];if(this.shouldCheckForMemLeaks()){this.checkKernelForMemLeak(c,m,b)}return b}}const{inputs:u,attrs:f}=t;const h=bo(t)?null:t.backwardsFunc;let p;this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{if(!this.ENV.getBool("DEBUG")&&!this.state.profiling){n=a()}else{p=this.profiler.profileKernel(c,u,()=>a());if(this.ENV.getBool("DEBUG")){this.profiler.logKernelProfile(p)}n=p.outputs}});if(r){this.addTapeNode(c,u,n,h,s,f)}if(this.state.profiling){this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(d=>u[d]!=null?u[d].shape:null),outputShapes:n.map(d=>d.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo})}return Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(t){const n=t.map(s=>this.keep(this.clone(s)));return n}getTensorsForGradient(t,n,s){const r=il(t);if(r!=null){const o=r.inputsToSave||[];const i=r.outputsToSave||[];let a;if(r.saveAllInputs){S(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array.");a=Object.keys(n).map(c=>n[c])}else{a=o.map(c=>n[c])}const l=s.filter((c,u)=>i[u]);return a.concat(l)}return[]}makeTensor(t,n,s,r){if(t==null){throw new Error("Values passed to engine.makeTensor() are null")}s=s||"float32";r=r||this.backend;let o=t;if(s==="string"&&jr(t[0])){o=t.map(l=>Pn(l))}const i=r.write(o,n,s);const a=new Kt(n,s,i,this.nextTensorId());this.trackTensor(a,r);if(s==="string"){const l=this.state.tensorInfo.get(i);const c=Fh(o);this.state.numBytes+=c-l.bytes;l.bytes=c}return a}makeTensorFromDataId(t,n,s,r){s=s||"float32";const o={dataId:t,shape:n,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(t,n){const{dataId:s,shape:r,dtype:o}=t;const i=new Kt(r,o,s,this.nextTensorId());this.trackTensor(i,n);return i}makeVariable(t,n=true,s,r){s=s||this.nextVariableId().toString();if(r!=null&&r!==t.dtype){t=t.cast(r)}const o=new Do(t,n,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null){throw new Error(`Variable with name ${o.name} was already registered`)}this.state.registeredVariables[o.name]=o;this.incRef(o,this.backend);return o}trackTensor(t,n){this.state.numTensors++;if(t.dtype==="string"){this.state.numStringTensors++}let s=0;if(t.dtype!=="complex64"&&t.dtype!=="string"){s=t.size*tl(t.dtype)}this.state.numBytes+=s;if(!this.state.tensorInfo.has(t.dataId)){this.state.numDataBuffers++;this.state.tensorInfo.set(t.dataId,{backend:n||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})}if(!(t instanceof Do)){this.track(t)}}incRef(t,n){this.trackTensor(t,n);this.backend.incRef(t.dataId)}removeDataId(t,n){if(this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===n){this.state.tensorInfo.delete(t);this.state.numDataBuffers--}}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId)){return}const n=this.state.tensorInfo.get(t.dataId);this.state.numTensors--;if(t.dtype==="string"){this.state.numStringTensors--;this.state.numBytes-=n.bytes}if(t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*tl(t.dtype);this.state.numBytes-=s}if(n.backend.disposeData(t.dataId)){this.removeDataId(t.dataId,n.backend)}}disposeVariables(){for(const t in this.state.registeredVariables){const n=this.state.registeredVariables[t];this.disposeVariable(n)}}disposeVariable(t){this.disposeTensor(t);if(this.state.registeredVariables[t.name]!=null){delete this.state.registeredVariables[t.name]}}memory(){const t=this.backend.memory();t.numTensors=this.state.numTensors;t.numDataBuffers=this.state.numDataBuffers;t.numBytes=this.state.numBytes;if(this.state.numStringTensors>0){t.unreliable=true;if(t.reasons==null){t.reasons=[]}t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")}return t}async profile(t){this.state.profiling=true;const n=this.state.numBytes;const s=this.state.numTensors;this.state.activeProfile.kernels=[];this.state.activeProfile.result=await t();this.state.profiling=false;this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot));this.state.activeProfile.newBytes=this.state.numBytes-n;this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels){r.kernelTimeMs=await r.kernelTimeMs;r.extraInfo=await r.extraInfo}return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,n,s,r,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:n,outputs:s,saved:o};const l=il(t);if(l!=null){r=l.gradFunc}if(r!=null){a.gradient=c=>{c=c.map((u,f)=>{if(u==null){const h=s[f];const p=Yt(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return u});return r(c.length>1?c:c[0],o,i)}}this.state.activeTape.push(a)}keep(t){t.kept=true;return t}startTape(){if(this.state.gradientDepth===0){this.state.activeTape=[]}this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};if(t){n.name=t}this.state.scopeStack.push(n);this.state.activeScope=n}endScope(t){const n=a1(t);const s=new Set(n.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];if(!i.kept&&!s.has(i.id)){i.dispose()}}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1];n.forEach(o=>{if(!o.kept&&o.scopeId===r.id){this.track(o)}})}gradients(t,n,s,r=false){S(n.length>0,()=>"gradients() received an empty list of xs.");if(s!=null&&s.dtype!=="float32"){throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`)}const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));S(o instanceof Kt,()=>"The result y returned by f() must be a tensor.");const i=gp(this.state.activeTape,n,o);if(!r&&i.length===0&&n.length>0){throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.")}return this.tidy("backward",()=>{const a={};a[o.id]=s==null?Ep(o.shape):s;yp(a,i,c=>this.tidy(c),vp);const l=n.map(c=>a[c.id]);if(this.state.gradientDepth===0){this.state.activeTape.forEach(c=>{for(const u of c.saved){u.dispose()}});this.state.activeTape=null}return{value:o,grads:l}})}customGrad(t){S(el(t),()=>"The f passed in customGrad(f) must be a function.");return(...n)=>{S(n.every(a=>a instanceof Kt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};n.forEach((a,l)=>{r[l]=a});const o=(a,l)=>{s=t(...[...n,l]);S(s.value instanceof Kt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor");S(el(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.");return s.value};const i=(a,l)=>{const c=s.gradFunc(a,l);const u=Array.isArray(c)?c:[c];S(u.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).");S(u.every(h=>h instanceof Kt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const f={};u.forEach((h,p)=>{f[p]=()=>h});return f};return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:r})}}readSync(t){const n=this.state.tensorInfo.get(t);return n.backend.readSync(t)}read(t){const n=this.state.tensorInfo.get(t);return n.backend.read(t)}readToGPU(t,n){const s=this.state.tensorInfo.get(t);return s.backend.readToGPU(t,n)}async time(t){const n=ms();const s=await this.backend.time(t);s.wallMs=ms()-n;return s}track(t){if(this.state.activeScope!=null){t.scopeId=this.state.activeScope.id;this.state.activeScope.track.push(t)}return t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++;this.state.dispose();this.ENV.reset();this.state=new ml;for(const t in this.registry){this.disposeRegisteredKernels(t);this.registry[t].dispose();delete this.registry[t]}this.backendName=null;this.backendInstance=null;this.pendingBackendInit=null}}gs.nextTensorId=0;gs.nextVariableId=0;function Ep(e){const t=gi(q(e),"float32");return R.makeTensor(t,e,"float32")}function c1(){const e=fc();if(e._tfengine==null){const t=new Mh(e);e._tfengine=new gs(t)}zh(e._tfengine.ENV);wp(()=>e._tfengine);return e._tfengine}const R=c1();function vp(e,t){const n={a:e,b:t};return R.runKernel(Yr,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xp(){return typeof window!=="undefined"&&window.document!=null||typeof WorkerGlobalScope!=="undefined"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ue=lt();ue.registerFlag("DEBUG",()=>false,e=>{if(e){console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}});ue.registerFlag("IS_BROWSER",()=>xp());ue.registerFlag("IS_NODE",()=>typeof process!=="undefined"&&typeof process.versions!=="undefined"&&typeof process.versions.node!=="undefined");ue.registerFlag("IS_CHROME",()=>typeof navigator!=="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ue.registerFlag("PROD",()=>false);ue.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ue.getBool("DEBUG"));ue.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>true);ue.registerFlag("IS_TEST",()=>false);ue.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>true);ue.registerFlag("WRAP_TO_IMAGEBITMAP",()=>false);ue.registerFlag("ENGINE_COMPILE_ONLY",()=>false);ue.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>false);ue.registerFlag("USE_SETTIMEOUTCUSTOM",()=>false);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kn(e,t){let n=e;if(qe(e)){return t==="string"?[]:[e.length]}if(!Array.isArray(e)){return[]}const s=[];while(Array.isArray(n)||qe(n)&&t!=="string"){s.push(n.length);n=n[0]}if(Array.isArray(e)&&lt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")){u1(e,s,[])}return s}function u1(e,t,n){n=n||[];if(!Array.isArray(e)&&!qe(e)){S(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}S(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`);S(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const s=t.slice(1);for(let r=0;r<e.length;++r){u1(e[r],s,n.concat(r))}}function gl(e,t,n,s){if(e==="string_or_numeric"){return}if(e==null){throw new Error(`Expected dtype cannot be null.`)}if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string"){throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function k(e,t,n,s="numeric"){if(e instanceof Kt){gl(s,e.dtype,t,n);return e}let r=Xr(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0){r=s}gl(s,r,t,n);if(e==null||!qe(e)&&!Array.isArray(e)&&typeof e!=="number"&&typeof e!=="boolean"&&typeof e!=="string"){const l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}const o=kn(e,r);if(!qe(e)&&!Array.isArray(e)){e=[e]}const i=true;const a=r!=="string"?Yn(e,r):Kr(e,[],i);return R.makeTensor(a,o,r)}function kr(e,t,n,s="numeric"){if(!Array.isArray(e)){throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``)}const r=e;return r.map((o,i)=>k(o,`${t}[${i}]`,n,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f1="__op";function v(e){const t=Object.keys(e);if(t.length!==1){throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`)}let n=t[0];const s=e[n];if(n.endsWith("_")){n=n.substring(0,n.length-1)}n=n+f1;const r=(...o)=>{R.startScope(n);try{const i=s(...o);if(ps(i)){console.error("Cannot return a Promise inside of tidy.")}R.endScope(i);return i}catch(i){R.endScope(null);throw i}};Object.defineProperty(r,"name",{value:n,configurable:true});return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $p(e,t){const n=k(e,"real","complex");const s=k(t,"imag","complex");ge(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return R.runKernel(Tc,r)}const Nn=v({complex_:$p});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tn(e,t,n,s){if(s==null){s=Xr(e)}if(s==="complex64"){throw new Error(`Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).`)}if(!qe(e)&&!Array.isArray(e)&&typeof e!=="number"&&typeof e!=="boolean"&&typeof e!=="string"){throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray")}if(t!=null){cc(t);const r=q(t);const o=q(n);S(r===o,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<n.length;++i){const a=n[i];const l=i===n.length-1?a!==q(t.slice(i)):true;S(n[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}if(!qe(e)&&!Array.isArray(e)){e=[e]}t=t||n;e=s!=="string"?Yn(e,s):Kr(e,[],true);return R.makeTensor(e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Re(e,t,n){const s=kn(e,n);return Tn(e,t,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Po={"float32":4,"float16":2,"int32":4,"uint16":2,"uint8":1,"bool":1,"complex64":8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr=4;async function Ap(e,t){const n=[];const s=[];const r=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<r.length;++i){const a=r[i];const l=Array.isArray(e)?e[i].tensor:e[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64"){throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`)}const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async f=>{const h=await l.bytes();const p=h.reduce((m,b)=>m+b.length,0)+Tr*h.length;const d=new Uint8Array(p);let g=0;for(let m=0;m<h.length;m++){const b=h[m];const _=new Uint8Array(new Uint32Array([b.length]).buffer);d.set(_,g);g+=Tr;d.set(b,g);g+=b.length}f(d)});s.push(u)}else{s.push(l.data())}if(t!=null){c.group=t}n.push(c)}const o=await Promise.all(s);return{data:Dp(o),specs:n}}function h1(e,t){const n={};let s;let r=0;for(const o of t){const i=o.name;const a=o.dtype;const l=o.shape;const c=q(l);let u;if("quantization"in o){const f=o.quantization;if(f.dtype==="uint8"||f.dtype==="uint16"){if(!("min"in f&&"scale"in f)){throw new Error(`Weight ${o.name} with quantization ${f.dtype} doesn't have corresponding metadata min and scale.`)}}else if(f.dtype==="float16"){if(a!=="float32"){throw new Error(`Weight ${o.name} is quantized with ${f.dtype} which only supports weights of type float32 not ${a}.`)}}else{throw new Error(`Weight ${o.name} has unknown quantization dtype ${f.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`)}const h=Po[f.dtype];const p=e.slice(r,r+c*h);const d=f.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(a==="float32"){if(f.dtype==="uint8"||f.dtype==="uint16"){u=new Float32Array(d.length);for(let g=0;g<d.length;g++){const m=d[g];u[g]=m*f.scale+f.min}}else if(f.dtype==="float16"){if(s===void 0){s=Up()}u=s(d)}else{throw new Error(`Unsupported quantization type ${f.dtype} for weight type float32.`)}}else if(a==="int32"){if(f.dtype!=="uint8"&&f.dtype!=="uint16"){throw new Error(`Unsupported quantization type ${f.dtype} for weight type int32.`)}u=new Int32Array(d.length);for(let g=0;g<d.length;g++){const m=d[g];u[g]=Math.round(m*f.scale+f.min)}}else{throw new Error(`Unsupported dtype in weight '${i}': ${a}`)}r+=c*h}else if(a==="string"){const f=q(o.shape);u=[];for(let h=0;h<f;h++){const p=new Uint32Array(e.slice(r,r+Tr))[0];r+=Tr;const d=new Uint8Array(e.slice(r,r+p));u.push(d);r+=p}}else{const f=Po[a];const h=e.slice(r,r+c*f);if(a==="float32"){u=new Float32Array(h)}else if(a==="int32"){u=new Int32Array(h)}else if(a==="bool"){u=new Uint8Array(h)}else if(a==="complex64"){u=new Float32Array(h);const p=new Float32Array(u.length/2);const d=new Float32Array(u.length/2);for(let b=0;b<p.length;b++){p[b]=u[b*2];d[b]=u[b*2+1]}const g=Re(p,l,"float32");const m=Re(d,l,"float32");n[i]=Nn(g,m);g.dispose();m.dispose()}else{throw new Error(`Unsupported dtype in weight '${i}': ${a}`)}r+=c*f}if(a!=="complex64"){n[i]=Re(u,l,a)}}return n}function Dp(e){if(e===null){throw new Error(`Invalid input value: ${JSON.stringify(e)}`)}let t=0;const n=[];e.forEach(o=>{t+=o.byteLength;n.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o));if(!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array)){throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)}});const s=new Uint8Array(t);let r=0;n.forEach(o=>{s.set(new Uint8Array(o.buffer),r);r+=o.byteLength});return s.buffer}const ka=typeof Buffer!=="undefined"&&(typeof Blob==="undefined"||typeof atob==="undefined"||typeof btoa==="undefined");function yl(e){if(ka){return Buffer.byteLength(e)}return new Blob([e]).size}function Rp(e){if(ka){return Buffer.from(e).toString("base64")}const t=new Uint8Array(e);let n="";for(let s=0,r=t.length;s<r;s++){n+=String.fromCharCode(t[s])}return btoa(n)}function Op(e){if(ka){const s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(e);const n=new Uint8Array(t.length);for(let s=0;s<t.length;++s){n.set([t.charCodeAt(s)],s)}return n.buffer}function Ta(e){if(e.length===1){return e[0]}let t=0;e.forEach(r=>{t+=r.byteLength});const n=new Uint8Array(t);let s=0;e.forEach(r=>{n.set(new Uint8Array(r),s);s+=r.byteLength});return n.buffer}function bl(e){const t="/";e=e.trim();while(e.endsWith(t)){e=e.slice(0,e.length-1)}const n=e.split(t);return n[n.length-1]}function p1(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};if(e.signature!=null){n.signature=e.signature}if(e.userDefinedMetadata!=null){n.userDefinedMetadata=e.userDefinedMetadata}if(e.modelInitializer!=null){n.modelInitializer=e.modelInitializer}if(e.trainingConfig!=null){n.trainingConfig=e.trainingConfig}return n}function d1(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null){s.trainingConfig=e.trainingConfig}if(e.weightsManifest!=null){if(!t){throw new Error("modelJSON has weightsManifest but weightSpecs is null")}if(!n){throw new Error("modelJSON has weightsManifest but weightData is null")}s.weightSpecs=t;s.weightData=n}if(e.signature!=null){s.signature=e.signature}if(e.userDefinedMetadata!=null){s.userDefinedMetadata=e.userDefinedMetadata}if(e.modelInitializer!=null){s.modelInitializer=e.modelInitializer}return s}async function Sa(e,t){let n;let s;if(e.weightsManifest!=null){[n,s]=await t(e.weightsManifest)}return d1(e,n,s)}function nr(e){if(e.modelTopology instanceof ArrayBuffer){throw new Error("Expected JSON model topology, received ArrayBuffer.")}return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:yl(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:yl(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function m1(e){const t=[];for(const n of e){t.push(...n.weights)}return t}function Lp(){const e=n=>{let s=n<<13;let r=0;while((s&8388608)===0){r-=8388608;s<<=1}s&=-8388609;r+=947912704;return s|r};const t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++){t[n]=e(n)}for(let n=1024;n<2048;n++){t[n]=939524096+(n-1024<<13)}return t}function Fp(){const e=new Uint32Array(64);e[0]=0;e[31]=1199570944;e[32]=2147483648;e[63]=3347054592;for(let t=1;t<31;t++){e[t]=t<<23}for(let t=33;t<63;t++){e[t]=2147483648+(t-32<<23)}return e}function Pp(){const e=new Uint32Array(64);for(let t=0;t<64;t++){e[t]=1024}e[0]=e[32]=0;return e}function Up(){const e=Lp();const t=Fp();const n=Pp();return s=>{const r=new ArrayBuffer(4*s.length);const o=new Uint32Array(r);for(let i=0;i<s.length;i++){const a=s[i];const l=e[n[a>>10]+(a&1023)]+t[a>>10];o[i]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xt{constructor(){this.saveRouters=[];this.loadRouters=[]}static getInstance(){if(xt.instance==null){xt.instance=new xt}return xt.instance}static registerSaveRouter(t){xt.getInstance().saveRouters.push(t)}static registerLoadRouter(t){xt.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return xt.getHandlers(t,"save")}static getLoadHandlers(t,n){return xt.getHandlers(t,"load",n)}static getHandlers(t,n,s){const r=[];const o=n==="load"?xt.getInstance().loadRouters:xt.getInstance().saveRouters;o.forEach(i=>{const a=i(t,s);if(a!==null){r.push(a)}});return r}}const Mp=e=>xt.registerSaveRouter(e);const Vp=e=>xt.registerLoadRouter(e);const Bp=e=>xt.getSaveHandlers(e);const Cp=(e,t)=>xt.getLoadHandlers(e,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uo="tensorflowjs";const Mo=1;const Ln="models_store";const yn="model_info_store";function g1(){if(!lt().getBool("IS_BROWSER")){throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.")}const e=typeof window==="undefined"?self:window;const t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null){throw new Error("The current browser does not appear to support IndexedDB.")}return t}function Vo(e){const t=e.result;t.createObjectStore(Ln,{keyPath:"modelPath"});t.createObjectStore(yn,{keyPath:"modelPath"})}class Bn{constructor(t){this.indexedDB=g1();if(t==null||!t){throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.")}this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer){throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.")}return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,n){return new Promise((s,r)=>{const o=this.indexedDB.open(Uo,Mo);o.onupgradeneeded=()=>Vo(o);o.onsuccess=()=>{const i=o.result;if(n==null){const a=i.transaction(Ln,"readonly");const l=a.objectStore(Ln);const c=l.get(this.modelPath);c.onsuccess=()=>{if(c.result==null){i.close();return r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`))}else{s(c.result.modelArtifacts)}};c.onerror=u=>{i.close();return r(c.error)};a.oncomplete=()=>i.close()}else{const a=nr(n);const l=i.transaction(yn,"readwrite");let c=l.objectStore(yn);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a});let f;u.onsuccess=()=>{f=i.transaction(Ln,"readwrite");const h=f.objectStore(Ln);const p=h.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:a});p.onsuccess=()=>s({modelArtifactsInfo:a});p.onerror=d=>{c=l.objectStore(yn);const g=c.delete(this.modelPath);g.onsuccess=()=>{i.close();return r(p.error)};g.onerror=m=>{i.close();return r(p.error)}}};u.onerror=h=>{i.close();return r(u.error)};l.oncomplete=()=>{if(f==null){i.close()}else{f.oncomplete=()=>i.close()}}}};o.onerror=i=>r(o.error)})}}Bn.URL_SCHEME="indexeddb://";const y1=e=>{if(!lt().getBool("IS_BROWSER")){return null}else{if(!Array.isArray(e)&&e.startsWith(Bn.URL_SCHEME)){return zp(e.slice(Bn.URL_SCHEME.length))}else{return null}}};xt.registerSaveRouter(y1);xt.registerLoadRouter(y1);function zp(e){return new Bn(e)}function Wp(e){return e.startsWith(Bn.URL_SCHEME)?e.slice(Bn.URL_SCHEME.length):e}class Hp{constructor(){this.indexedDB=g1()}async listModels(){return new Promise((t,n)=>{const s=this.indexedDB.open(Uo,Mo);s.onupgradeneeded=()=>Vo(s);s.onsuccess=()=>{const r=s.result;const o=r.transaction(yn,"readonly");const i=o.objectStore(yn);const a=i.getAll();a.onsuccess=()=>{const l={};for(const c of a.result){l[c.modelPath]=c.modelArtifactsInfo}t(l)};a.onerror=l=>{r.close();return n(a.error)};o.oncomplete=()=>r.close()};s.onerror=r=>n(s.error)})}async removeModel(t){t=Wp(t);return new Promise((n,s)=>{const r=this.indexedDB.open(Uo,Mo);r.onupgradeneeded=()=>Vo(r);r.onsuccess=()=>{const o=r.result;const i=o.transaction(yn,"readwrite");const a=i.objectStore(yn);const l=a.get(t);let c;l.onsuccess=()=>{if(l.result==null){o.close();return s(new Error(`Cannot find model with path '${t}' in IndexedDB.`))}else{const u=a.delete(t);const f=()=>{c=o.transaction(Ln,"readwrite");const h=c.objectStore(Ln);const p=h.delete(t);p.onsuccess=()=>n(l.result.modelArtifactsInfo);p.onerror=d=>s(l.error)};u.onsuccess=f;u.onerror=h=>{f();o.close();return s(l.error)}}};l.onerror=u=>{o.close();return s(l.error)};i.oncomplete=()=>{if(c==null){o.close()}else{c.oncomplete=()=>o.close()}}};r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rn="/";const rs="tensorflowjs_models";const b1="info";const qp="model_topology";const Gp="weight_specs";const Kp="weight_data";const jp="model_metadata";function _1(e){return{info:[rs,e,b1].join(rn),topology:[rs,e,qp].join(rn),weightSpecs:[rs,e,Gp].join(rn),weightData:[rs,e,Kp].join(rn),modelMetadata:[rs,e,jp].join(rn)}}function w1(e){for(const t of Object.values(e)){window.localStorage.removeItem(t)}}function Xp(e){const t=e.split(rn);if(t.length<3){throw new Error(`Invalid key format: ${e}`)}return t.slice(1,t.length-1).join(rn)}function Yp(e){return e.startsWith(Cn.URL_SCHEME)?e.slice(Cn.URL_SCHEME.length):e}class Cn{constructor(t){if(!lt().getBool("IS_BROWSER")||typeof window==="undefined"||typeof window.localStorage==="undefined"){throw new Error("The current environment does not support local storage.")}this.LS=window.localStorage;if(t==null||!t){throw new Error("For local storage, modelPath must not be null, undefined or empty.")}this.modelPath=t;this.keys=_1(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer){throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.")}else{const n=JSON.stringify(t.modelTopology);const s=JSON.stringify(t.weightSpecs);const r=nr(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r));this.LS.setItem(this.keys.topology,n);this.LS.setItem(this.keys.weightSpecs,s);this.LS.setItem(this.keys.weightData,Rp(t.weightData));const o={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o));return{modelArtifactsInfo:r}}catch(o){w1(this.keys);throw new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null){throw new Error(`In local storage, there is no model with name '${this.modelPath}'`)}if(t.modelTopologyType!=="JSON"){throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.")}const n={};const s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null){throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`)}n.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null){throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`)}n.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);n.format=a.format;n.generatedBy=a.generatedBy;n.convertedBy=a.convertedBy;if(a.signature!=null){n.signature=a.signature}if(a.userDefinedMetadata!=null){n.userDefinedMetadata=a.userDefinedMetadata}if(a.modelInitializer!=null){n.modelInitializer=a.modelInitializer}if(a.trainingConfig!=null){n.trainingConfig=a.trainingConfig}}const i=this.LS.getItem(this.keys.weightData);if(i==null){throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`)}n.weightData=Op(i);return n}}Cn.URL_SCHEME="localstorage://";const N1=e=>{if(!lt().getBool("IS_BROWSER")){return null}else{if(!Array.isArray(e)&&e.startsWith(Cn.URL_SCHEME)){return Zp(e.slice(Cn.URL_SCHEME.length))}else{return null}}};xt.registerSaveRouter(N1);xt.registerLoadRouter(N1);function Zp(e){return new Cn(e)}class Jp{constructor(){S(lt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser");S(typeof window==="undefined"||typeof window.localStorage!=="undefined",()=>"Current browser does not appear to support localStorage");this.LS=window.localStorage}async listModels(){const t={};const n=rs+rn;const s=rn+b1;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(n)&&o.endsWith(s)){const i=Xp(o);t[i]=JSON.parse(this.LS.getItem(o))}}return t}async removeModel(t){t=Yp(t);const n=_1(t);if(this.LS.getItem(n.info)==null){throw new Error(`Cannot find model at path '${t}'`)}const s=JSON.parse(this.LS.getItem(n.info));w1(n);return s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ls="://";class Jt{constructor(){this.managers={}}static getInstance(){if(Jt.instance==null){Jt.instance=new Jt}return Jt.instance}static registerManager(t,n){S(t!=null,()=>"scheme must not be undefined or null.");if(t.endsWith(ls)){t=t.slice(0,t.indexOf(ls))}S(t.length>0,()=>"scheme must not be an empty string.");const s=Jt.getInstance();S(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`);s.managers[t]=n}static getManager(t){const n=Jt.getInstance().managers[t];if(n==null){throw new Error(`Cannot find model manager for scheme '${t}'`)}return n}static getSchemes(){return Object.keys(Jt.getInstance().managers)}}function dr(e){if(e.indexOf(ls)===-1){throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Jt.getSchemes().join(",")}`)}return{scheme:e.split(ls)[0],path:e.split(ls)[1]}}async function I1(e,t,n=false){S(e!==t,()=>`Old path and new path are the same: '${e}'`);const s=xt.getLoadHandlers(e);S(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`);S(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);const r=s[0];const o=xt.getSaveHandlers(t);S(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`);S(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);const i=o[0];const a=dr(e).scheme;const l=dr(e).path;const c=a===dr(e).scheme;const u=await r.load();if(n&&c){await Jt.getManager(a).removeModel(l)}const f=await i.save(u);if(n&&!c){await Jt.getManager(a).removeModel(l)}return f.modelArtifactsInfo}async function Qp(){const e=Jt.getSchemes();const t={};for(const n of e){const s=await Jt.getManager(n).listModels();for(const r in s){const o=n+ls+r;t[o]=s[r]}}return t}async function td(e){const t=dr(e);const n=Jt.getManager(t.scheme);return n.removeModel(t.path)}async function ed(e,t){const n=false;return I1(e,t,n)}async function nd(e,t){const n=true;return I1(e,t,n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sd{constructor(){this.messageName="setTimeoutCustom";this.functionRefs=[];this.handledMessageCount=0;this.hasEventListener=false}fetch(t,n){return fetch(t,n)}now(){return performance.now()}encode(t,n){if(n!=="utf-8"&&n!=="utf8"){throw new Error(`Browser's encoder only supports utf-8, but got ${n}`)}if(this.textEncoder==null){this.textEncoder=new TextEncoder}return this.textEncoder.encode(t)}decode(t,n){return new TextDecoder(n).decode(t)}setTimeoutCustom(t,n){if(!window||!lt().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,n);return}this.functionRefs.push(t);setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n);if(!this.hasEventListener){this.hasEventListener=true;window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r();this.handledMessageCount++;if(this.handledMessageCount===this.functionRefs.length){this.functionRefs=[];this.handledMessageCount=0}}},true)}}}if(lt().get("IS_BROWSER")){lt().setPlatform("browser",new sd);try{Jt.registerManager(Cn.URL_SCHEME,new Jp)}catch(e){}try{Jt.registerManager(Bn.URL_SCHEME,new Hp)}catch(e){}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rd{constructor(){this.util=require("util");this.textEncoder=new this.util.TextEncoder}fetch(t,n){{return lt().global.fetch(t,n)}}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,n){if(n!=="utf-8"&&n!=="utf8"){throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`)}return this.textEncoder.encode(t)}decode(t,n){if(t.length===0){return""}return new this.util.TextDecoder(n).decode(t)}}if(lt().get("IS_NODE")&&!lt().get("IS_BROWSER")){lt().setPlatform("node",new rd)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at(e,t="float32",n){t=t||"float32";cc(e);return new Ut(e,t,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function od(e,t){const n=k(e,"x","cast");if(!Oh(t)){throw new Error(`Failed to cast to unknown dtype ${t}`)}if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string"){throw new Error("Only strings can be casted to strings")}const s={x:n};const r={dtype:t};return R.runKernel(Si,s,r)}const Mt=v({cast_:od});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function id(e){const t=k(e,"x","clone","string_or_numeric");const n={x:t};return R.runKernel(Bi,n)}const wn=v({clone_:id});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k1(e,t=false){console.log(e.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */c1();const ad={buffer:at,cast:Mt,clone:wn,print:k1};Np(ad);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ld="model";const cd=".json";const ud=".weights.bin";function _l(e){return new Promise(t=>setTimeout(t)).then(e)}class zn{constructor(t){if(!lt().getBool("IS_BROWSER")){throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.")}if(t.startsWith(zn.URL_SCHEME)){t=t.slice(zn.URL_SCHEME.length)}if(t==null||t.length===0){t=ld}this.modelJsonFileName=t+cd;this.weightDataFileName=t+ud}async save(t){if(typeof document==="undefined"){throw new Error("Browser downloads are not supported in this environment since `document` is not present")}const n=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer){throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.")}else{const s=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}];const r=p1(t,s);const o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"}));const i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;i.download=this.modelJsonFileName;i.href=o;await _l(()=>i.dispatchEvent(new MouseEvent("click")));if(t.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName;a.href=n;await _l(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:nr(t)}}}}zn.URL_SCHEME="downloads://";class fd{constructor(t){if(t==null||t.length<1){throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`)}this.jsonFile=t[0];this.weightsFiles=t.slice(1)}async load(){return new Promise((t,n)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result);const i=o.modelTopology;if(i==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}const a=o.weightsManifest;if(a==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}const l=Sa(o,c=>this.loadWeights(c));t(l)};s.onerror=r=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`);s.readAsText(this.jsonFile)})}loadWeights(t){const n=[];const s=[];for(const i of t){n.push(...i.weights);s.push(...i.paths)}const r=this.checkManifestAndWeightFiles(t);const o=s.map(i=>this.loadWeightsFile(i,r[i]));return Promise.all(o).then(i=>[n,Ta(i)])}loadWeightsFile(t,n){return new Promise((s,r)=>{const o=new FileReader;o.onload=i=>{const a=i.target.result;s(a)};o.onerror=i=>r(`Failed to weights data from file of path '${t}'.`);o.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(t){const n=[];const s=this.weightsFiles.map(o=>bl(o.name));const r={};for(const o of t){o.paths.forEach(i=>{const a=bl(i);if(n.indexOf(a)!==-1){throw new Error(`Duplicate file basename found in weights manifest: '${a}'`)}n.push(a);if(s.indexOf(a)===-1){throw new Error(`Weight file with basename '${a}' is not provided.`)}else{r[i]=this.weightsFiles[s.indexOf(a)]}})}if(n.length!==this.weightsFiles.length){throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`)}return r}}const hd=e=>{if(!lt().getBool("IS_BROWSER")){return null}else{if(!Array.isArray(e)&&e.startsWith(zn.URL_SCHEME)){return pd(e.slice(zn.URL_SCHEME.length))}else{return null}}};xt.registerSaveRouter(hd);function pd(e="model"){return new zn(e)}function dd(e){return new fd(e)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wl(e,t,n,s){i(e);n=n==null?0:n;s=s==null?1:s;a(n,s);let r=0;const o=l=>{l.then(c=>{const u=n+ ++r/e.length*(s-n);t(u);return c});return l};function i(l){S(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){S(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`);S(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`);S(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(e.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function T1(e,t){if(t==null){t={}}const n=t.fetchFunc==null?lt().platform.fetch:t.fetchFunc;const s=e.map(f=>n(f,t.requestInit,{isBinary:true}));const r=0;const o=.5;const i=t.onProgress==null?await Promise.all(s):await wl(s,t.onProgress,r,o);const a=i.map(f=>f.arrayBuffer());const l=.5;const c=1;const u=t.onProgress==null?await Promise.all(a):await wl(a,t.onProgress,l,c);return u}async function md(e,t="",n,s){const r=i=>T1(i,{requestInit:s});const o=S1(r);return o(e,t,n)}function S1(e){return async(t,n="",s)=>{const r=t.map(()=>false);const o={};const i=s!=null?s.map(()=>false):[];const a=[];t.forEach((p,d)=>{let g=0;p.weights.forEach(m=>{const b="quantization"in m?m.quantization.dtype:m.dtype;const _=Po[b]*q(m.shape);const w=()=>{r[d]=true;if(o[d]==null){o[d]=[]}o[d].push({manifestEntry:m,groupOffset:g,sizeBytes:_})};if(s!=null){s.forEach((N,I)=>{if(N===m.name){w();i[I]=true}})}else{w()}a.push(m.name);g+=_})});if(!i.every(p=>p)){const p=s.filter((d,g)=>!i[g]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const l=r.reduce((p,d,g)=>{if(d){p.push(g)}return p},[]);const c=[];l.forEach(p=>{t[p].paths.forEach(d=>{const g=n+(!n.endsWith("/")?"/":"")+d;c.push(g)})});const u=await e(c);const f={};let h=0;l.forEach(p=>{const d=t[p].paths.length;let g=0;for(let N=0;N<d;N++){g+=u[h+N].byteLength}const m=new ArrayBuffer(g);const b=new Uint8Array(m);let _=0;for(let N=0;N<d;N++){const I=new Uint8Array(u[h+N]);b.set(I,_);_+=I.byteLength}const w=o[p];w.forEach(N=>{const I=m.slice(N.groupOffset,N.groupOffset+N.sizeBytes);const T=h1(I,[N.manifestEntry]);for(const E in T){f[E]=T[E]}});h+=d});return f}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gd="application/octet-stream";const yd="application/json";class Ea{constructor(t,n){this.DEFAULT_METHOD="POST";if(n==null){n={}}this.weightPathPrefix=n.weightPathPrefix;this.onProgress=n.onProgress;this.weightUrlConverter=n.weightUrlConverter;if(n.fetchFunc!=null){S(typeof n.fetchFunc==="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)");this.fetch=n.fetchFunc}else{this.fetch=lt().platform.fetch}S(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty.");if(Array.isArray(t)){S(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)}this.path=t;if(n.requestInit!=null&&n.requestInit.body!=null){throw new Error("requestInit is expected to have no pre-existing body, but has one.")}this.requestInit=n.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer){throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.")}const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}];const r=p1(t,s);n.body.append("model.json",new Blob([JSON.stringify(r)],{type:yd}),"model.json");if(t.weightData!=null){n.body.append("model.weights.bin",new Blob([t.weightData],{type:gd}),"model.weights.bin")}const o=await this.fetch(this.path,n);if(o.ok){return{modelArtifactsInfo:nr(t),responses:[o]}}else{throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok){throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`)}let n;try{n=await t.json()}catch(o){let i=`Failed to parse model JSON of response from ${this.path}.`;if(this.path.endsWith(".pb")){i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository."}else{i+=" Please make sure the server is serving valid JSON for this request."}throw new Error(i)}const s=n.modelTopology;const r=n.weightsManifest;if(s==null&&r==null){throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`)}return Sa(n,o=>this.loadWeights(o))}async loadWeights(t){const n=Array.isArray(this.path)?this.path[1]:this.path;const[s,r]=bd(n);const o=this.weightPathPrefix||s;const i=m1(t);const a=[];const l=[];for(const u of t){for(const f of u.paths){if(this.weightUrlConverter!=null){l.push(this.weightUrlConverter(f))}else{a.push(o+f+r)}}}if(this.weightUrlConverter){a.push(...await Promise.all(l))}const c=await T1(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,Ta(c)]}}Ea.URL_SCHEME_REGEX=/^https?:\/\//;function bd(e){const t=e.lastIndexOf("/");const n=e.lastIndexOf("?");const s=e.substring(0,t);const r=n>t?e.substring(n):"";return[s+"/",r]}function Bo(e){return e.match(Ea.URL_SCHEME_REGEX)!=null}const E1=(e,t)=>{if(typeof fetch==="undefined"&&(t==null||t.fetchFunc==null)){return null}else{let n=true;if(Array.isArray(e)){n=e.every(s=>Bo(s))}else{n=Bo(e)}if(n){return va(e,t)}}return null};xt.registerSaveRouter(E1);xt.registerLoadRouter(E1);function va(e,t){return new Ea(e,t)}function _d(e,t){return va(e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _o{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class v1{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class wd{constructor(t){if(t.load){this.load=()=>Promise.resolve(t.load())}if(t.save){this.save=n=>Promise.resolve(t.save(n))}}}function Nd(e,t,n,s){const r=arguments;return new wd(x1(...r))}function x1(e,t,n,s){if(arguments.length===1){const r=e.modelTopology!=null||e.weightSpecs!=null;if(r){return new _o(e)}else{console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release.");return new _o({modelTopology:e})}}else{console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release.");return new _o({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s})}}function Id(e){return new v1(e)}function kd(e){return new v1(e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var $1=Object.freeze({__proto__:null,browserFiles:dd,browserHTTPRequest:_d,concatenateArrayBuffers:Ta,copyModel:ed,decodeWeights:h1,encodeWeights:Ap,fromMemory:Nd,fromMemorySync:x1,getLoadHandlers:Cp,getModelArtifactsForJSON:Sa,getModelArtifactsForJSONSync:d1,getModelArtifactsInfoForJSON:nr,getSaveHandlers:Bp,getWeightSpecs:m1,http:va,isHTTPScheme:Bo,listModels:Qp,loadWeights:md,moveModel:nd,registerLoadRouter:Vp,registerSaveRouter:Mp,removeModel:td,weightsLoaderFactory:S1,withSaveHandler:Id,withSaveHandlerSync:kd});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Td(e,t,n=false,s=false){let r=k(e,"a","matMul");let o=k(t,"b","matMul");[r,o]=At(r,o);const i={a:r,b:o};const a={transposeA:n,transposeB:s};return R.runKernel(wc,i,a)}const mt=v({matMul_:Td});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sd(e,t,n=1,s=0,r="int32"){if(t<2){throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`)}const o=k(e,"indices","oneHot","int32");const i={indices:o};const a={dtype:r,depth:t,onValue:n,offValue:s};return R.runKernel(du,i,a)}const Ed=v({oneHot_:Sd});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nl(){return R}function Ee(e,t){return R.tidy(e,t)}function vd(e){const t=a1(e);t.forEach(n=>n.dispose())}function bn(e){return R.keep(e)}function xd(e){return R.setBackend(e)}function $d(e,t,n=1){return R.registerBackend(e,t,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ad(e){const t=k(e,"input","imag");const n={input:t};return R.runKernel(Zc,n)}const Jr=v({imag_:Ad});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dd(e){const t=k(e,"x","neg");const n={x:t};return R.runKernel(cu,n)}const on=v({neg_:Dd});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rd(e){const t=k(e,"input","real");const n={input:t};return R.runKernel(Iu,n)}const Ys=v({real_:Rd});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Od(e,t,n){const s=k(e,"x","transpose");if(t==null){t=s.shape.map((i,a)=>a).reverse()}S(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`);t.forEach(i=>{S(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)});if(s.rank<=1){return s.clone()}const r={x:s};const o={perm:t};if(s.dtype==="complex64"){return Ee(()=>{let i=Ys(s);let a=Jr(s);i=R.runKernel(hr,{x:i},o);a=R.runKernel(hr,{x:a},o);if(n){a=on(a)}return Nn(i,a)})}return R.runKernel(hr,r,o)}const Co=v({transpose_:Od});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sr(e,t){const n=e.length;const s=[];for(let r=0;r<n;r++){const o=n-1-r;const i=e[o]||1;const a=t[t.length-1-r]||1;if(a>1&&i===1){s.unshift(o)}}return s}function Ld(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1];const o=t.length-s-1;const i=t[o];if(r==null||r===1&&i>1){n.unshift(o)}}return n}function Dt(e,t){const n=[];const s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let o=e[e.length-r-1];if(o==null){o=1}let i=t[t.length-r-1];if(i==null){i=1}if(o===1){n.unshift(i)}else if(i===1){n.unshift(o)}else if(o!==i){const a=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(a)}else{n.unshift(o)}}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fd(e,t,n){Ss(e);if(t!=null&&t.length!==3){throw new Error("tensor3d() requires shape to have three numbers")}const s=kn(e,n);if(s.length!==3&&s.length!==1){throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray")}if(s.length===1&&t==null){throw new Error("tensor3d() requires shape to be provided when `values` are a flat array")}return Tn(e,t,s,n)}function Pd(e,t){const n=e.shape.length;const s=t.shape.length;if(n<1){throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`)}if(s<1){throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`)}if(t.dtype!=="int32"){throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`)}if(t.shape[s-1]>n){throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`)}if(q(e.shape)===0){throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`)}const r=t.shape;const o=r[r.length-1];let i=1;for(let f=0;f<r.length-1;++f){i*=r[f]}const a=e.shape;const l=r.slice();l.pop();let c=1;for(let f=o;f<n;++f){c*=a[f];l.push(a[f])}const u=[...nt(e.shape).map(f=>f/c),1].slice(0,o);return[l,i,c,u]}function Ud(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1;const r=t.rank>1?t.rank-1:1;const o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r){throw new Error(o+` update.rank < ${r}. `)}if(e.length<s+(n.rank-r)){throw new Error(o+` Output shape length < ${s+(n.rank-r)}`)}if(n.rank!==r+e.length-s){throw new Error(o+` update.rank != ${r+e.length-s}`)}for(let i=0;i<r;++i){if(n.shape[i]!==t.shape[i]){throw new Error(o+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`)}}for(let i=0;i<n.rank-r;++i){if(n.shape[i+r]!==e[i+s]){throw new Error(o+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}}}function Md(e,t,n){if(t.rank<1){throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`)}if(e.rank<1){throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`)}if(t.dtype!=="int32"){throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`)}if(n.length<1){throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`)}if(n.length===0){if(t.size===0){throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`)}if(e.size===0){throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}}Ud(n,t,e)}function A1(e,t,n){const s=t.shape.length;const r=s>1?t.shape[s-1]:1;const o=n.length;let i=1;for(let f=r;f<o;++f){i*=n[f]}const a=r<1?1:r;const l=q(t.shape)/a;const c=[...nt(n.slice(0,r)),1];const u=q(n);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zo=-2;const Vd=-1;function Bd(e,t,n){const s=e.shape.length;S(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`);S(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r){S(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}}function Cd(e,t,n){const s=[];for(let r=0;r<e.length;r++){s[r]=Math.ceil((t[r]-e[r])/n[r])}return s}function zd(e,t,n){let s=n.length;for(let r=0;r<n.length;r++){if(n[r]>1){s=r;break}}for(let r=s+1;r<n.length;r++){if(t[r]>0||n[r]!==e[r]){return false}}return true}function Wd(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++){n+=e[s]*t[s]}return n}function Hd(e,t,n){let s;const r=e.shape.length;if(typeof t==="number"){s=[t,...new Array(r-1).fill(0)]}else if(t.length<r){s=t.concat(new Array(r-t.length).fill(0))}else{s=t.slice()}s.forEach(i=>{S(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;if(n==null){o=new Array(r).fill(-1)}else if(typeof n==="number"){o=[n,...new Array(r-1).fill(-1)]}else if(n.length<r){o=n.concat(new Array(r-n.length).fill(-1))}else{o=n}o=o.map((i,a)=>{if(i>=0){return i}else{S(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`);return e.shape[a]-s[a]}});return[s,o]}function qd(e,t,n,s,r,o,i,a,l){let c;if(s==null){c=new Array(t.length);c.fill(1)}else{c=s}if(i!=null&&(i&i-1)!==0){throw new Error("Multiple ellipses in slice is not allowed.")}let u=false;const f={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let w=0;w<f.dims;w++){if(u&&(1<<w&a)!==0){f.numAddAxisAfterEllipsis++}if(1<<w&i){u=true}}if(!u){f.ellipsisMask|=1<<f.dims;f.dims++}const h={dims:e.length,beginMask:0,endMask:0,beginValid:false,endValid:false};Gd(f,h);let p=true;let d=true;let g=true;const m=[];const b=[];for(let w=0;w<e.length;++w){if(h.strides[w]===0){throw Error(`strides[${w}] must be non-zero`)}const N=!!(h.shrinkAxisMask&1<<w);const I=e[w];if(I===-1){m.push(N?1:-1);continue}const T=[h.beginMask&1<<w,h.endMask&1<<w];const E=[h.strides[w]>0?0:-1,h.strides[w]>0?I:I-1];if(N&&h.strides[w]<=0){throw Error("only stride 1 allowed on non-range indexing.")}g=g&&h.strides[w]===1;const D=!!(h.beginMask&1<<w&&h.endMask&1<<w);if(h.beginValid&&h.endValid){if(N){const B=h.begin[w]<0?I+h.begin[w]:h.begin[w];h.begin[w]=B;h.end[w]=h.begin[w]+1;if(B<0||B>=I){throw Error(`slice index ${h.begin[w]} of dimension ${w} out of bounds.`)}}else{h.begin[w]=Il(h.begin[w],0,h.strides[w],I,T,E);h.end[w]=Il(h.end[w],1,h.strides[w],I,T,E)}const M=h.strides[w]===1&&h.begin[w]===0&&h.end[w]===I;p=p&&M;d=d&&(w===0&&h.strides[w]===1||M)}else{p=p&&(h.strides[w]===1&&D);d=d&&(w===0&&h.strides[w]===1||D)}let L;let P=false;if(h.beginValid&&h.endValid){L=h.end[w]-h.begin[w];P=true}else if(N){L=1;P=true}else if(D){if(I>=0){if(h.strides[w]<0){L=-I}else{L=I}P=true}}if(P){let M;if(L===0||L<0!==h.strides[w]<0){M=0}else{M=Math.trunc(L/h.strides[w])+(L%h.strides[w]!==0?1:0)}m.push(M)}else{m.push(-1)}}for(let w=0;w<h.finalShapeGatherIndices.length;++w){const N=h.finalShapeGatherIndices[w];if(N>=0){b.push(m[N])}else if(N===zo){b.push(1)}}const _=b.filter((w,N)=>h.finalShapeGatherIndices[N]!==zo);return{finalShapeSparse:_,finalShape:b,isIdentity:p,sliceDim0:d,isSimpleSlice:g,begin:h.begin,end:h.end,strides:h.strides}}function Gd(e,t){t.beginMask=0;t.endMask=0;t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null;t.endValid=e.end!=null;t.begin=new Array(t.dims);t.end=new Array(t.dims);t.strides=new Array(t.dims);t.finalShapeGatherIndices=[];t.finalShapeGatherIndicesSparse=[];t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++){if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++){t.begin[n]=0;t.end[n]=0;t.strides[n]=1;t.beginMask|=1<<n;t.endMask|=1<<n;t.finalShapeGatherIndices.push(n);t.finalShapeGatherIndicesSparse.push(-1);t.inputShapeGatherIndicesSparse[n]=s}}else if(1<<s&e.newAxisMask){t.finalShapeGatherIndices.push(zo);t.finalShapeGatherIndicesSparse.push(-1)}else{if(n===t.begin.length){throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`)}if(e.begin!=null){t.begin[n]=e.begin[s]}if(e.end!=null){t.end[n]=e.end[s]}t.strides[n]=e.strides[s];if(e.beginMask&1<<s){t.beginMask|=1<<n}if(e.endMask&1<<s){t.endMask|=1<<n}if(e.shrinkAxisMask&1<<s){t.finalShapeGatherIndices.push(Vd);t.finalShapeGatherIndicesSparse.push(-1);t.shrinkAxisMask|=1<<n}else{t.finalShapeGatherIndices.push(n);t.finalShapeGatherIndicesSparse.push(s)}t.inputShapeGatherIndicesSparse[n]=s;n++}}}function Il(e,t,n,s,r,o){if(r[t]){return n>0?o[t]:o[t+1&1]}else{const i=e<0?s+e:e;return i<o[0]?o[0]:i>o[1]?o[1]:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kd(e,t){let n=k(e,"a","add");let s=k(t,"b","add");[n,s]=At(n,s);const r={a:n,b:s};return R.runKernel(Yr,r)}const Vt=v({add_:Kd});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jd(e,t){let n=k(e,"a","floorDiv");let s=k(t,"b","floorDiv");[n,s]=At(n,s);const r={a:n,b:s};return R.runKernel(Ui,r)}const D1=v({floorDiv_:jd});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xd(e,t){let n=k(e,"a","div");let s=k(t,"b","div");[n,s]=At(n,s);if(n.dtype==="int32"&&s.dtype==="int32"){return D1(n,s)}const r={a:n,b:s};const o={};return R.runKernel(Ai,r,o)}const ee=v({div_:Xd});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yd(e,t){let n=k(e,"a","mul");let s=k(t,"b","mul");[n,s]=At(n,s);const r={a:n,b:s};return R.runKernel(ta,r)}const ot=v({mul_:Yd});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zd(e){const t=k(e,"x","abs");if(t.dtype==="complex64"){const n={x:t};return R.runKernel(Sc,n)}else{const n={x:t};return R.runKernel(hc,n)}}const _e=v({abs_:Zd});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jd(e){const t=k(e,"x","acos");const n={x:t};return R.runKernel(bi,n)}const Qd=v({acos_:Jd});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tm(e){const t=k(e,"x","acosh");const n={x:t};return R.runKernel(_i,n)}const em=v({acosh_:tm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nm(e){S(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors");S(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);const t=e.map((r,o)=>k(r,`tensors${o}`,"addN"));const n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype){throw new Error("All tensors passed to tf.addN() must have the same dtype")}});t.forEach(r=>{if(!Oe(r.shape,n.shape)){throw new Error("All tensors passed to tf.addN() must have the same shape")}});const s=t;return R.runKernel(pc,s)}const sm=v({addN_:nm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rm(e,t=null,n=false){const s=k(e,"x","all","bool");const r={x:s};const o={axis:t,keepDims:n};return R.runKernel(dc,r,o)}const om=v({all_:rm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function im(e,t=null,n=false){const s=k(e,"x","any","bool");const r={x:s};const o={axis:t,keepDims:n};return R.runKernel(mc,r,o)}const am=v({any_:im});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lm(e,t=0){const n=k(e,"x","argMax");const s={x:n};const r={axis:t};return R.runKernel(gc,s,r)}const cm=v({argMax_:lm});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function um(e,t=0){const n=k(e,"x","argMin");const s={x:n};const r={axis:t};return R.runKernel(yc,s,r)}const fm=v({argMin_:um});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hm(e){const t=k(e,"x","asin");const n={x:t};return R.runKernel(wi,n)}const pm=v({asin_:hm});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dm(e){const t=k(e,"x","asinh");const n={x:t};return R.runKernel(Ni,n)}const mm=v({asinh_:dm});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gm(e){const t=k(e,"x","atan");const n={x:t};return R.runKernel(Ii,n)}const ym=v({atan_:gm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bm(e,t){let n=k(e,"a","atan2");let s=k(t,"b","atan2");[n,s]=At(n,s);const r={a:n,b:s};return R.runKernel(Ti,r)}const _m=v({atan2_:bm});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wm(e){const t=k(e,"x","atanh");const n={x:t};return R.runKernel(ki,n)}const Nm=v({atanh_:wm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(e,t,n,s,r="NHWC",o){const i=e[3];const a=[...t,i];const l=eo(r);return je(e,a,n,o,s,null,null,l)}function xs(e,t,n,s,r,o,i="channelsLast"){const[a,l]=Er(t);let c;if(i==="channelsLast"){c=[a,l,e[3],e[3]]}else if(i==="channelsFirst"){c=[a,l,e[1],e[1]]}else{throw new Error(`Unknown dataFormat ${i}`)}return je(e,c,n,s,r,o,false,i)}function Qr(e,t,n,s,r,o,i="NDHWC"){const[a,l,c]=Wo(t);let u;let f;if(i==="NDHWC"){f="channelsLast";u=[a,l,c,e[4],e[4]]}else if(i==="NCDHW"){f="channelsFirst";u=[a,l,c,e[1],e[1]]}else{throw new Error(`Unknown dataFormat ${i}`)}return to(e,u,n,s,r,false,f,o)}function je(e,t,n,s,r,o,i=false,a="channelsLast"){let[l,c,u,f]=[-1,-1,-1,-1];if(a==="channelsLast"){[l,c,u,f]=e}else if(a==="channelsFirst"){[l,f,c,u]=e}else{throw new Error(`Unknown dataFormat ${a}`)}const[h,p,,d]=t;const[g,m]=Er(n);const[b,_]=Er(s);const w=cs(h,b);const N=cs(p,_);const{padInfo:I,outHeight:T,outWidth:E}=Tm(r,c,u,g,m,w,N,o,a);const D=i?d*f:d;let L;if(a==="channelsFirst"){L=[l,D,T,E]}else if(a==="channelsLast"){L=[l,T,E,D]}return{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:f,outHeight:T,outWidth:E,outChannels:D,padInfo:I,strideHeight:g,strideWidth:m,filterHeight:h,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:N,dilationHeight:b,dilationWidth:_,inShape:e,outShape:L,filterShape:t}}function to(e,t,n,s,r,o=false,i="channelsLast",a){let[l,c,u,f,h]=[-1,-1,-1,-1,-1];if(i==="channelsLast"){[l,c,u,f,h]=e}else if(i==="channelsFirst"){[l,h,c,u,f]=e}else{throw new Error(`Unknown dataFormat ${i}`)}const[p,d,g,,m]=t;const[b,_,w]=Wo(n);const[N,I,T]=Wo(s);const E=cs(p,N);const D=cs(d,I);const L=cs(g,T);const{padInfo:P,outDepth:M,outHeight:B,outWidth:$}=Sm(r,c,u,f,b,_,w,E,D,L,a);const x=o?m*h:m;let A;if(i==="channelsFirst"){A=[l,x,M,B,$]}else if(i==="channelsLast"){A=[l,M,B,$,x]}return{batchSize:l,dataFormat:i,inDepth:c,inHeight:u,inWidth:f,inChannels:h,outDepth:M,outHeight:B,outWidth:$,outChannels:x,padInfo:P,strideDepth:b,strideHeight:_,strideWidth:w,filterDepth:p,filterHeight:d,filterWidth:g,effectiveFilterDepth:E,effectiveFilterHeight:D,effectiveFilterWidth:L,dilationDepth:N,dilationHeight:I,dilationWidth:T,inShape:e,outShape:A,filterShape:t}}function Im(e,t,n,s,r){if(s==null){s=R1(e,t,n)}const o=e[0];const i=e[1];const a=Un((o-t+2*s)/n+1,r);const l=Un((i-t+2*s)/n+1,r);return[a,l]}function km(e,t,n,s,r,o){if(r==null){r=R1(e,t,s)}const i=e[0];const a=e[1];const l=e[2];const c=Un((i-t+2*r)/s+1,o);const u=Un((a-t+2*r)/s+1,o);const f=Un((l-t+2*r)/s+1,o);return[c,u,f,n]}function R1(e,t,n,s=1){const r=cs(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Er(e){if(typeof e==="number"){return[e,e,e]}if(e.length===2){return[e[0],e[1],1]}return e}function Wo(e){return typeof e==="number"?[e,e,e]:e}function cs(e,t){if(t<=1){return e}return e+(e-1)*(t-1)}function Tm(e,t,n,s,r,o,i,a,l){let c;let u;let f;if(typeof e==="number"){const h=e===0?"VALID":"NUMBER";c={top:e,bottom:e,left:e,right:e,type:h};const p=Im([t,n],o,s,e,a);u=p[0];f=p[1]}else if(e==="same"){u=Math.ceil(t/s);f=Math.ceil(n/r);const h=Math.max(0,(u-1)*s+o-t);const p=Math.max(0,(f-1)*r+i-n);const d=Math.floor(h/2);const g=h-d;const m=Math.floor(p/2);const b=p-m;c={top:d,bottom:g,left:m,right:b,type:"SAME"}}else if(e==="valid"){c={top:0,bottom:0,left:0,right:0,type:"VALID"};u=Math.ceil((t-o+1)/s);f=Math.ceil((n-i+1)/r)}else if(typeof e==="object"){const h=l==="channelsLast"?e[1][0]:e[2][0];const p=l==="channelsLast"?e[1][1]:e[2][1];const d=l==="channelsLast"?e[2][0]:e[3][0];const g=l==="channelsLast"?e[2][1]:e[3][1];const m=h===0&&p===0&&d===0&&g===0?"VALID":"EXPLICIT";c={top:h,bottom:p,left:d,right:g,type:m};u=Un((t-o+h+p)/s+1,a);f=Un((n-i+d+g)/r+1,a)}else{throw Error(`Unknown padding parameter: ${e}`)}return{padInfo:c,outHeight:u,outWidth:f}}function Sm(e,t,n,s,r,o,i,a,l,c,u){let f;let h;let p;let d;if(typeof e==="number"){const g=e===0?"VALID":"NUMBER";f={top:e,bottom:e,left:e,right:e,front:e,back:e,type:g};const m=km([t,n,s,1],a,1,r,e,u);h=m[0];p=m[1];d=m[2]}else if(e==="same"){h=Math.ceil(t/r);p=Math.ceil(n/o);d=Math.ceil(s/i);const g=(h-1)*r+a-t;const m=(p-1)*o+l-n;const b=(d-1)*i+c-s;const _=Math.floor(g/2);const w=g-_;const N=Math.floor(m/2);const I=m-N;const T=Math.floor(b/2);const E=b-T;f={top:N,bottom:I,left:T,right:E,front:_,back:w,type:"SAME"}}else if(e==="valid"){f={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"};h=Math.ceil((t-a+1)/r);p=Math.ceil((n-l+1)/o);d=Math.ceil((s-c+1)/i)}else{throw Error(`Unknown padding parameter: ${e}`)}return{padInfo:f,outDepth:h,outHeight:p,outWidth:d}}function Un(e,t){if(!t){return Math.trunc(e)}switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function vr(e){const[t,n,s]=Er(e);return t===1&&n===1&&s===1}function Fe(e,t){return vr(e)||vr(t)}function eo(e){if(e==="NHWC"){return"channelsLast"}else if(e==="NCHW"){return"channelsFirst"}else{throw new Error(`Unknown dataFormat ${e}`)}}function Pe(e,t,n){if(n!=null){if(typeof t==="string"){throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)}else if(typeof t==="number"){S(js(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)}else if(typeof t==="object"){t.forEach(s=>{s.forEach(r=>{S(js(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})})}else{throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Em(e,t){const n=k(e,"x","reshape","string_or_numeric");const s={x:n};const r={shape:t};return R.runKernel(ku,s,r)}const C=v({reshape_:Em});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vm(e,t,n,s,r){const o=k(e,"x","avgPool","float32");const i=1;S(Fe(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let a=o;let l=false;if(o.rank===3){l=true;a=C(o,[1,o.shape[0],o.shape[1],o.shape[2]])}S(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`);Pe("avgPool",s,r);const c={x:a};const u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let f=R.runKernel(bc,c,u);f=Mt(f,o.dtype);if(l){return C(f,[f.shape[1],f.shape[2],f.shape[3]])}return f}const O1=v({avgPool_:vm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xm(e,t,n,s,r,o="NDHWC"){const i=k(e,"x","avgPool3d","float32");let a=i;let l=false;if(i.rank===4){l=true;a=C(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])}S(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`);S(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`);Pe("avgPool3d",s,r);const c={x:a};const u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:o};let f=R.runKernel(_c,c,u);f=Mt(f,a.dtype);if(l){return C(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]])}return f}const $m=v({avgPool3d_:xm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Am(e,t=0){S(e.length>=1,()=>"Pass at least one tensor to concat");const n=kr(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"){n.forEach(o=>{if(o.dtype!=="complex64"){throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}})}if(n.length===1){return wn(n[0])}const s=n;const r={axis:t};return R.runKernel(Ec,s,r)}const ne=v({concat_:Am});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dm(e){const t=k(e,"x","sigmoid","float32");const n={x:t};return R.runKernel(ha,n)}const us=v({sigmoid_:Dm});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rm(e,t,n){const s=k(e,"x","slice","string_or_numeric");if(s.rank===0){throw new Error("Slicing scalar is not possible")}const r={x:s};const o={begin:t,size:n};return R.runKernel(Au,r,o)}const wt=v({slice_:Rm});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Om(e){const t=k(e,"x","tanh","float32");const n={x:t};return R.runKernel(ba,n)}const Ho=v({tanh_:Om});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lm(e,t,n,s,r,o){const i=k(e,"forgetBias","basicLSTMCell");const a=k(t,"lstmKernel","basicLSTMCell");const l=k(n,"lstmBias","basicLSTMCell");const c=k(s,"data","basicLSTMCell");const u=k(r,"c","basicLSTMCell");const f=k(o,"h","basicLSTMCell");const h=ne([c,f],1);const p=mt(h,a);const d=Vt(p,l);const g=d.shape[0];const m=d.shape[1]/4;const b=[g,m];const _=wt(d,[0,0],b);const w=wt(d,[0,m],b);const N=wt(d,[0,m*2],b);const I=wt(d,[0,m*3],b);const T=Vt(ot(us(_),Ho(w)),ot(u,us(Vt(i,N))));const E=ot(Ho(T),us(I));return[T,E]}const Fm=v({basicLSTMCell_:Lm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pm(e,t,n){const s=k(e,"x","batchToSpaceND");const r=t.reduce((a,l)=>a*l);S(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`);S(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`);S(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);const o={x:s};const i={blockShape:t,crops:n};return R.runKernel(Nc,o,i)}const L1=v({batchToSpaceND_:Pm});function Um(e){let t;if(e.rank===0||e.rank===1){t=C(e,[1,1,1,e.size])}else if(e.rank===2){t=C(e,[1,1,e.shape[0],e.shape[1]])}else if(e.rank===3){t=C(e,[1,e.shape[0],e.shape[1],e.shape[2]])}else{t=e}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mm(e,t,n,s,r,o){if(o==null){o=.001}const i=k(e,"x","batchNorm");const a=k(t,"mean","batchNorm");const l=k(n,"variance","batchNorm");let c;if(r!=null){c=k(r,"scale","batchNorm")}let u;if(s!=null){u=k(s,"offset","batchNorm")}S(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks.");S(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks.");S(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const f=Um(i);const h={x:f,scale:c,offset:u,mean:a,variance:l};const p={varianceEpsilon:o};const d=R.runKernel(Kc,h,p);return C(d,i.shape)}const no=v({batchNorm_:Mm});function Vm(e,t,n,s,r,o){const i=k(e,"x","batchNorm");const a=k(t,"mean","batchNorm");const l=k(n,"variance","batchNorm");let c;if(r!=null){c=k(r,"scale","batchNorm")}let u;if(s!=null){u=k(s,"offset","batchNorm")}S(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`);S(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`);S(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`);if(c!=null){S(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)}if(u!=null){S(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`)}return no(i,a,l,u,c,o)}const Bm=v({batchNorm2d_:Vm});function Cm(e,t,n,s,r,o){const i=k(e,"x","batchNorm");const a=k(t,"mean","batchNorm");const l=k(n,"variance","batchNorm");let c;if(r!=null){c=k(r,"scale","batchNorm")}let u;if(s!=null){u=k(s,"offset","batchNorm")}S(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`);S(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`);S(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`);if(c!=null){S(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)}if(u!=null){S(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`)}return no(i,a,l,u,c,o)}const zm=v({batchNorm3d_:Cm});function Wm(e,t,n,s,r,o){const i=k(e,"x","batchNorm");const a=k(t,"mean","batchNorm");const l=k(n,"variance","batchNorm");let c;if(r!=null){c=k(r,"scale","batchNorm")}let u;if(s!=null){u=k(s,"offset","batchNorm")}S(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`);S(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`);S(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`);if(c!=null){S(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)}if(u!=null){S(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`)}return no(i,a,l,u,c,o)}const Hm=v({batchNorm4d_:Wm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qm(e,t,n){const s=k(e,"x","bincount");const r=k(t,"weights","bincount");S(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`);S(n>=0,()=>`size must be non-negative, but got ${n}.`);S(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r};const i={size:n};return R.runKernel(Ic,o,i)}const F1=v({bincount_:qm});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gm(e,t){const n=k(e,"s0","broadcastArgs","int32");const s=k(t,"s1","broadcastArgs","int32");if(n.rank!==1){throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`)}if(s.rank!==1){throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`)}const r={s0:n,s1:s};return R.runKernel(kc,r)}const Km=v({broadcastArgs_:Gm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jm(e,t){let n=k(e,"broadcastTo","x");const s=n.shape;if(t.some(c=>!(c>0)||c%1!==0)){throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`)}if(t.length<n.rank){throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`)}if(t.length>n.rank){const c=n.shape.slice();while(c.length<t.length){c.unshift(1)}n=C(n,c)}const r=n.shape;const o=Array.from(t);for(let c=t.length-1;c>=0;c--){if(r[c]===t[c]){o[c]=1}else if(n.shape[c]!==1){throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`)}}const i=o.map((c,u)=>c>1?u:-1).filter(c=>c>=0);if(i.length===0){return wn(n)}const a={x:n};const l={reps:o};return R.runKernel(_a,a,l)}const Ws=v({broadcastTo_:jm});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xm(e){const t=k(e,"x","ceil","float32");const n={x:t};return R.runKernel(Ei,n)}const Ym=v({ceil_:Xm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function so(e,t,n){const s={shape:e,value:t,dtype:n};return R.runKernel(qc,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zm(e,t,n){const s=k(e,"x","clipByValue");S(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);if(t===n){return so(s.shape,t,s.dtype)}const r={x:s};const o={clipValueMin:t,clipValueMax:n};return R.runKernel(vi,r,o)}const Jm=v({clipByValue_:Zm});function Qm(e){return ne(e,0)}const t0=v({concat1d_:Qm});function e0(e,t){return ne(e,t)}const n0=v({concat2d_:e0});function s0(e,t){return ne(e,t)}const r0=v({concat3d_:s0});function o0(e,t){return ne(e,t)}const i0=v({concat4d_:o0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a0(e,t,n,s,r="NHWC",o=[1,1],i){const a=k(e,"x","conv2d","float32");const l=k(t,"filter","conv2d","float32");let c=a;let u=false;if(a.rank===3){u=true;c=C(a,[1,a.shape[0],a.shape[1],a.shape[2]])}S(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`);S(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`);Pe("conv2d",s,i);const f=r==="NHWC"?c.shape[3]:c.shape[1];S(f===l.shape[2],()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${l.shape[2]}.`);S(Fe(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const h={x:c,filter:l};const p={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i};const d=R.runKernel(vc,h,p);if(u){return C(d,[d.shape[1],d.shape[2],d.shape[3]])}return d}const ro=v({conv2d_:a0});function l0(e,t,n,s,r="NWC",o=1,i){const a=k(e,"x","conv1d");const l=k(t,"filter","conv1d");let c=a;let u=false;if(a.rank===2){u=true;c=C(a,[1,a.shape[0],a.shape[1]])}S(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`);S(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`);Pe("conv1d",s,i);S(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`);S(Fe(n,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`);S(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const f=C(l,[1,l.shape[0],l.shape[1],l.shape[2]]);const h=C(c,[c.shape[0],1,c.shape[1],c.shape[2]]);const p=[1,n];const d=[1,o];const g="NHWC";const m=ro(h,f,p,s,g,d,i);if(u){return C(m,[m.shape[2],m.shape[3]])}return C(m,[m.shape[0],m.shape[2],m.shape[3]])}const c0=v({conv1d_:l0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u0(e,t,n,s,r,o="NHWC",i){S(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e;let l=t;let c=false;if(t.rank===3){c=true;l=C(t,[1,t.shape[0],t.shape[1],t.shape[2]]);a=[1,e[0],e[1],e[2]]}S(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`);S(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`);S(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const u=o==="NHWC"?a[3]:a[1];const f=o==="NHWC"?l.shape[3]:l.shape[1];S(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`);S(f===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${f}) must match output depth for filter ${n.shape[3]}.`);Pe("conv2dDerInput",r,i);const h={dy:l,filter:n};const p={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:a};const d=R.runKernel($c,h,p);if(c){return C(d,[d.shape[1],d.shape[2],d.shape[3]])}return d}const P1=v({conv2DBackpropInput_:u0});function f0(e,t,n,s,r,o){const i=k(e,"x","conv2dTranspose");const a=k(t,"filter","conv2dTranspose");return P1(n,i,a,s,r,"NHWC",o)}const h0=v({conv2dTranspose_:f0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p0(e,t,n,s,r="NDHWC",o=[1,1,1]){const i=k(e,"x","conv3d");const a=k(t,"filter","conv3d");let l=i;let c=false;if(i.rank===4){c=true;l=C(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])}S(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`);S(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`);S(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`);S(Fe(n,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);S(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);const u={x:l,filter:a};const f={strides:n,pad:s,dataFormat:r,dilations:o};const h=R.runKernel(Ac,u,f);if(c){return C(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]])}return h}const d0=v({conv3d_:p0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m0(e,t,n,s,r){S(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e;let i=t;let a=false;if(t.rank===4){a=true;i=C(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]);o=[1,e[0],e[1],e[2],e[3]]}const l=o[4];const c=i.shape[4];S(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`);S(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`);S(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`);S(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`);S(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);const u={dy:i,filter:n};const f={pad:r,strides:s,inputShape:o};const h=R.runKernel(Dc,u,f);if(a){return C(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]])}return h}const g0=v({conv3DBackpropInput_:m0});function y0(e,t,n,s,r){const o=k(e,"x","conv3dTranspose");const i=k(t,"filter","conv3dTranspose");return g0(n,o,i,s,r)}const b0=v({conv3dTranspose_:y0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _0(e){const t=k(e,"x","cos","float32");const n={x:t};return R.runKernel(xi,n)}const w0=v({cos_:_0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N0(e){const t=k(e,"x","cosh","float32");const n={x:t};return R.runKernel($i,n)}const I0=v({cosh_:N0});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k0(e,t=0,n=false,s=false){const r=k(e,"x","cumprod");const o={x:r};const i={axis:t,exclusive:n,reverse:s};return R.runKernel(Rc,o,i)}const T0=v({cumprod_:k0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S0(e,t=0,n=false,s=false){const r=k(e,"x","cumsum");const o={x:r};const i={axis:t,exclusive:n,reverse:s};return R.runKernel(Oc,o,i)}const E0=v({cumsum_:S0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v0(e,t,n,s=false){const r=k(e,"x","denseBincount");const o=k(t,"weights","denseBincount");S(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`);S(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`);S(n>=0,()=>`size must be non-negative, but got ${n}.`);S(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const i={x:r,weights:o};const a={size:n,binaryOutput:s};return R.runKernel(Fc,i,a)}const x0=v({denseBincount_:v0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $0(e,t,n="NHWC"){const s=k(e,"x","depthToSpace","float32");const r=n==="NHWC"?s.shape[1]:s.shape[2];const o=n==="NHWC"?s.shape[2]:s.shape[3];const i=n==="NHWC"?s.shape[3]:s.shape[1];S(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`);S(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`);S(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t} for depthToSpace with input shape
        ${s.shape}`);S(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s};const l={blockSize:t,dataFormat:n};return R.runKernel(Pc,a,l)}const A0=v({depthToSpace_:$0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D0(e,t,n,s,r="NHWC",o=[1,1],i){const a=k(e,"x","depthwiseConv2d","float32");const l=k(t,"filter","depthwiseConv2d","float32");let c=a;let u=false;if(a.rank===3){u=true;c=C(a,[1,a.shape[0],a.shape[1],a.shape[2]])}S(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`);S(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const f=r==="NHWC"?c.shape[3]:c.shape[1];S(f===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${f}) must match the inChannels dimension in filter ${l.shape[2]}.`);Pe("depthwiseConv2d",s,i);const h={x:c,filter:l};const p={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i};const d=R.runKernel(Uc,h,p);if(u){return C(d,[d.shape[1],d.shape[2],d.shape[3]])}return d}const $a=v({depthwiseConv2d_:D0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R0(e){const t=k(e,"x","diag");const n={x:t};return R.runKernel(Bc,n)}const O0=v({diag_:R0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L0(e,t,n,s,r=[1,1],o="NHWC"){const i=k(e,"x","dilation2d");const a=k(t,"filter","dilation2d");S(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`);S(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`);S(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=i;let c=false;if(i.rank===3){l=C(i,[1,i.shape[0],i.shape[1],i.shape[2]]);c=true}const u={x:l,filter:a};const f={strides:n,pad:s,dilations:r};const h=R.runKernel(Cc,u,f);if(c){return C(h,[h.shape[1],h.shape[2],h.shape[3]])}return h}const F0=v({dilation2d_:L0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P0(e,t){let n=k(e,"a","equal","string_or_numeric");let s=k(t,"b","equal","string_or_numeric");[n,s]=At(n,s);Dt(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Oi,r)}const U1=v({equal_:P0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0(e,t,n){const s=k(t,"a","where");const r=k(n,"b","where");const o=k(e,"condition","where","bool");const i=Dt(Dt(o.shape,s.shape),r.shape);const a=Ws(o,i);const l=Ws(s,i);const c=Ws(r,i);const u={condition:a,t:l,e:c};return R.runKernel($u,u)}const ys=v({where_:U0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M0(e){const t=k(e,"x","zerosLike");const n={x:t};return R.runKernel(Xu,n)}const Aa=v({zerosLike_:M0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V0(e,t){let n=k(e,"a","div");let s=k(t,"b","div");[n,s]=At(n,s);const r=ee(n,s);const o=Aa(r);const i=U1(s,o);return ys(i,o,r)}const B0=v({divNoNan_:V0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C0(e,t){const n=k(e,"t1","dot");const s=k(t,"t2","dot");S((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);const r=n.rank===1?n.size:n.shape[1];const o=s.rank===1?s.size:s.shape[0];S(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`);if(n.rank===1&&s.rank===1){const i=C(n,[1,-1]);const a=C(s,[-1,1]);const l=mt(i,a);return C(l,[])}else if(n.rank===1&&s.rank===2){const i=C(n,[1,-1]);const a=C(s,[s.shape[0],s.shape[1]]);const l=mt(i,a);return C(l,[l.size])}else if(n.rank===2&&s.rank===1){const i=C(s,[-1,1]);const a=mt(n,i);return C(a,[a.size])}else{const i=C(s,[s.shape[0],s.shape[1]]);const a=mt(n,i);return a}}const z0=v({dot_:C0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W0(e,...t){const n=t.map((r,o)=>k(r,`tensors${o}`,"einsum"));const s={equation:e};return R.runKernel(zc,n,s)}const H0=v({einsum_:W0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q0(e){const t=k(e,"x","elu","float32");const n={x:t};return R.runKernel(Di,n)}const M1=v({elu_:q0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G0(e){let t=k(e,"x","erf");S(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`.");if(t.dtype==="int32"){t=Mt(t,"float32")}const n={x:t};return R.runKernel(Ri,n)}const K0=v({erf_:G0});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V1(e,t){for(let n=0;n<e.length;++n){if(e[e.length-n-1]!==t-1-n){return false}}return true}function j0(e,t,n){const s=e.length+t.length;const r=[];let o=0;let i=0;for(let a=0;a<s;a++){if(n.indexOf(a)===-1){r.push(e[o++])}else{r.push(t[i++])}}return r}function un(e,t){const n=[];const s=e.length;for(let o=0;o<s;o++){if(t.indexOf(o)===-1){n.push(e[o])}}const r=t.map(o=>e[o]);return[n,r]}function Ue(e,t){const n=t.map(s=>1);return j0(e,n,t)}function Zn(e,t,n){S(V1(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Xe(e,t){if(V1(e,t)){return null}const n=[];for(let s=0;s<t;++s){if(e.indexOf(s)===-1){n.push(s)}}e.forEach(s=>n.push(s));return n}function B1(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function Ye(e,t){const n=[];for(let s=t-e;s<t;++s){n.push(s)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X0(e,t=null,n=false){const s=k(e,"x","max");const r={x:s};const o={reductionIndices:t,keepDims:n};return R.runKernel(eu,r,o)}const fs=v({max_:X0});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y0(e,t=null,n=false){const s=k(e,"x","min");const r={x:s};const o={axis:t,keepDims:n};return R.runKernel(iu,r,o)}const qo=v({min_:Y0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z0(e,t){let n=k(e,"base","pow");let s=k(t,"exp","pow");[n,s]=At(n,s);const r={a:n,b:s};return R.runKernel(na,r)}const Da=v({pow_:Z0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ht(e,t){if((qe(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64"){throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)")}if(t==="string"&&qe(e)&&!(e instanceof Uint8Array)){throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.")}const n=[];const s=[];return Tn(e,n,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J0(e){const t=k(e,"x","sqrt","float32");const n={x:t};return R.runKernel(da,n)}const Go=v({sqrt_:J0});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q0(e){const t=k(e,"x","square");const n={};return R.runKernel("Square",{x:t},n)}const oo=v({square_:Q0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t2(e,t=null,n=false){let s=k(e,"x","sum");if(s.dtype==="bool"){s=Mt(s,"int32")}const r={x:s};const o={axis:t,keepDims:n};return R.runKernel(Du,r,o)}const Tt=v({sum_:t2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(e,t="euclidean",n=null,s=false){e=k(e,"x","norm");const r=C1(e,t,n);let o=r.shape;if(s){const i=Bt(n,e.shape);o=Ue(r.shape,i)}return C(r,o)}function C1(e,t,n=null){if(e.rank===0){return _e(e)}if(e.rank!==1&&n===null){return C1(C(e,[-1]),t,n)}if(e.rank===1||typeof n==="number"||Array.isArray(n)&&n.length===1){if(t===1){return Tt(_e(e),n)}if(t===Infinity){return fs(_e(e),n)}if(t===-Infinity){return qo(_e(e),n)}if(t==="euclidean"||t===2){return Go(Tt(Da(_e(e),ht(2,"int32")),n))}throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1){return fs(Tt(_e(e),n[0]),n[1]-1)}if(t===Infinity){return fs(Tt(_e(e),n[1]),n[0])}if(t===-Infinity){return qo(Tt(_e(e),n[1]),n[0])}if(t==="fro"||t==="euclidean"){return Go(Tt(oo(e),n))}throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const io=v({norm_:e2});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(e,t=null,n=false){return io(e,"euclidean",t,n)}const s2=v({euclideanNorm_:n2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(e){const t=k(e,"x","exp");const n={x:t};return R.runKernel(Li,n)}const Wn=v({exp_:r2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2(e,t=0){const n=k(e,"x","expandDims","string_or_numeric");S(t<=n.rank,()=>"Axis must be <= rank of the tensor");const s={input:n};const r={dim:t};return R.runKernel(Wc,s,r)}const vn=v({expandDims_:o2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i2(e){const t=k(e,"x","expm1");const n={x:t};return R.runKernel(Fi,n)}const a2=v({expm1_:i2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l2(e,t){const n=k(e,"x","tile","string_or_numeric");S(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const s={x:n};const r={reps:t};return R.runKernel(_a,s,r)}const Hs=v({tile_:l2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c2(e,t,n,s="float32"){if(t==null){t=e}const r=at([e,t],s);const o=e<=t?e:t;for(let a=0;a<o;++a){r.set(1,a,a)}const i=C(r.toTensor(),[e,t]);if(n==null){return i}else{if(n.length===1){return Hs(vn(i,0),[n[0],1,1])}else if(n.length===2){return Hs(vn(vn(i,0),0),[n[0],n[1],1,1])}else if(n.length===3){return Hs(vn(vn(vn(i,0),0),0),[n[0],n[1],n[2],1,1])}else{throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}}const z1=v({eye_:c2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u2(e){const t=k(e,"x","floor","float32");const n={x:t};return R.runKernel(Pi,n)}const W1=v({floor_:u2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(e,t,n=0,s=0){const r=k(e,"x","gather");const o=k(t,"indices","gather","int32");const i={x:r,indices:o};const a={axis:n,batchDims:s};return R.runKernel(jc,i,a)}const H1=v({gather_:f2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h2(e,t){let n=k(e,"a","greater","string_or_numeric");let s=k(t,"b","greater","string_or_numeric");[n,s]=At(n,s);Dt(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Mi,r)}const ao=v({greater_:h2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(e,t){let n=k(e,"a","greaterEqual","string_or_numeric");let s=k(t,"b","greaterEqual","string_or_numeric");[n,s]=At(n,s);Dt(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Vi,r)}const q1=v({greaterEqual_:p2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d2(e){const t=k(e,"x","isFinite");const n={x:t};return R.runKernel(Ci,n)}const m2=v({isFinite_:d2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(e){const t=k(e,"x","isInf");const n={x:t};return R.runKernel(zi,n)}const y2=v({isInf_:g2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b2(e){const t=k(e,"x","isNaN");const n={x:t};return R.runKernel(Wi,n)}const _2=v({isNaN_:b2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2(e,t=.2){const n=k(e,"x","leakyRelu");const s={x:n};const r={alpha:t};return R.runKernel(Jc,s,r)}const G1=v({leakyRelu_:w2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N2(e,t){let n=k(e,"a","less","string_or_numeric");let s=k(t,"b","less","string_or_numeric");[n,s]=At(n,s);Dt(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Hi,r)}const I2=v({less_:N2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k2(e,t){let n=k(e,"a","lessEqual","string_or_numeric");let s=k(t,"b","lessEqual","string_or_numeric");[n,s]=At(n,s);Dt(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(qi,r)}const Ra=v({lessEqual_:k2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(e,t,n){if(n<=0){throw new Error("The number of values should be positive.")}const s={start:e,stop:t,num:n};return R.runKernel(Qc,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S2(e,t=5,n=1,s=1,r=.5){const o=k(e,"x","localResponseNormalization");S(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`);S(js(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=o;let a=false;if(o.rank===3){a=true;i=C(o,[1,o.shape[0],o.shape[1],o.shape[2]])}const l={x:i};const c={depthRadius:t,bias:n,alpha:s,beta:r};const u=R.runKernel(tu,l,c);if(a){return C(u,[u.shape[1],u.shape[2],u.shape[3]])}else{return u}}const E2=v({localResponseNormalization_:S2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(e){const t=k(e,"x","log","float32");const n={x:t};return R.runKernel(Gi,n)}const Zs=v({log_:v2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2(e){const t=k(e,"x","log1p");const n={x:t};return R.runKernel(Ki,n)}const K1=v({log1p_:x2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ln(e){return R.customGrad(e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(e){const t=k(e,"x","softplus");const n={x:t};return R.runKernel(pa,n)}const j1=v({softplus_:$2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A2(e){const t=k(e,"x","logSigmoid");const n=ln(s=>{const r=on(j1(on(s)));const o=i=>{const a=ot(i,us(on(s)));return a};return{value:r,gradFunc:o}});return n(t)}const D2=v({logSigmoid_:A2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(e,t){let n=k(e,"a","sub");let s=k(t,"b","sub");[n,s]=At(n,s);const r={a:n,b:s};return R.runKernel(ga,r)}const ct=v({sub_:R2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O2(e,t=-1){const n=k(e,"logits","logSoftmax");if(t===-1){t=n.rank-1}if(t!==n.rank-1){throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`)}const s=ln((r,o)=>{const i=true;const a=fs(r,t,true);const l=ct(r,a);const c=ct(Mt(l,"float32"),Zs(Tt(Wn(l),t,i)));o([c]);const u=(f,h)=>{const[p]=h;const d=true;const g=Wn(p);return ct(f,ot(Tt(f,t,d),g))};return{value:c,gradFunc:u}});return s(n)}const L2=v({logSoftmax_:O2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(e,t=null,n=false){const s=k(e,"x","logSumExp");const r=Bt(t,s.shape);const o=fs(s,r,true);const i=ct(s,o);const a=Wn(i);const l=Tt(a,r);const c=Zs(l);const u=Vt(C(o,c.shape),c);if(n){const f=Ue(u.shape,r);return C(u,f)}return u}const X1=v({logSumExp_:F2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P2(e,t){const n=k(e,"a","logicalAnd","bool");const s=k(t,"b","logicalAnd","bool");Dt(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(ji,r)}const xr=v({logicalAnd_:P2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(e){const t=k(e,"x","logicalNot","bool");const n={x:t};return R.runKernel(Xi,n)}const Y1=v({logicalNot_:U2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(e,t){const n=k(e,"a","logicalOr","bool");const s=k(t,"b","logicalOr","bool");Dt(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Yi,r)}const Z1=v({logicalOr_:M2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V2(e,t){const n=k(e,"a","logicalXor","bool");const s=k(t,"b","logicalXor","bool");Dt(n.shape,s.shape);return xr(Z1(e,t),Y1(xr(e,t)))}const B2=v({logicalXor_:V2});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr=2147483648;function C2(e,t,n="left"){const s=k(e,"sortedSequence","searchSorted");const r=k(t,"values","searchSorted");const o=s.shape[s.shape.length-1];const i=r.shape[r.shape.length-1];const a=C(s,[-1,o]);const l=C(r,[-1,i]);if(a.rank<2){throw new Error(`Sorted input argument must be at least 2-dimensional`)}if(a.shape[0]!==l.shape[0]){throw new Error(`Leading dimension of 'sortedSequence' and 'values' must match.`)}if(q(l.shape)>=lr){throw new Error(`values tensor size must less than ${lr}`)}if(a.shape[1]>=lr){throw new Error(`trailing dim_size must less than ${lr} for int32 output type, was ${a.shape[1]}`)}const c={sortedSequence:a,values:l};const u={side:n};return R.runKernel(xu,c,u)}const Oa=v({searchSorted_:C2});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z2(e,t){return Oa(e,t,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(e,t,n,s,r){const o=k(e,"x","maxPool");const i=1;let a=o;let l=false;if(o.rank===3){l=true;a=C(o,[1,o.shape[0],o.shape[1],o.shape[2]])}S(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`);S(Fe(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);Pe("maxPool",s,r);const c={x:a};const u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};const f=R.runKernel(nu,c,u);if(l){return C(f,[f.shape[1],f.shape[2],f.shape[3]])}return f}const J1=v({maxPool_:W2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(e,t=[1,1,1],n,s,r,o="NDHWC"){const i=k(e,"x","maxPool3d");let a=i;let l=false;if(i.rank===4){l=true;a=C(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])}S(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`);S(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`);Pe("maxPool3d",s,r);const c={x:a};const u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:o};const f=R.runKernel(su,c,u);if(l){return C(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]])}return f}const q2=v({maxPool3d_:H2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(e,t,n,s,r=false){const o=k(e,"x","maxPoolWithArgmax");const i={x:o};const a={filterSize:t,strides:n,pad:s,includeBatchInIndex:r};const l=R.runKernel(ru,i,a);return{result:l[0],indexes:l[1]}}const K2=v({maxPoolWithArgmax_:G2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(e,t){let n=k(e,"a","maximum");let s=k(t,"b","maximum");[n,s]=At(n,s);if(n.dtype==="bool"){n=Mt(n,"int32");s=Mt(s,"int32")}Dt(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Zi,r)}const X2=v({maximum_:j2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y2(e,t=null,n=false){const s=k(e,"x","mean");const r={x:s};const o={axis:t,keepDims:n};return R.runKernel(ou,r,o)}const $r=v({mean_:Y2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bs(e,t="float32"){if(t==="complex64"){const s=bs(e,"float32");const r=bs(e,"float32");return Nn(s,r)}const n=Yt(q(e),t);return R.makeTensor(n,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fn(e,t="float32"){if(t==="complex64"){const s=Fn(e,"float32");const r=bs(e,"float32");return Nn(s,r)}const n=gi(q(e),t);return R.makeTensor(n,e,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij"){throw new TypeError(`${n} is not a valid third argument to meshgrid`)}if(e===void 0){return[]}let s=k(e,"x","meshgrid",e instanceof Kt?e.dtype:"float32");if(t===void 0){return[s]}let r=k(t,"y","meshgrid",t instanceof Kt?t.dtype:"float32");const o=q(s.shape);const i=q(r.shape);if(n==="xy"){s=C(s,[1,-1]);r=C(r,[-1,1]);return[mt(Fn([i,1],s.dtype),s),mt(r,Fn([1,o],r.dtype))]}s=C(s,[-1,1]);r=C(r,[1,-1]);return[mt(s,Fn([1,i],s.dtype)),mt(Fn([o,1],r.dtype),r)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(e,t){let n=k(e,"a","minimum");let s=k(t,"b","minimum");[n,s]=At(n,s);if(n.dtype==="bool"){n=Mt(n,"int32");s=Mt(s,"int32")}Dt(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(Ji,r)}const Q1=v({minimum_:J2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q2(e,t,n){S(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const s=k(e,"x","mirrorPad");if(s.rank===0){throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad")}S(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r=n==="reflect"?1:0;for(let a=0;a<s.rank;a++){S(t[a].length===2,()=>`Invalid number of paddings. Must be length of 2 each.`);S(t[a][0]>=0&&t[a][0]<=s.shape[a]-r&&t[a][1]>=0&&t[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`)}const o={paddings:t,mode:n};const i={x:s};return R.runKernel(au,i,o)}const tg=v({mirrorPad_:Q2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eg(e,t){let n=k(e,"a","mod");let s=k(t,"b","mod");[n,s]=At(n,s);const r={a:n,b:s};return R.runKernel(Qi,r)}const ng=v({mod_:eg});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sg(e,t=null,n=false){e=k(e,"x","moments");const s=Bt(t,e.shape);const r=$r(e,s,n);let o=r.shape;if(!n){o=Ue(r.shape,s)}const i=oo(ct(Mt(e,"float32"),C(r,o)));const a=$r(i,s,n);return{mean:r,variance:a}}const rg=v({moments_:sg});function og(e,t,n,s){const r=k(t,"data","multiRNNCell");const o=kr(n,"c","multiRNNCell");const i=kr(s,"h","multiRNNCell");let a=r;const l=[];for(let f=0;f<e.length;f++){const h=e[f](a,o[f],i[f]);l.push(h[0]);l.push(h[1]);a=h[1]}const c=[];const u=[];for(let f=0;f<l.length;f+=2){c.push(l[f]);u.push(l[f+1])}return[c,u]}const ig=v({multiRNNCell_:og});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ag(e,t,n,s=false){const r=k(e,"logits","multinomial");const o=r.size;const i=r.rank;if(o<2){throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`)}if(i>2){throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`)}n=n||Math.random();const a=i===1?C(r,[1,-1]):r;const l={logits:a};const c={numSamples:t,seed:n,normalized:s};const u=R.runKernel(lu,l,c);return i===1?C(u,[u.size]):u}const lg=v({multinomial_:ag});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cg(e,t){let n=k(e,"a","notEqual","string_or_numeric");let s=k(t,"b","notEqual","string_or_numeric");[n,s]=At(n,s);Dt(n.shape,s.shape);const r={a:n,b:s};return R.runKernel(ea,r)}const tf=v({notEqual_:cg});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ug(e){const t=k(e,"x","onesLike");const n={x:t};return R.runKernel(pu,n)}const fg=v({onesLike_:ug});function hg(e,t){const n=k(e,"v1","outerProduct");const s=k(t,"v2","outerProduct");S(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);const r=C(n,[-1,1]);const o=C(s,[1,-1]);return mt(r,o)}const pg=v({outerProduct_:hg});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dg(e,t,n=0){const s=k(e,"x","pad");if(s.rank===0){throw new Error("pad(scalar) is not defined. Pass non-scalar to pad")}const r={paddings:t,constantValue:n};const o={x:s};return R.runKernel(gu,o,r)}const sr=v({pad_:dg});function mg(e,t,n=0){S(t.length===2,()=>"Invalid number of paddings. Must be length of 2.");return sr(e,[t],n)}const gg=v({pad1d_:mg});function yg(e,t,n=0){S(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each.");return sr(e,t,n)}const bg=v({pad2d_:yg});function _g(e,t,n=0){S(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each.");return sr(e,t,n)}const wg=v({pad3d_:_g});function Ng(e,t,n=0){S(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each.");return sr(e,t,n)}const Ig=v({pad4d_:Ng});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kg(e,t,n){const s=k(e,"x","spaceToBatchND");S(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`);S(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`);S(s.shape.reduce((i,a,l)=>{if(l>0&&l<=t.length){return i&&(a+n[l-1][0]+n[l-1][1])%t[l-1]===0}return i},true),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const r={x:s};const o={blockShape:t,paddings:n};return R.runKernel(Ru,r,o)}const ef=v({spaceToBatchND_:kg});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tg(e,t,n,s,r,o,i){if(r==null){r=[1,1]}if(o==null){o=1}if(s===0){s="valid"}const a=k(e,"x","maxPool");let l=a;let c=false;if(a.rank===3){c=true;l=C(a,[1,a.shape[0],a.shape[1],a.shape[2]])}S(Fe(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const u=xs(l.shape,t,o,r,s);const f=[u.dilationHeight,u.dilationWidth];let h;if(s==="same"){h=Eg([u.filterHeight,u.filterWidth],f)}else{h=[[0,0],[0,0]]}const p=f[0]===1&&f[1]===1;const[d,g]=Sg([u.inHeight,u.inWidth],f,h);const m=p?s:"valid";const b=p?l:ef(l,f,d);const _=n==="avg"?()=>O1(b,t,o,m,i):()=>J1(b,t,o,m,i);const w=_();const N=p?w:L1(w,f,g);if(c){return C(N,[N.shape[1],N.shape[2],N.shape[3]])}return N}function Sg(e,t,n){const s=n.map(u=>u[0]);const r=n.map(u=>u[1]);const o=e.concat(s,r);const i=t.map((u,f)=>(u-o[f]%u)%u);const a=r.map((u,f)=>u+i[f]);const l=t.map((u,f)=>[s[f],a[f]]);const c=t.map((u,f)=>[0,i[f]]);return[l,c]}function Eg(e,t){const n=e.map((i,a)=>{return i+(i-1)*(t[a]-1)});const s=n.map(i=>i-1);const r=s.map(i=>Math.floor(i/2));const o=s.map((i,a)=>i-r[a]);return s.map((i,a)=>{return[r[a],o[a]]})}const vg=v({pool_:Tg});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xg(e,t){const n=k(e,"x","prelu");const s=k(t,"alpha","prelu");const r={x:n,alpha:s};return R.runKernel(yu,r)}const nf=v({prelu_:xg});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $g(e,t=null,n=false){let s=k(e,"x","prod");if(s.dtype==="bool"){s=Mt(s,"int32")}const r={x:s};const o={axis:t,keepDims:n};return R.runKernel(bu,r,o)}const Ag=v({prod_:$g});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dg(e,t,n,s){const r=e.map((u,f)=>k(u,`tensors${f}`,"raggedGather","int32"));const o=k(t,"paramsDenseValues","raggedGather");const i=k(n,"indices","raggedGather","int32");const a={paramsNestedSplits:r,paramsDenseValues:o,indices:i};const l={outputRaggedRank:s};const c=R.runKernel(_u,a,l);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const Rg=v({raggedGather_:Dg});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Og(e,t,n,s,r){const o=k(e,"shape","raggedTensorToTensor","int32");const i=k(t,"values","raggedTensorToTensor");const a=k(n,"defaultValue","raggedTensorToTensor",i.dtype);const l=s.map((f,h)=>k(f,`tensors${h}`,"raggedTensorToTensor","int32"));const c={shape:o,values:i,defaultValue:a,rowPartitionTensors:l};const u={rowPartitionTypes:r};return R.runKernel(wu,c,u)}const Lg=v({raggedTensorToTensor_:Og});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fg(e,t,n){const s=q(e);let r=null;if(n==null||n==="float32"){r=new Float32Array(s)}else if(n==="int32"){r=new Int32Array(s)}else if(n==="bool"){r=new Uint8Array(s)}else{throw new Error(`Unknown data type ${n}`)}for(let o=0;o<s;o++){r[o]=t()}return R.makeTensor(r,e,n)}const Pg=v({rand_:Fg});var sf={exports:{}};(function(e){(function(t,n,s){function r(l){var c=this,u=a();c.next=function(){var f=2091639*c.s0+c.c*23283064365386963e-26;c.s0=c.s1;c.s1=c.s2;return c.s2=f-(c.c=f|0)};c.c=1;c.s0=u(" ");c.s1=u(" ");c.s2=u(" ");c.s0-=u(l);if(c.s0<0){c.s0+=1}c.s1-=u(l);if(c.s1<0){c.s1+=1}c.s2-=u(l);if(c.s2<0){c.s2+=1}u=null}function o(l,c){c.c=l.c;c.s0=l.s0;c.s1=l.s1;c.s2=l.s2;return c}function i(l,c){var u=new r(l),f=c&&c.state,h=u.next;h.int32=function(){return u.next()*4294967296|0};h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32};h.quick=h;if(f){if(typeof f=="object")o(f,u);h.state=function(){return o(u,{})}}return h}function a(){var l=4022871197;var c=function(u){u=String(u);for(var f=0;f<u.length;f++){l+=u.charCodeAt(f);var h=.02519603282416938*l;l=h>>>0;h-=l;h*=l;l=h>>>0;h-=l;l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return c}if(n&&n.exports){n.exports=i}else{this.alea=i}})(jn,e)})(sf);var Ug=sf.exports;var rf={exports:{}};(function(e){(function(t,n,s){function r(a){var l=this,c="";l.x=0;l.y=0;l.z=0;l.w=0;l.next=function(){var f=l.x^l.x<<11;l.x=l.y;l.y=l.z;l.z=l.w;return l.w^=l.w>>>19^f^f>>>8};if(a===(a|0)){l.x=a}else{c+=a}for(var u=0;u<c.length+64;u++){l.x^=c.charCodeAt(u)|0;l.next()}}function o(a,l){l.x=a.x;l.y=a.y;l.z=a.z;l.w=a.w;return l}function i(a,l){var c=new r(a),u=l&&l.state,f=function(){return(c.next()>>>0)/4294967296};f.double=function(){do{var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,d=(h+p)/(1<<21)}while(d===0);return d};f.int32=c.next;f.quick=f;if(u){if(typeof u=="object")o(u,c);f.state=function(){return o(c,{})}}return f}if(n&&n.exports){n.exports=i}else{this.xor128=i}})(jn,e)})(rf);var Mg=rf.exports;var of={exports:{}};(function(e){(function(t,n,s){function r(a){var l=this,c="";l.next=function(){var f=l.x^l.x>>>2;l.x=l.y;l.y=l.z;l.z=l.w;l.w=l.v;return(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(f^f<<1))|0};l.x=0;l.y=0;l.z=0;l.w=0;l.v=0;if(a===(a|0)){l.x=a}else{c+=a}for(var u=0;u<c.length+64;u++){l.x^=c.charCodeAt(u)|0;if(u==c.length){l.d=l.x<<10^l.x>>>4}l.next()}}function o(a,l){l.x=a.x;l.y=a.y;l.z=a.z;l.w=a.w;l.v=a.v;l.d=a.d;return l}function i(a,l){var c=new r(a),u=l&&l.state,f=function(){return(c.next()>>>0)/4294967296};f.double=function(){do{var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,d=(h+p)/(1<<21)}while(d===0);return d};f.int32=c.next;f.quick=f;if(u){if(typeof u=="object")o(u,c);f.state=function(){return o(c,{})}}return f}if(n&&n.exports){n.exports=i}else{this.xorwow=i}})(jn,e)})(of);var Vg=of.exports;var af={exports:{}};(function(e){(function(t,n,s){function r(a){var l=this;l.next=function(){var u=l.x,f=l.i,h,p;h=u[f];h^=h>>>7;p=h^h<<24;h=u[f+1&7];p^=h^h>>>10;h=u[f+3&7];p^=h^h>>>3;h=u[f+4&7];p^=h^h<<7;h=u[f+7&7];h=h^h<<13;p^=h^h<<9;u[f]=p;l.i=f+1&7;return p};function c(u,f){var h,p=[];if(f===(f|0)){p[0]=f}else{f=""+f;for(h=0;h<f.length;++h){p[h&7]=p[h&7]<<15^f.charCodeAt(h)+p[h+1&7]<<13}}while(p.length<8)p.push(0);for(h=0;h<8&&p[h]===0;++h);if(h==8)p[7]=-1;else p[h];u.x=p;u.i=0;for(h=256;h>0;--h){u.next()}}c(l,a)}function o(a,l){l.x=a.x.slice();l.i=a.i;return l}function i(a,l){if(a==null)a=+new Date;var c=new r(a),u=l&&l.state,f=function(){return(c.next()>>>0)/4294967296};f.double=function(){do{var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,d=(h+p)/(1<<21)}while(d===0);return d};f.int32=c.next;f.quick=f;if(u){if(u.x)o(u,c);f.state=function(){return o(c,{})}}return f}if(n&&n.exports){n.exports=i}else{this.xorshift7=i}})(jn,e)})(af);var Bg=af.exports;var lf={exports:{}};(function(e){(function(t,n,s){function r(a){var l=this;l.next=function(){var u=l.w,f=l.X,h=l.i,p,d;l.w=u=u+1640531527|0;d=f[h+34&127];p=f[h=h+1&127];d^=d<<13;p^=p<<17;d^=d>>>15;p^=p>>>12;d=f[h]=d^p;l.i=h;return d+(u^u>>>16)|0};function c(u,f){var h,p,d,g,m,b=[],_=128;if(f===(f|0)){p=f;f=null}else{f=f+"\0";p=0;_=Math.max(_,f.length)}for(d=0,g=-32;g<_;++g){if(f)p^=f.charCodeAt((g+32)%f.length);if(g===0)m=p;p^=p<<10;p^=p>>>15;p^=p<<4;p^=p>>>13;if(g>=0){m=m+1640531527|0;h=b[g&127]^=p+m;d=0==h?d+1:0}}if(d>=128){b[(f&&f.length||0)&127]=-1}d=127;for(g=4*128;g>0;--g){p=b[d+34&127];h=b[d=d+1&127];p^=p<<13;h^=h<<17;p^=p>>>15;h^=h>>>12;b[d]=p^h}u.w=m;u.X=b;u.i=d}c(l,a)}function o(a,l){l.i=a.i;l.w=a.w;l.X=a.X.slice();return l}function i(a,l){if(a==null)a=+new Date;var c=new r(a),u=l&&l.state,f=function(){return(c.next()>>>0)/4294967296};f.double=function(){do{var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,d=(h+p)/(1<<21)}while(d===0);return d};f.int32=c.next;f.quick=f;if(u){if(u.X)o(u,c);f.state=function(){return o(c,{})}}return f}if(n&&n.exports){n.exports=i}else{this.xor4096=i}})(jn,e)})(lf);var Cg=lf.exports;var cf={exports:{}};(function(e){(function(t,n,s){function r(a){var l=this,c="";l.next=function(){var f=l.b,h=l.c,p=l.d,d=l.a;f=f<<25^f>>>7^h;h=h-p|0;p=p<<24^p>>>8^d;d=d-f|0;l.b=f=f<<20^f>>>12^h;l.c=h=h-p|0;l.d=p<<16^h>>>16^d;return l.a=d-f|0};l.a=0;l.b=0;l.c=2654435769|0;l.d=1367130551;if(a===Math.floor(a)){l.a=a/4294967296|0;l.b=a|0}else{c+=a}for(var u=0;u<c.length+20;u++){l.b^=c.charCodeAt(u)|0;l.next()}}function o(a,l){l.a=a.a;l.b=a.b;l.c=a.c;l.d=a.d;return l}function i(a,l){var c=new r(a),u=l&&l.state,f=function(){return(c.next()>>>0)/4294967296};f.double=function(){do{var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,d=(h+p)/(1<<21)}while(d===0);return d};f.int32=c.next;f.quick=f;if(u){if(typeof u=="object")o(u,c);f.state=function(){return o(c,{})}}return f}if(n&&n.exports){n.exports=i}else{this.tychei=i}})(jn,e)})(cf);var zg=cf.exports;var uf={exports:{}};var Wg={};var Hg=Object.freeze({__proto__:null,default:Wg});var qg=sp(Hg);(function(e){(function(t,n,s){var r=256,o=6,i=52,a="random",l=s.pow(r,o),c=s.pow(2,i),u=c*2,f=r-1,h;function p(N,I,T){var E=[];I=I==true?{entropy:true}:I||{};var D=b(m(I.entropy?[N,w(n)]:N==null?_():N,3),E);var L=new d(E);var P=function(){var M=L.g(o),B=l,$=0;while(M<c){M=(M+$)*r;B*=r;$=L.g(1)}while(M>=u){M/=2;B/=2;$>>>=1}return(M+$)/B};P.int32=function(){return L.g(4)|0};P.quick=function(){return L.g(4)/4294967296};P.double=P;b(w(L.S),n);return(I.pass||T||function(M,B,$,x){if(x){if(x.S){g(x,L)}M.state=function(){return g(L,{})}}if($){s[a]=M;return B}else return M})(P,D,"global"in I?I.global:this==s,I.state)}function d(N){var I,T=N.length,E=this,D=0,L=E.i=E.j=0,P=E.S=[];if(!T){N=[T++]}while(D<r){P[D]=D++}for(D=0;D<r;D++){P[D]=P[L=f&L+N[D%T]+(I=P[D])];P[L]=I}(E.g=function(M){var B,$=0,x=E.i,A=E.j,O=E.S;while(M--){B=O[x=f&x+1];$=$*r+O[f&(O[x]=O[A=f&A+B])+(O[A]=B)]}E.i=x;E.j=A;return $})(r)}function g(N,I){I.i=N.i;I.j=N.j;I.S=N.S.slice();return I}function m(N,I){var T=[],E=typeof N,D;if(I&&E=="object"){for(D in N){try{T.push(m(N[D],I-1))}catch(L){}}}return T.length?T:E=="string"?N:N+"\0"}function b(N,I){var T=N+"",E,D=0;while(D<T.length){I[f&D]=f&(E^=I[f&D]*19)+T.charCodeAt(D++)}return w(I)}function _(){try{var N;if(h&&(N=h.randomBytes)){N=N(r)}else{N=new Uint8Array(r);(t.crypto||t.msCrypto).getRandomValues(N)}return w(N)}catch(E){var I=t.navigator,T=I&&I.plugins;return[+new Date,t,T,t.screen,w(n)]}}function w(N){return String.fromCharCode.apply(0,N)}b(s.random(),n);if(e.exports){e.exports=p;try{h=qg}catch(N){}}else{s["seed"+a]=p}})(typeof self!=="undefined"?self:jn,[],Math)})(uf);var Gg=uf.exports;var Kg=Ug;var jg=Mg;var Xg=Vg;var Yg=Bg;var Zg=Cg;var Jg=zg;var Jn=Gg;Jn.alea=Kg;Jn.xor128=jg;Jn.xorwow=Xg;Jn.xorshift7=Yg;Jn.xor4096=Zg;Jn.tychei=Jg;var lo=Jn;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class La{constructor(t,n,s,r,o){this.mean=t;this.stdDev=n;this.dtype=s;this.nextVal=NaN;this.truncated=r;if(this.truncated){this.upper=this.mean+this.stdDev*2;this.lower=this.mean-this.stdDev*2}const i=o?o:Math.random();this.random=lo.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;this.nextVal=NaN;return r}let t,n;let s=false;while(!s){let r,o,i;do{r=2*this.random()-1;o=2*this.random()-1;i=r*r+o*o}while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*a;n=this.mean+this.stdDev*o*a;if(!this.truncated||this.isValidTruncated(t)){s=true}}if(!this.truncated||this.isValidTruncated(n)){this.nextVal=this.convertValue(n)}return this.convertValue(t)}convertValue(t){if(this.dtype==null||this.dtype==="float32"){return t}return Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Qg{constructor(t,n,s,r){this.alpha=t;this.beta=1/n;this.dtype=s;const o=r?r:Math.random();this.randu=lo.alea(o.toString());this.randn=new La(0,1,s,false,this.randu());if(t<1){this.d=t+2/3}else{this.d=t-1/3}this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,n,s,r,o,i;while(true){do{r=this.randn.nextValue();i=1+this.c*r}while(i<=0);i*=i*i;t=r*r;n=1-.331*t*t;s=.5*t+this.d*(1-i+Math.log(i));o=this.randu();if(o<n||Math.log(o)<s){break}}i=1/this.beta*this.d*i;if(this.alpha<1){i*=Math.pow(this.randu(),1/this.alpha)}return this.convertValue(i)}convertValue(t){if(this.dtype==="float32"){return t}return Math.round(t)}}class t4{constructor(t=0,n=1,s,r){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";this.min=t;this.range=n-t;this.dtype=s;if(r==null){r=Math.random()}if(typeof r==="number"){r=r.toString()}if(!this.canReturnFloat()&&this.range<=1){throw new Error(`The difference between ${t} - ${n} <= 1 and dtype is not float`)}this.random=lo.alea(r)}convertValue(t){if(this.canReturnFloat()){return t}return Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(e,t,n=1,s="float32",r){if(n==null){n=1}if(s==null){s="float32"}if(s!=="float32"&&s!=="int32"){throw new Error(`Unsupported data type ${s}`)}const o=new Qg(t,n,s,r);const i=at(e,s);for(let a=0;a<i.values.length;a++){i.values[a]=o.nextValue()}return i.toTensor()}const n4=v({randomGamma_:e4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(e,t=0,n=1,s,r){if(s!=null&&s==="bool"){throw new Error(`Unsupported data type ${s}`)}const o=new La(t,n,s,false,r);const i=at(e,s);for(let a=0;a<i.values.length;a++){i.values[a]=o.nextValue()}return i.toTensor()}const ff=v({randomNormal_:s4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(e,t,n){if(t!=null&&t==="bool"){throw new Error(`Unsupported data type ${t}`)}return ff(e,0,1,t,n)}const o4=v({randomStandardNormal_:r4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(e,t=0,n=1,s="float32",r){const o=at(e,s);const i=new t4(t,n,null,r);for(let a=0;a<o.values.length;a++){o.values[a]=i.nextValue()}return o.toTensor()}const hf=v({randomUniform_:i4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Js(e,t,n=1,s="float32"){if(n===0){throw new Error("Cannot have a step of zero")}const r={start:e,stop:t,step:n,dtype:s};return R.runKernel(Nu,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(e){const t=k(e,"x","reciprocal");const n={x:t};return R.runKernel(sa,n)}const l4=v({reciprocal_:a4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(e){const t=k(e,"x","relu");const n={x:t};return R.runKernel(ra,n)}const co=v({relu_:c4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(e){const t=k(e,"x","relu6");const n={x:t};return R.runKernel(oa,n)}const pf=v({relu6_:u4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(e,t){const n=k(e,"x","reverse");const s={x:n};const r={dims:t};return R.runKernel(Eu,s,r)}const Hn=v({reverse_:f4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(e){const t=k(e,"x","reverse");S(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`);return Hn(t,0)}const p4=v({reverse1d_:h4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(e,t){const n=k(e,"x","reverse");S(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`);return Hn(n,t)}const m4=v({reverse2d_:d4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(e,t){const n=k(e,"x","reverse");S(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`);return Hn(n,t)}const y4=v({reverse3d_:g4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(e,t){const n=k(e,"x","reverse");S(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`);return Hn(n,t)}const _4=v({reverse4d_:b4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(e){const t=k(e,"x","round");const n={x:t};return R.runKernel(ia,n)}const df=v({round_:w4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(e){const t=k(e,"x","rsqrt","float32");const n={x:t};return R.runKernel(aa,n)}const I4=v({rsqrt_:N4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(e){const t=k(e,"x","selu");const n={x:t};return R.runKernel(la,n)}const T4=v({selu_:k4});function S4(e,t,n,s,r,o=[1,1],i="NHWC"){const a=k(e,"x","separableConv2d");const l=k(t,"depthwiseFilter","separableConv2d");const c=k(n,"pointwiseFilter","separableConv2d");let u=a;let f=false;if(a.rank===3){f=true;u=C(a,[1,a.shape[0],a.shape[1],a.shape[2]])}if(i==="NCHW"){throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported")}S(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`);S(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`);S(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`);S(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`);S(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const h=l.shape[2];const p=l.shape[3];S(c.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${c.shape[2]}.`);const d=$a(u,l,s,r,i,o);const g=1;const m=ro(d,c,g,"valid",i);if(f){return C(m,[m.shape[1],m.shape[2],m.shape[3]])}return m}const E4=v({separableConv2d_:S4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function v4(e,t){const n=k(e,"x","setdiff1d");const s=k(t,"y","setdiff1d");S(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`);S(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`);S(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await n.data();const o=await s.data();const i=new Set(o);let a=0;for(let u=0;u<r.length;u++){if(!i.has(r[u])){a++}}const l=new Ut([a],n.dtype);const c=new Ut([a],"int32");for(let u=0,f=0;u<r.length;u++){if(!i.has(r[u])){l.values[f]=r[u];c.values[f]=u;f++}}return[l.toTensor(),c.toTensor()]}const x4=v4;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $4(e){const t=k(e,"x","sign");const n={x:t};return R.runKernel(fa,n)}const A4=v({sign_:$4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(e){const t=k(e,"x","sin","float32");const n={x:t};return R.runKernel(ca,n)}const R4=v({sin_:D4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(e){const t=k(e,"x","sinh");const n={x:t};return R.runKernel(ua,n)}const L4=v({sinh_:O4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F4(e,t,n){const s=k(e,"x","slice1d");S(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`);return wt(s,[t],[n])}const P4=v({slice1d_:F4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(e,t,n){const s=k(e,"x","slice2d");S(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`);return wt(s,t,n)}const M4=v({slice2d_:U4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(e,t,n){const s=k(e,"x","slice3d");S(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`);return wt(s,t,n)}const B4=v({slice3d_:V4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(e,t,n){const s=k(e,"x","slice4d");S(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`);return wt(s,t,n)}const z4=v({slice4d_:C4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(e,t=-1){const n=k(e,"logits","softmax","float32");if(t===-1){t=n.rank-1}if(t!==n.rank-1){throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`)}const s={logits:n};const r={dim:t};return R.runKernel(Lu,s,r)}const H4=v({softmax_:W4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(e){S(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return R.runKernel(Hc,t)}const Fa=v({fft_:q4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(e){S(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return R.runKernel(Yc,t)}const Ar=v({ifft_:G4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(e){const t=e.shape[e.shape.length-1];const n=e.size/t;let s;if(t<=2){const r=C(e,[n,t]);s=Ar(r)}else{const r=[n,2*(t-1)];const o=C(Ys(e),[n,t]);const i=C(Jr(e),[n,t]);const a=Hn(wt(o,[0,1],[n,t-2]),1);const l=ot(Hn(wt(i,[0,1],[n,t-2]),1),ht(-1));const c=ne([o,a],1);const u=ne([i,l],1);const f=C(Nn(c,u),[r[0],r[1]]);s=Ar(f)}s=Ys(s);if(e.rank===3&&e.shape[0]!==0){const r=s;const o=e.shape[0];s=C(s,[o,s.shape[0]/o,s.shape[1]]);r.dispose()}return s}const mf=v({irfft_:K4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(e,t,n=0){const s=k(e,"x","split");const r={x:s};const o={numOrSizeSplits:t,axis:n};return R.runKernel(Ou,r,o)}const Qs=v({split_:j4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(e,t){S(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(t!=null&&t<n){const d=e.shape.map(m=>0);const g=e.shape.map(m=>m);g[e.shape.length-1]=t;r=wt(e,d,g);n=t}else if(t!=null&&t>n){const d=e.shape.map(g=>g);d[e.shape.length-1]=t-n;r=ne([e,bs(d)],e.shape.length-1);n=t}else{r=e}const o=Aa(r);const i=C(Nn(r,o),[s,n]);const a=Fa(i);const l=Math.floor(n/2)+1;const c=Ys(a);const u=Jr(a);const f=Qs(c,[l,n-l],c.shape.length-1);const h=Qs(u,[l,n-l],u.shape.length-1);const p=r.shape.slice();p[r.shape.length-1]=l;return C(Nn(f[0],h[0]),p)}const Pa=v({rfft_:X4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(e,t){let n=k(e,"a","squaredDifference");let s=k(t,"b","squaredDifference");[n,s]=At(n,s);Dt(n.shape,s.shape);const r={a:n,b:s};const o={};return R.runKernel(ma,r,o)}const gf=v({squaredDifference_:Y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(e,t){const n=k(e,"x","squeeze","string_or_numeric");return C(n,Dh(n.shape,t).newShape)}const Ua=v({squeeze_:Z4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(e,t=0){const n=kr(e,"tensors","stack","string_or_numeric");S(n.length>=1,()=>"Pass at least one tensor to tf.stack");if(n.length>0){S(t<=n[0].rank,()=>"Axis must be <= rank of the tensor")}const s=n;const r={axis:t};return R.runKernel(mu,s,r)}const cn=v({stack_:J4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4(e,t=0){const n=k(e,"x","step");const s={x:n};const r={alpha:t};return R.runKernel(wa,s,r)}const yf=v({step_:Q4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(e,t,n,s,r=0,o=0,i=0,a=0,l=0){const c=k(e,"x","stridedSlice","string_or_numeric");const u={x:c};const f={begin:t,end:n,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return R.runKernel(Bu,u,f)}const e5=v({stridedSlice_:t5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(e){const t=k(e,"x","tan","float32");const n={x:t};return R.runKernel(ya,n)}const s5=v({tan_:n5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function De(e,t){Ss(e);const n=kn(e,t);if(n.length!==1){throw new Error("tensor1d() requires values to be a flat/TypedArray")}const s=null;return Tn(e,s,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(e,t,n){Ss(e);if(t!=null&&t.length!==2){throw new Error("tensor2d() requires shape to have two numbers")}const s=kn(e,n);if(s.length!==2&&s.length!==1){throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray")}if(s.length===1&&t==null){throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray")}return Tn(e,t,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(e,t,n){Ss(e);if(t!=null&&t.length!==4){throw new Error("tensor4d() requires shape to have four numbers")}const s=kn(e,n);if(s.length!==4&&s.length!==1){throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray")}if(s.length===1&&t==null){throw new Error("tensor4d() requires shape to be provided when `values` are a flat array")}return Tn(e,t,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o5(e,t,n){Ss(e);if(t!=null&&t.length!==5){throw new Error("tensor5d() requires shape to have five numbers")}const s=kn(e,n);if(s.length!==5&&s.length!==1){throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray")}if(s.length===1&&t==null){throw new Error("tensor5d() requires shape to be provided when `values` are a flat array")}return Tn(e,t,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(e,t,n){Ss(e);if(t!=null&&t.length!==6){throw new Error("tensor6d() requires shape to have six numbers")}const s=kn(e,n);if(s.length!==6&&s.length!==1){throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray")}if(s.length===1&&t==null){throw new Error("tensor6d() requires shape to be provided when `values` are a flat array")}t=t||s;return Tn(e,t,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(e,t=1,n=true){const s=k(e,"x","topk");if(s.rank===0){throw new Error("topk() expects the input to be of rank 1 or higher")}const r=s.shape[s.shape.length-1];if(t<0){throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`)}if(t>r){throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`)}const o={x:s};const i={k:t,sorted:n};const[a,l]=R.runKernel(Hu,o,i);return{values:a,indices:l}}const l5=v({topk_:a5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(e,t=0,n=1,s,r){if(s!=null&&s==="bool"){throw new Error(`Unsupported data type $ { dtype }`)}const o=new La(t,n,s,true,r);const i=at(e,s);for(let a=0;a<i.values.length;a++){i.values[a]=o.nextValue()}return i.toTensor()}const u5=v({truncatedNormal_:c5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5(e,t=0){const n=k(e,"x","unique","string_or_numeric");S(n.rank>0,()=>"The input tensor must be at least 1D");const s={x:n};const r={axis:t};const[o,i]=R.runKernel(Gu,s,r);return{values:o,indices:i}}const h5=v({unique_:f5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(e,t,n){const s=k(e,"x","unsortedSegmentSum");const r=k(t,"segmentIds","unsortedSegmentSum","int32");S(js(n),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r};const i={numSegments:n};return R.runKernel(ju,o,i)}const d5=v({unsortedSegmentSum_:p5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(e,t=0){const n=k(e,"x","unstack","string_or_numeric");S(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const s={value:n};const r={axis:t};return R.runKernel(Ku,s,r)}const Qn=v({unstack_:m5});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g5(e,t){return Oa(e,t,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(e,t=true,n,s){return R.makeVariable(e,t,n,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bf(e,t){const n=[];for(let o=0;o<t.length;o++){if(t[o]){n.push(o)}}const s=at(e,"int32");const r=at([n.length,e.length],"int32");for(let o=0;o<n.length;o++){const i=s.indexToLoc(n[o]);const a=o*e.length;r.values.set(i,a)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function b5(e){const t=k(e,"condition","whereAsync","bool");const n=await t.data();const s=bf(t.shape,n);if(e!==t){t.dispose()}return s}const _f=b5;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function _5(e,t,n){const s=k(e,"tensor","boolMask");const r=k(t,"mask","boolMask","bool");const o=n==null?0:n;const i=r.rank;const a=s.shape;S(i>0,()=>"mask cannot be scalar");ge(a.slice(o,o+i),r.shape,`mask's shape must match the first K dimensions of tensor's shape,`);let l=1;for(let g=o;g<o+i;g++){l*=a[g]}const c=a.slice(0,o).concat([l],a.slice(o+i));const u=C(s,c);const f=C(r,[-1]);const h=await _f(f);const p=Ua(h,[1]);const d=H1(u,p,o);if(e!==s){s.dispose()}if(t!==r){r.dispose()}p.dispose();u.dispose();f.dispose();h.dispose();return d}const w5=_5;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5(e,t,n,s,r=true){const o=k(e,"v","movingAverage");const i=k(t,"x","movingAverage");const a=k(n,"decay","movingAverage");Tp(o,i);S(Oe(o.shape,i.shape),()=>"Shape mismatch in v and x");const l=ht(1);const c=ct(l,a);let u=ot(ct(i,o),c);if(r){S(s!=null,()=>"When using zeroDebias: true, step is required.");const f=k(s,"step","movingAverage");u=ee(u,ct(l,Da(a,f)))}return Vt(o,u)}const I5=v({movingAverage_:N5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k5(e,t,n){const s=k(e,"indices","scatterND","int32");const r=k(t,"updates","scatterND");Md(r,s,n);const o={indices:s,updates:r};const i={shape:n};return R.runKernel(vu,o,i)}const T5=v({scatterND_:k5});function S5(e,t,n,s){if(e.dtype!=="int32"){throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`)}if(e.rank>2){throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`)}const r=e.rank>0?e.shape[0]:1;const o=e.rank>1?e.shape[1]:1;if(n.length!==o){throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`)}const i=t.size;if(!(t.rank===0||t.rank===1&&i===r)){throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`)}if(t.dtype!==s.dtype){throw new Error("sparseValues.dtype must match defaultValues.dtype")}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(e,t,n,s=0){const r=k(e,"sparseIndices","sparseToDense","int32");const o=k(t,"sparseValues","sparseToDense","string_or_numeric");const i=k(s,"defaultValue","sparseToDense",o.dtype);S5(r,o,n,i);const a={sparseIndices:r,sparseValues:o,defaultValue:i};const l={outputShape:n};return R.runKernel(Vu,a,l)}const v5=v({sparseToDense_:E5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x5(e,t){const n=k(t,"indices","gatherND","int32");const s=k(e,"x","gatherND","string_or_numeric");const r={params:s,indices:n};return R.runKernel(Xc,r)}const $5=v({gatherND_:x5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(e,t){if(t==null){return e.shape.slice()}if(Oe(e.shape,t)){return t}if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++){if(t[s]==null&&e.shape[s]!=null){n.push(e.shape[s])}else{n.push(t[s])}}return n}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D5(e,t,n,s){const r=k(e,"x","dropout");S(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`);S(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`);if(t===0){return e instanceof Kt?r.clone():r}const o=A5(r,n);const i=1-t;const a=ee(W1(Vt(hf(o,0,1,"float32",s),i)),i);return ot(r,a)}const R5=v({dropout_:D5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wf(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Ma(e,t,n){const s=1-e%2;const r=new Float32Array(e);for(let o=0;o<e;++o){const i=2*Math.PI*o/(e+s-1);r[o]=t-n*Math.cos(i)}return De(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function O5(e,t,n=1){const s=k(e,"predictions","inTopK");const r=k(t,"targets","inTopK");S(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`);S(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`);ge(s.shape.slice(0,s.shape.length-1),r.shape,`predictions's shape should be align with the targets' shape, except the last dimension.`);const o=s.shape[s.shape.length-1];S(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const i=await s.data();const a=await r.data();const[l,c]=[i.length/o,o];const u=Xt("bool",l);for(let f=0;f<l;f++){const h=f*c;const p=i.subarray(h,h+c);const d=[];for(let g=0;g<p.length;g++){d.push({value:p[g],index:g})}d.sort((g,m)=>m.value-g.value);u[f]=0;for(let g=0;g<n;g++){if(d[g].index===a[f]){u[f]=1;break}}}if(e!==s){s.dispose()}if(t!==r){r.dispose()}return Re(u,r.shape,"bool")}const L5=O5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(e,t,n,s,r,o="NHWC",i){let a=e;if(e.rank===3){a=C(e,[1,e.shape[0],e.shape[1],e.shape[2]])}let l=t;if(l.rank===3){l=C(t,[1,t.shape[0],t.shape[1],t.shape[2]])}S(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`);S(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`);S(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const c=o==="NHWC"?a.shape[3]:a.shape[1];const u=o==="NHWC"?l.shape[3]:l.shape[1];S(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`);S(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`);Pe("conv2dDerFilter",r,i);const f={x:a,dy:l};const h={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:n};return R.runKernel(xc,f,h)}const P5=v({conv2DBackpropFilter_:F5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(e,t,n){if(n==null||n==="linear"){return e}if(n==="relu"){return ot(e,yf(t))}throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ba(e,t){let n=t;const s=Ld(e.shape,t.shape);if(s.length>0){n=Tt(n,s)}return C(n,e.shape)}function Ca(e,t,n,s){if(t==="linear"){return e}else if(t==="relu"){return co(e)}else if(t==="elu"){return M1(e)}else if(t==="relu6"){return pf(e)}else if(t==="prelu"){return nf(e,n)}else if(t==="leakyrelu"){return G1(e,s)}else if(t==="sigmoid"){return us(e)}throw new Error(`Unknown fused activation ${t}.`)}const za=(e,t)=>{const n=e>0;return!n||t==="linear"};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U5({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){l=l||"linear";if(za(R.state.gradientDepth,l)===false){S(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let T=ro(e,t,n,s,r,o,i);if(a!=null){T=Vt(T,a)}return Ca(T,l,c,u)}const f=k(e,"x","conv2d","float32");const h=k(t,"filter","conv2d","float32");let p=f;let d=false;if(f.rank===3){d=true;p=C(f,[1,f.shape[0],f.shape[1],f.shape[2]])}S(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`);S(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`);Pe("fused conv2d",s,i);const g=r==="NHWC"?p.shape[3]:p.shape[1];S(h.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${h.shape[2]}.`);S(Fe(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const m=je(p.shape,h.shape,n,o,s,i);let b;if(a!=null){b=k(a,"bias","fused conv2d");[b]=At(b,f);if(r==="NHWC"){Dt(m.outShape,b.shape)}else{S(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`);S(b.shape.length===0||b.shape[0]===m.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${m.outChannels})`)}}let _;if(c!=null){const T=c.shape;S(T.length<=1||T.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${T.length}.`);if(T.length===1){S(T[0]===1||T[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the number of output channels (${m.outChannels}).`)}else if(T.length===3){try{Dt(T,m.outShape)}catch(E){const D=`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(D)}}_=k(c,"prelu weights","fused conv2d")}const w=(T,E)=>{S(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[D,L,P,M]=E;const B=Va(T,P,l);S(vr(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const $=P1(L.shape,B,D,n,s);const x=P5(L,B,D.shape,n,s);const A=[$,x];if(M!=null){const O=Ba(M,B);A.push(O)}return A};const N={x:p,filter:h,bias:b,preluActivationWeights:_};const I={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:u};if(a==null){const T=ln((E,D,L)=>{let P=R.runKernel(vo,N,I);L([D,E,P]);if(d){P=C(P,[P.shape[1],P.shape[2],P.shape[3]])}return{value:P,gradFunc:w}});return T(p,h)}else{const T=ln((E,D,L,P)=>{let M=R.runKernel(vo,N,I);P([D,E,M,L]);if(d){M=C(M,[M.shape[1],M.shape[2],M.shape[3]])}return{value:M,gradFunc:w}});return T(p,h,b)}}const M5=v({fusedConv2d_:U5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V5(e,t,n,s,r,o=[1,1],i){let a=e;if(e.rank===3){a=C(e,[1,e.shape[0],e.shape[1],e.shape[2]])}let l=t;if(l.rank===3){l=C(t,[1,t.shape[0],t.shape[1],t.shape[2]])}const c={x:a,dy:l};const u={strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:n};return R.runKernel(Mc,c,u)}const B5=v({depthwiseConv2dNativeBackpropFilter_:V5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(e,t,n,s,r,o=[1,1],i){let a=t;let l=false;if(t.rank===3){l=true;a=C(t,[1,t.shape[0],t.shape[1],t.shape[2]])}const c={dy:a,filter:n};const u={strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:e};const f=R.runKernel(Vc,c,u);if(l){return C(f,[f.shape[1],f.shape[2],f.shape[3]])}return f}const z5=v({depthwiseConv2dNativeBackpropInput_:C5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W5({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(za(R.state.gradientDepth,l)===false){let I=$a(e,t,n,s,r,o,i);if(a!=null){I=Vt(I,a)}return Ca(I,l,c,u)}const f=k(e,"x","depthwiseConv2d","float32");const h=k(t,"filter","depthwiseConv2d","float32");let p=f;let d=false;if(f.rank===3){d=true;p=C(f,[1,f.shape[0],f.shape[1],f.shape[2]])}S(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`);S(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`);S(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`);if(o==null){o=[1,1]}S(Fe(n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);Pe("fused depthwiseConv2d",s,i);const g=je(p.shape,h.shape,n,o,s,i,true);let m;if(a!=null){m=k(a,"bias","fused conv2d");[m]=At(m,f);Dt(g.outShape,m.shape)}let b;if(c!=null){b=k(c,"prelu weights","fused depthwiseConv2d")}const _=(I,T)=>{S(vr(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[E,D,L,P]=T;const M=Va(I,L,l);const B=z5(D.shape,M,E,n,s,o,i);const $=B5(D,M,E.shape,n,s,o,i);if(P!=null){const x=Ba(m,M);return[B,$,x]}return[B,$]};const w={x:p,filter:h,bias:m,preluActivationWeights:b};const N={strides:n,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:u};if(a==null){const I=ln((T,E,D)=>{let L=R.runKernel(xo,w,N);D([E,T,L]);if(d){L=C(L,[L.shape[1],L.shape[2],L.shape[3]])}return{value:L,gradFunc:_}});return I(p,h)}else{const I=ln((T,E,D,L)=>{let P=R.runKernel(xo,w,N);L([E,T,P,D]);if(d){P=C(P,[P.shape[1],P.shape[2],P.shape[3]])}return{value:P,gradFunc:_}});return I(p,h,m)}}const H5=v({fusedDepthwiseConv2d_:W5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5({a:e,b:t,transposeA:n=false,transposeB:s=false,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(za(R.state.gradientDepth,o)===false){let M=mt(e,t,n,s);if(r!=null){M=Vt(M,r)}return Ca(M,o,i,a)}let l=k(e,"a","fused matMul");let c=k(t,"b","fused matMul");[l,c]=At(l,c);const u=n?l.shape[l.rank-2]:l.shape[l.rank-1];const f=s?c.shape[c.rank-1]:c.shape[c.rank-2];const h=n?l.shape[l.rank-1]:l.shape[l.rank-2];const p=s?c.shape[c.rank-2]:c.shape[c.rank-1];const d=l.shape.slice(0,-2);const g=c.shape.slice(0,-2);const m=q(d);const b=q(g);S(u===f,()=>`Error in fused matMul: inner shapes (${u}) and (${f}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`);const _=Dt(l.shape.slice(0,-2),c.shape.slice(0,-2));const w=_.concat([h,p]);const N=n?C(l,[m,u,h]):C(l,[m,h,u]);const I=s?C(c,[b,p,f]):C(c,[b,f,p]);let T;if(r!=null){T=k(r,"bias","fused matMul");[T]=At(T,l);Dt(w,T.shape)}let E;if(i!=null){E=k(i,"prelu weights","fused matMul")}const D=(M,B)=>{const[$,x,A,O]=B;const F=Va(C(M,A.shape),A,o);let U;let V;if(!n&&!s){U=mt(F,x,false,true);V=mt($,F,true,false)}else if(!n&&s){U=mt(F,x,false,false);V=mt(F,$,true,false)}else if(n&&!s){U=mt(x,F,false,true);V=mt($,F,false,false)}else{U=mt(x,F,true,true);V=mt(F,$,true,true)}if(r!=null){const z=Ba(O,F);return[U,V,z]}else{return[U,V]}};const L={a:N,b:I,bias:T,preluActivationWeights:E};const P={transposeA:n,transposeB:s,activation:o,leakyreluAlpha:a};if(r==null){const M=ln((B,$,x)=>{const A=R.runKernel(Eo,L,P);x([B,$,A]);return{value:C(A,w),gradFunc:D}});return M(N,I)}else{const M=ln((B,$,x,A)=>{const O=R.runKernel(Eo,L,P);A([B,$,O,x]);return{value:C(O,w),gradFunc:D}});return M(N,I,T)}}const G5=v({fusedMatMul_:q5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var K5=Object.freeze({__proto__:null,conv2d:M5,depthwiseConv2d:H5,matMul:G5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5(e){return Ma(e,.54,.46)}const X5=v({hammingWindow_:j5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(e){return Ma(e,.5,.5)}const Nf=v({hannWindow_:Y5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z5(e,t,n,s=false,r=0){let o=0;const i=[];while(o+t<=e.size){i.push(wt(e,o,t));o+=n}if(s){while(o<e.size){const a=o+t-e.size;const l=ne([wt(e,o,t-a),so([a],r)]);i.push(l);o+=n}}if(i.length===0){return qs([],[0,t])}return C(ne(i),[i.length,t])}const If=v({frame_:Z5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(e,t,n,s,r=Nf){if(s==null){s=wf(t)}const o=If(e,t,n);const i=ot(o,r(t));return Pa(i,s)}const Q5=v({stft_:J5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t7(e,t,n,s,r="bilinear",o=0){const i=k(e,"image","cropAndResize");const a=k(t,"boxes","cropAndResize","float32");const l=k(n,"boxInd","cropAndResize","int32");const c=a.shape[0];S(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`);S(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`);S(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`);S(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`);S(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`);S(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const u={image:i,boxes:a,boxInd:l};const f={method:r,extrapolationValue:o,cropSize:s};const h=R.runKernel(Lc,u,f);return h}const e7=v({cropAndResize_:t7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n7(e){const t=k(e,"image","flipLeftRight","float32");S(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};const s=R.runKernel(Gc,n,{});return s}const s7=v({flipLeftRight_:n7});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r7(e){const t=k(e,"image","grayscaleToRGB");const n=t.rank-1;const s=t.shape[n];S(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`);S(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);r.fill(1,0,n);r[n]=3;return Hs(t,r)}const o7=v({grayscaleToRGB_:r7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i7(e,t,n=0,s=.5){const r=k(e,"image","rotateWithOffset","float32");S(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r};const i={radians:t,fillValue:n,center:s};const a=R.runKernel(Yu,o,i);return a}const a7=v({rotateWithOffset_:i7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $s(e,t,n,s,r,o){if(s==null){s=.5}if(r==null){r=Number.NEGATIVE_INFINITY}if(o==null){o=0}const i=e.shape[0];n=Math.min(n,i);S(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`);S(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`);S(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`);S(t.rank===1,()=>"scores must be a 1D tensor");S(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`);S(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`);return{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l7(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const o=k(e,"boxes","nonMaxSuppression","float32");const i=k(t,"scores","nonMaxSuppression","float32");const a=$s(o,i,n,s,r);n=a.maxOutputSize;s=a.iouThreshold;r=a.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return R.runKernel(uu,{boxes:o,scores:i},l)}const c7=v({nonMaxSuppression_:l7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u7(e,t,n){const s=f7(e,t,n);const r=s<0?-(s+1):s;e.splice(r,0,t)}function f7(e,t,n){return p7(e,t,n||h7)}function h7(e,t){return e>t?1:e<t?-1:0}function p7(e,t,n){let s=0;let r=e.length;let o=0;let i=false;while(s<r){o=s+(r-s>>>1);const a=n(t,e[o]);if(a>0){s=o+1}else{r=o;i=!a}}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kf(e,t,n,s,r){return Wa(e,t,n,s,r,0)}function Tf(e,t,n,s,r,o){return Wa(e,t,n,s,r,0,false,o,true)}function Sf(e,t,n,s,r,o){return Wa(e,t,n,s,r,o,true)}function Wa(e,t,n,s,r,o,i=false,a=false,l=false){const c=[];for(let m=0;m<t.length;m++){if(t[m]>r){c.push({score:t[m],boxIndex:m,suppressBeginIndex:0})}}c.sort(kl);const u=o>0?-.5/o:0;const f=[];const h=[];while(f.length<n&&c.length>0){const m=c.pop();const{score:b,boxIndex:_,suppressBeginIndex:w}=m;if(b<r){break}let N=false;for(let I=f.length-1;I>=w;--I){const T=d7(e,_,f[I]);if(T>=s){N=true;break}m.score=m.score*m7(s,u,T);if(m.score<=r){break}}m.suppressBeginIndex=f.length;if(!N){if(m.score===b){f.push(_);h.push(m.score)}else if(m.score>r){u7(c,m,kl)}}}const p=f.length;const d=n-p;if(a&&d>0){f.push(...new Array(d).fill(0));h.push(...new Array(d).fill(0))}const g={selectedIndices:f};if(i){g["selectedScores"]=h}if(l){g["validOutputs"]=p}return g}function d7(e,t,n){const s=e.subarray(t*4,t*4+4);const r=e.subarray(n*4,n*4+4);const o=Math.min(s[0],s[2]);const i=Math.min(s[1],s[3]);const a=Math.max(s[0],s[2]);const l=Math.max(s[1],s[3]);const c=Math.min(r[0],r[2]);const u=Math.min(r[1],r[3]);const f=Math.max(r[0],r[2]);const h=Math.max(r[1],r[3]);const p=(a-o)*(l-i);const d=(f-c)*(h-u);if(p<=0||d<=0){return 0}const g=Math.max(o,c);const m=Math.max(i,u);const b=Math.min(a,f);const _=Math.min(l,h);const w=Math.max(b-g,0)*Math.max(_-m,0);return w/(p+d-w)}function m7(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function kl(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function g7(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const o=k(e,"boxes","nonMaxSuppressionAsync");const i=k(t,"scores","nonMaxSuppressionAsync");const a=$s(o,i,n,s,r);n=a.maxOutputSize;s=a.iouThreshold;r=a.scoreThreshold;const l=await Promise.all([o.data(),i.data()]);const c=l[0];const u=l[1];const{selectedIndices:f}=kf(c,u,n,s,r);if(o!==e){o.dispose()}if(i!==t){i.dispose()}return De(f,"int32")}const y7=g7;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=k(e,"boxes","nonMaxSuppression");const a=k(t,"scores","nonMaxSuppression");const l=$s(i,a,n,s,r,o);n=l.maxOutputSize;s=l.iouThreshold;r=l.scoreThreshold;o=l.softNmsSigma;const c={boxes:i,scores:a};const u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:o};const f=R.runKernel(hu,c,u);return{selectedIndices:f[0],selectedScores:f[1]}}const _7=v({nonMaxSuppressionWithScore_:b7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function w7(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=k(e,"boxes","nonMaxSuppressionAsync");const a=k(t,"scores","nonMaxSuppressionAsync");const l=$s(i,a,n,s,r,o);n=l.maxOutputSize;s=l.iouThreshold;r=l.scoreThreshold;o=l.softNmsSigma;const c=await Promise.all([i.data(),a.data()]);const u=c[0];const f=c[1];const{selectedIndices:h,selectedScores:p}=Sf(u,f,n,s,r,o);if(i!==e){i.dispose()}if(a!==t){a.dispose()}return{selectedIndices:De(h,"int32"),selectedScores:De(p)}}const N7=w7;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,o=false){const i=k(e,"boxes","nonMaxSuppression");const a=k(t,"scores","nonMaxSuppression");const l=$s(i,a,n,s,r,null);const c=l.maxOutputSize;const u=l.iouThreshold;const f=l.scoreThreshold;const h={boxes:i,scores:a};const p={maxOutputSize:c,iouThreshold:u,scoreThreshold:f,padToMaxOutputSize:o};const d=R.runKernel(fu,h,p);return{selectedIndices:d[0],validOutputs:d[1]}}const k7=v({nonMaxSuppressionPadded_:I7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function T7(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,o=false){const i=k(e,"boxes","nonMaxSuppressionAsync");const a=k(t,"scores","nonMaxSuppressionAsync");const l=$s(i,a,n,s,r,null);const c=l.maxOutputSize;const u=l.iouThreshold;const f=l.scoreThreshold;const[h,p]=await Promise.all([i.data(),a.data()]);const{selectedIndices:d,validOutputs:g}=Tf(h,p,c,u,f,o);if(i!==e){i.dispose()}if(a!==t){a.dispose()}return{selectedIndices:De(d,"int32"),validOutputs:ht(g,"int32")}}const S7=T7;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E7(e,t,n=false,s=false){const r=k(e,"images","resizeBilinear");S(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`);S(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`);S(s===false||n===false,()=>`Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.`);let o=r;let i=false;if(r.rank===3){i=true;o=C(r,[1,r.shape[0],r.shape[1],r.shape[2]])}const a={images:o};const l={alignCorners:n,halfPixelCenters:s,size:t};const c=R.runKernel(Su,a,l);if(i){return C(c,[c.shape[1],c.shape[2],c.shape[3]])}return c}const v7=v({resizeBilinear_:E7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(e,t,n=false,s=false){const r=k(e,"images","resizeNearestNeighbor");S(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`);S(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`);S(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype");S(s===false||n===false,()=>`Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.`);let o=r;let i=false;if(r.rank===3){i=true;o=C(r,[1,r.shape[0],r.shape[1],r.shape[2]])}const a={images:o};const l={alignCorners:n,halfPixelCenters:s,size:t};const c=R.runKernel(Tu,a,l);if(i){return C(c,[c.shape[1],c.shape[2],c.shape[3]])}return c}const $7=v({resizeNearestNeighbor_:x7});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(e,t="binary",n=false,s=.5){const r=k(e,"image","threshold");const o=.2989;const i=.587;const a=.114;const l=r.shape[0]*r.shape[1];let c=ot(De([s]),255);let u,f,h,p;S(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`);S(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`);S(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`);S(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`);if(r.shape[2]===3){[u,f,h]=Qs(r,[1,1,1],-1);const m=ot(u,o);const b=ot(f,i);const _=ot(h,a);p=Vt(Vt(m,b),_)}else{p=e}if(t==="otsu"){const m=F1(Mt(df(p),"int32"),Re([]),256);c=D7(m,l)}const d=n?Ra(p,c):ao(p,c);const g=Mt(ot(d,255),"int32");return g}function D7(e,t){let n=De([-1]);let s=De([0]);let r=De([0]);let o,i,a,l,c,u;for(let f=0;f<e.size-1;f++){o=wt(e,0,f+1);i=wt(e,f+1);c=ee(Tt(o),t);u=ee(Tt(i),t);const h=Tt(ot(o,Js(0,o.size)));a=ee(h,Tt(o));const p=so(i.shape,o.size);const d=Vt(Js(0,i.size),p);const g=ot(i,d);l=ee(Tt(g),Tt(i));const m=ct(a,l);const b=ct(a,l);const _=ot(c,u);r=ot(ot(_,m),b);const w=ao(r,s);s=ys(w,r,s);n=ys(w,De([f]),n)}return n}const R7=v({threshold_:A7});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O7(e,t,n="nearest",s="constant",r=0,o){const i=k(e,"image","transform","float32");const a=k(t,"transforms","transform","float32");S(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`);S(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>`Error in transform: Input transform should be batch x 8 or 1 x 8`);S(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const l={image:i,transforms:a};const c={interpolation:n,fillMode:s,fillValue:r,outputShape:o};return R.runKernel(qu,l,c)}const L7=v({transform_:O7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(e,t,n){S(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`);S(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const s=k(e,"a","bandPart");S(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape;const[o,i]=s.shape.slice(-2);if(!(t<=o)){throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`)}if(!(n<=i)){throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)}if(t<0){t=o}if(n<0){n=i}const a=C(Js(0,o,1,"int32"),[-1,1]);const l=Js(0,i,1,"int32");const c=ct(a,l);const u=xr(Ra(c,ht(+t,"int32")),q1(c,ht(-n,"int32")));const f=bs([o,i],s.dtype);return C(cn(Qn(C(s,[-1,o,i])).map(h=>ys(u,h,f))),r)}const P7=v({bandPart_:F7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U7(e){let t;if(Array.isArray(e)){t=false;S(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=e[0].shape[0];for(let o=1;o<e.length;++o){S(e[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[o].shape[0]} vs. ${r})`)}}else{t=true;e=Qs(e,e.shape[0],0).map(r=>Ua(r,[0]))}S(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[];const s=e;for(let r=0;r<e.length;++r){n.push(R.tidy(()=>{let o=s[r];if(r>0){for(let i=0;i<r;++i){const a=ot(Tt(ot(n[i],o)),n[i]);o=ct(o,a)}}return ee(o,io(o,"euclidean"))}))}if(t){return cn(n,0)}else{return n}}const M7=v({gramSchmidt_:U7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V7(e,t=false){S(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`);if(e.rank===2){return Tl(e,t)}else{const n=e.shape.slice(0,e.shape.length-2).reduce((l,c)=>l*c);const s=Qn(C(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0);const r=[];const o=[];s.forEach(l=>{const[c,u]=Tl(l,t);r.push(c);o.push(u)});const i=C(cn(r,0),e.shape);const a=C(cn(o,0),e.shape);return[i,a]}}function Tl(e,t=false){return R.tidy(()=>{S(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0];const s=e.shape[1];let r=z1(n);let o=wn(e);const i=qs([[1]],[1,1]);let a=wn(i);const l=n>=s?s:n;for(let c=0;c<l;++c){const u=o;const f=a;const h=r;[a,o,r]=R.tidy(()=>{const p=wt(o,[c,c],[n-c,1]);const d=io(p);const g=wt(o,[c,c],[1,1]);const m=ys(ao(g,0),qs([[-1]]),qs([[1]]));const b=ct(g,ot(m,d));const _=ee(p,b);if(_.shape[0]===1){a=wn(i)}else{a=ne([i,wt(_,[1,0],[_.shape[0]-1,_.shape[1]])],0)}const w=on(ee(mt(m,b),d));const N=wt(o,[c,0],[n-c,s]);const I=ot(w,a);const T=Co(a);if(c===0){o=ct(N,mt(I,mt(T,N)))}else{const L=ct(N,mt(I,mt(T,N)));o=ne([wt(o,[0,0],[c,s]),L],0)}const E=Co(I);const D=wt(r,[0,c],[n,r.shape[1]-c]);if(c===0){r=ct(D,mt(mt(D,a),E))}else{const L=ct(D,mt(mt(D,a),E));r=ne([wt(r,[0,0],[n,c]),L],1)}return[a,o,r]});vd([u,f,h])}if(!t&&n>s){r=wt(r,[0,0],[n,s]);o=wt(o,[0,0],[s,s])}return[r,o]})}const B7=v({qr_:V7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var se;(function(e){e[e["NONE"]=0]="NONE";e[e["MEAN"]=1]="MEAN";e[e["SUM"]=2]="SUM";e[e["SUM_BY_NONZERO_WEIGHTS"]=3]="SUM_BY_NONZERO_WEIGHTS"})(se||(se={}));function C7(e,t,n=se.SUM_BY_NONZERO_WEIGHTS){const s=k(e,"losses","computeWeightedLoss");let r=null;if(t!=null){r=k(t,"weights","computeWeightedLoss")}const o=r==null?s:ot(s,r);if(n===se.NONE){return o}if(n===se.SUM){return Tt(o)}if(n===se.MEAN){if(r==null){return $r(o)}else{const i=s.size/r.size;const a=ee(Tt(o),Tt(r));return i>1?ee(a,ht(i)):a}}if(n===se.SUM_BY_NONZERO_WEIGHTS){if(r==null){return ee(Tt(o),ht(s.size))}else{const i=ot(r,Fn(s.shape));const a=Mt(Tt(tf(i,ht(0))),"float32");return ee(Tt(o),a)}}throw Error(`Unknown reduction: ${n}`)}const fn=v({computeWeightedLoss_:C7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z7(e,t,n,s=se.SUM_BY_NONZERO_WEIGHTS){const r=k(e,"labels","absoluteDifference");const o=k(t,"predictions","absoluteDifference");let i=null;if(n!=null){i=k(n,"weights","absoluteDifference")}ge(r.shape,o.shape,"Error in absoluteDifference: ");const a=_e(ct(r,o));return fn(a,i,s)}const W7=v({absoluteDifference_:z7});function H7(e,t,n,s,r=se.SUM_BY_NONZERO_WEIGHTS){const o=k(e,"labels","cosineDistance");const i=k(t,"predictions","cosineDistance");let a=null;if(s!=null){a=k(s,"weights","cosineDistance")}ge(o.shape,i.shape,"Error in cosineDistance: ");const l=ht(1);const c=ct(l,Tt(ot(o,i),n,true));return fn(c,a,r)}const q7=v({cosineDistance_:H7});function G7(e,t,n,s=se.SUM_BY_NONZERO_WEIGHTS){let r=k(e,"labels","hingeLoss");const o=k(t,"predictions","hingeLoss");let i=null;if(n!=null){i=k(n,"weights","hingeLoss")}ge(r.shape,o.shape,"Error in hingeLoss: ");const a=ht(1);r=ct(ot(ht(2),r),a);const l=co(ct(a,ot(r,o)));return fn(l,i,s)}const K7=v({hingeLoss_:G7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j7(e,t,n,s=1,r=se.SUM_BY_NONZERO_WEIGHTS){const o=k(e,"labels","huberLoss");const i=k(t,"predictions","huberLoss");let a=null;if(n!=null){a=k(n,"weights","huberLoss")}ge(o.shape,i.shape,"Error in huberLoss: ");const l=ht(s);const c=_e(ct(i,o));const u=Q1(c,l);const f=ct(c,u);const h=Vt(ot(ht(.5),oo(u)),ot(l,f));return fn(h,a,r)}const X7=v({huberLoss_:j7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y7(e,t,n,s=1e-7,r=se.SUM_BY_NONZERO_WEIGHTS){const o=k(e,"labels","logLoss");const i=k(t,"predictions","logLoss");let a=null;if(n!=null){a=k(n,"weights","logLoss")}ge(o.shape,i.shape,"Error in logLoss: ");const l=ht(1);const c=ht(s);const u=on(ot(o,Zs(Vt(i,c))));const f=ot(ct(l,o),Zs(Vt(ct(l,i),c)));const h=ct(u,f);return fn(h,a,r)}const Z7=v({logLoss_:Y7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(e,t,n,s=se.SUM_BY_NONZERO_WEIGHTS){const r=k(e,"labels","meanSquaredError");const o=k(t,"predictions","meanSquaredError");let i=null;if(n!=null){i=k(n,"weights","meanSquaredError")}ge(r.shape,o.shape,"Error in meanSquaredError: ");const a=gf(r,o);return fn(a,i,s)}const Q7=v({meanSquaredError_:J7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ty(e,t){const n=k(e,"labels","sigmoidCrossEntropyWithLogits");const s=k(t,"logits","sigmoidCrossEntropyWithLogits");ge(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=co(s);const o=ot(s,n);const i=K1(Wn(on(_e(s))));return Vt(ct(r,o),i)}function ey(e,t,n,s=0,r=se.SUM_BY_NONZERO_WEIGHTS){let o=k(e,"multiClassLabels","sigmoidCrossEntropy");const i=k(t,"logits","sigmoidCrossEntropy");let a=null;if(n!=null){a=k(n,"weights","sigmoidCrossEntropy")}ge(o.shape,i.shape,"Error in sigmoidCrossEntropy: ");if(s>0){const c=ht(s);const u=ht(1);const f=ht(.5);o=Vt(ot(o,ct(u,c)),ot(f,c))}const l=ty(o,i);return fn(l,a,r)}const ny=v({sigmoidCrossEntropy_:ey});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sy(e,t,n=-1){if(n===-1){n=t.rank-1}if(n!==t.rank-1){throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`)}const s=ln((r,o,i)=>{const a=true;const l=X1(o,[n],a);const c=ct(Mt(o,"float32"),l);i([r,c]);const u=on(ot(c,r));const f=Tt(u,[n]);const h=(p,d)=>{const[g,m]=d;const b=Ue(p.shape,[n]);return[ot(C(p,b),ct(Mt(g,"float32"),Wn(m))),ot(C(p,b),ct(Wn(m),Mt(g,"float32")))]};return{value:f,gradFunc:h}});return s(e,t)}function ry(e,t,n,s=0,r=se.SUM_BY_NONZERO_WEIGHTS){let o=k(e,"onehotLabels","softmaxCrossEntropy");const i=k(t,"logits","softmaxCrossEntropy");let a=null;if(n!=null){a=k(n,"weights","softmaxCrossEntropy")}ge(o.shape,i.shape,"Error in softmaxCrossEntropy: ");if(s>0){const c=ht(s);const u=ht(1);const f=ht(o.shape[1]);o=Vt(ot(o,ct(u,c)),ee(c,f))}const l=sy(o,i);return fn(l,a,r)}const oy=v({softmaxCrossEntropy_:ry});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iy(e,t,n,s){const r=k(e,"indices","sparseFillEmptyRows","int32");const o=k(t,"values","sparseFillEmptyRows");const i=k(n,"denseShape","sparseFillEmptyRows","int32");const a=k(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2){throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`)}if(o.rank!==1){throw new Error(`Values should be Tensor1D but received shape ${o.shape}`)}if(i.rank!==1){throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`)}if(a.rank!==0){throw new Error(`Default value should be a scalar but received shape ${a.shape}`)}const l={indices:r,values:o,denseShape:i,defaultValue:a};const c=R.runKernel(Fu,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const ay=v({sparseFillEmptyRows_:iy});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ly(e,t,n){const s=k(e,"inputIndices","sparseReshape","int32");const r=k(t,"inputShape","sparseReshape","int32");const o=k(n,"newShape","sparseReshape","int32");if(s.rank!==2){throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`)}if(r.rank!==1){throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`)}if(o.rank!==1){throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`)}const i={inputIndices:s,inputShape:r,newShape:o};const a=R.runKernel(Pu,i);return{outputIndices:a[0],outputShape:a[1]}}const cy=v({sparseReshape_:ly});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uy(e,t,n){const s=k(e,"data","sparseSegmentMean");const r=k(t,"indices","sparseSegmentMean","int32");const o=k(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1){throw new Error(`Data should be at least 1 dimensional but received scalar`)}if(r.rank!==1){throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`)}if(o.rank!==1){throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`)}const i={data:s,indices:r,segmentIds:o};return R.runKernel(Uu,i)}const fy=v({sparseSegmentMean_:uy});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hy(e,t,n){const s=k(e,"data","sparseSegmentSum");const r=k(t,"indices","sparseSegmentSum","int32");const o=k(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1){throw new Error(`Data should be at least 1 dimensional but received scalar`)}if(r.rank!==1){throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`)}if(o.rank!==1){throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`)}const i={data:s,indices:r,segmentIds:o};return R.runKernel(Mu,i)}const py=v({sparseSegmentSum_:hy});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dy(e,t,n,s,r,o,i,a){const l=k(e,"data","stringNGrams","string");if(l.dtype!=="string"){throw new Error("Data must be of datatype string")}if(l.shape.length!==1){throw new Error(`Data must be a vector, saw: ${l.shape}`)}const c=k(t,"dataSplits","stringNGrams");if(c.dtype!=="int32"){throw new Error("Data splits must be of datatype int32")}const u={separator:n,nGramWidths:s,leftPad:r,rightPad:o,padWidth:i,preserveShortSequences:a};const f={data:l,dataSplits:c};const h=R.runKernel(Cu,f,u);return{nGrams:h[0],nGramsSplits:h[1]}}const my=v({stringNGrams_:dy});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gy(e,t,n=true){const s=k(e,"input","stringSplit","string");const r=k(t,"delimiter","stringSplit","string");if(s.rank!==1){throw new Error(`Input should be Tensor1D but received shape ${s.shape}`)}if(r.rank!==0){throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`)}const o={skipEmpty:n};const i={input:s,delimiter:r};const a=R.runKernel(zu,i,o);return{indices:a[0],values:a[1],shape:a[2]}}const yy=v({stringSplit_:gy});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function by(e,t){const n=k(e,"input","stringToHashBucketFast","string");const s={numBuckets:t};if(t<=0){throw new Error(`Number of buckets must be at least 1`)}const r={input:n};return R.runKernel(Wu,r,s)}const _y=v({stringToHashBucketFast_:by});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wy={fft:Fa,ifft:Ar,rfft:Pa,irfft:mf};const Ny={hammingWindow:X5,hannWindow:Nf,frame:If,stft:Q5};const Iy={flipLeftRight:s7,grayscaleToRGB:o7,resizeNearestNeighbor:$7,resizeBilinear:v7,rotateWithOffset:a7,cropAndResize:e7,nonMaxSuppression:c7,nonMaxSuppressionAsync:y7,nonMaxSuppressionWithScore:_7,nonMaxSuppressionWithScoreAsync:N7,nonMaxSuppressionPadded:k7,nonMaxSuppressionPaddedAsync:S7,threshold:R7,transform:L7};const ky={bandPart:P7,gramSchmidt:M7,qr:B7};const Ty={absoluteDifference:W7,computeWeightedLoss:fn,cosineDistance:q7,hingeLoss:K7,huberLoss:X7,logLoss:Z7,meanSquaredError:Q7,sigmoidCrossEntropy:ny,softmaxCrossEntropy:oy};const Sy={sparseFillEmptyRows:ay,sparseReshape:cy,sparseSegmentMean:fy,sparseSegmentSum:py};const Ey={stringNGrams:my,stringSplit:yy,stringToHashBucketFast:_y};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vy(e,t){const n=e[0].length;e.forEach((r,o)=>{S(r.length===n,()=>`Error in concat${n}D: rank of tensors[${o}] must be the same as the rank of the rest (${n})`)});S(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const s=e[0];e.forEach((r,o)=>{for(let i=0;i<n;i++){S(i===t||r[i]===s[i],()=>`Error in concat${n}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)}})}function wo(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++){n[t]+=e[s][t]}return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ze;(function(e){e[e["FIRST_DIM_SIZE"]=0]="FIRST_DIM_SIZE";e[e["VALUE_ROWIDS"]=1]="VALUE_ROWIDS";e[e["ROW_LENGTHS"]=2]="ROW_LENGTHS";e[e["ROW_SPLITS"]=3]="ROW_SPLITS";e[e["ROW_LIMITS"]=4]="ROW_LIMITS";e[e["ROW_STARTS"]=5]="ROW_STARTS"})(ze||(ze={}));function xy(e,t,n){let s=new Array;if(n==null&&t==null){return s}if(t==null){while(s.length<e+n.length){s.push(-1)}}else{s=t.slice()}if(n==null){return s}if(e+n.length!==s.length){throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`)}for(let r=1;r<n.length;++r){const o=n[r];const i=s[s.length-n.length+r];const a=s[i];if(o>=0){if(a>=0){if(a!==o){throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${o} but shape[${r+e}] = ${a}`)}}else{s[i]=o}}}return s}function $y(e){const t={"FIRST_DIM_SIZE":ze.FIRST_DIM_SIZE,"VALUE_ROWIDS":ze.VALUE_ROWIDS,"ROW_LENGTHS":ze.ROW_LENGTHS,"ROW_SPLITS":ze.ROW_SPLITS,"ROW_LIMITS":ze.ROW_LIMITS,"ROW_STARTS":ze.ROW_STARTS};const n=[];for(const s of e){if(s in t){n.push(t[s])}else{break}}return n}function Ay(e){if(e.length===0){return 0}if(e[0]===ze.FIRST_DIM_SIZE){return e.length-1}return e.length}function Dy(e,t){if(e==null||t==null){return}const n=e.length;const s=t.length;if(n>=s){throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`)}for(let r=0;r<Math.min(n,s-1);++r){const o=e[r];const i=t[r+1];if(o>=0&&i>=0&&o!==1&&o!==i){throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${o} but ragged tensor input.flatValues.shape[${r-e.length}] = ${i}`)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ry(e,t,n){const s=n*(typeof e==="number"?e:e[0]);const r=t*(typeof e==="number"?e:e[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ef(e,t,n,s=true){let r=[];if(s){r=r.concat(t.slice(0));r.push(e[0]/n);r=r.concat(e.slice(1))}else{r=r.concat(e[0]);const o=t.length;for(let i=0;i<o;++i){r=r.concat([e[i+1]/t[i],t[i]])}r=r.concat(e.slice(o+1))}return r}function vf(e,t,n=true){const s=[];if(n){s.push(t);for(let r=t+1;r<e;++r){if(r<=2*t){s.push(r);s.push(r-(t+1))}else{s.push(r)}}}else{const r=[];const o=[];for(let i=1;i<e;++i){if(i>=t*2+1||i%2===1){o.push(i)}else{r.push(i)}}s.push(...r);s.push(0);s.push(...o)}return s}function xf(e,t,n,s=true){const r=[];if(s){r.push(e[0]/n)}else{r.push(e[0]*n)}for(let o=1;o<e.length;++o){if(o<=t.length){if(s){r.push(t[o-1]*e[o])}else{r.push(e[o]/t[o-1])}}else{r.push(e[o])}}return r}function Oy(e,t){const n=[0];for(let s=0;s<t;++s){n.push(e[s][0])}return n}function Ly(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r){s.push(e[r+1]-t[r][0]-t[r][1])}return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fy=1.7580993408473768;const Py=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uy=.3275911;const My=.254829592;const Vy=-.284496736;const By=1.421413741;const Cy=-1.453152027;const zy=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(e,t){if(e.length!==t.length){throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`)}const n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2){n[s]=e[s/2];n[s+1]=t[s/2]}return n}function Wy(e){const t=new Float32Array(e.length/2);const n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2){t[s/2]=e[s];n[s/2]=e[s+1]}return{real:t,imag:n}}function Hy(e){const t=Math.ceil(e.length/4);const n=new Float32Array(t);const s=new Float32Array(t);for(let r=0;r<e.length;r+=4){n[Math.floor(r/4)]=e[r];s[Math.floor(r/4)]=e[r+1]}return{real:n,imag:s}}function qy(e){const t=Math.floor(e.length/4);const n=new Float32Array(t);const s=new Float32Array(t);for(let r=2;r<e.length;r+=4){n[Math.floor(r/4)]=e[r];s[Math.floor(r/4)]=e[r+1]}return{real:n,imag:s}}function $f(e,t){const n=e[t*2];const s=e[t*2+1];return{real:n,imag:s}}function Gy(e,t,n,s){e[s*2]=t;e[s*2+1]=n}function Ky(e,t){const n=new Float32Array(e/2);const s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const o=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(o);s[r]=Math.sin(o)}return{real:n,imag:s}}function jy(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);const r=Math.cos(s);const o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const No="->";const Xy=/->/g;const Sl=",";const El="...";function Yy(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(Xy,"").length)/No.length;if(n<1){throw new Error("Equations without an arrow are not supported.")}else if(n>1){throw new Error(`Equation must contain exactly one arrow ("${No}").`)}const[s,r]=e.split(No);S(s.indexOf(El)===-1,()=>`The ellipsis notation ("${El}") is not supported yet.`);const o=s.split(Sl);const i=o.length;if(t!==i){throw new Error(`Expected ${i} input tensors, received ${t}`)}if(i>2){throw new Error("Support for more than 2 input tensors is not implemented yet.")}const a=[];for(let h=0;h<r.length;++h){const p=r[h];if(!o.some(d=>d.indexOf(p)!==-1)){throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`)}if(a.indexOf(p)===-1){a.push(p)}}for(let h=0;h<s.length;++h){const p=s[h];if(a.indexOf(p)===-1&&p!==Sl){a.push(p)}}const l=new Array(o.length);for(let h=0;h<i;++h){if(new Set(o[h].split("")).size!==o[h].length){throw new Error(`Found duplicate axes in input component ${o[h]}. Support for duplicate axes in input is not implemented yet.`)}l[h]=[];for(let p=0;p<o[h].length;++p){l[h].push(a.indexOf(o[h][p]))}}const c=a.length;const u=r.length;const f=[];for(let h=u;h<c;++h){f.push(h)}return{allDims:a,summedDims:f,idDims:l}}function Zy(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r){n[t[r]]=r}const s=[];for(let r=0;r<e;++r){if(n[r]===-1){s.push(r)}}n=n.filter(r=>r!==-1);return{permutationIndices:n,expandDims:s}}function Jy(e,t,n){const s=new Array(e);for(let r=0;r<n.length;++r){const o=n[r].shape;for(let i=0;i<t[r].length;++i){if(s[t[r][i]]===void 0){s[t[r][i]]=o[i]}else{S(s[t[r][i]]===o[i],()=>`Expected dimension ${s[t[r][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}}}function Qy(e,t){const n=e;const s=[];let r=0;if(e.length===0){n.push(-1)}r=e.length+1;for(let i=0;i<r;++i){s.push([])}const o=[];for(let i=0;i<n.length;++i){const a=n[i];const l=e9(t,a);for(const c of l){if(o.indexOf(c)===-1){s[i].push(c);o.push(c)}}}return{path:n,steps:s}}function t9(e){return e.every((t,n)=>t===n)}function e9(e,t){const n=[];for(let s=0;s<e.length;++s){if(e[s].length===0||e[s].indexOf(t)!==-1||t===-1){n.push(s)}}return n}function n9(e,t,n=0){let s=[];if(typeof t==="number"){S(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis.");s=new Array(t).fill(e.shape[n]/t)}else{const r=t.reduce((i,a)=>{if(a===-1){i+=1}return i},0);S(r<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(o!==-1){const i=t.reduce((a,l)=>l>0?a+l:a);t[o]=e.shape[n]-i}S(e.shape[n]===t.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension.");s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s9(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function r9(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function o9(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function a9(e,t){return`size ${e} must be non-negative, not ${t}`}function l9(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function c9(e,t){const n=q(e);const s=q(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function u9(e,t){const n=q(e);const s=q(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vl(){return`segment ids must be >= 0`}function f9(){return`segment ids are not increasing`}function h9(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function p9(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d9(e,t,n,s){const r=t.shape.length;const o=e.shape.length;if(s!==0){if(s<-r||s>r){throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`)}}if(s<0){s+=r}if(s>o){throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`)}if(n<s){throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`)}for(let f=0;f<s;++f){if(e.shape[f]!==t.shape[f]){throw new Error(`x.shape[${f}]: ${e.shape[f]} should be equal to indices.shape[${f}]: ${t.shape[f]}.`)}}const i=e.shape[n];const a=[];let l=1;let c=1;let u=1;for(let f=0;f<s;++f){a.push(e.shape[f]);l*=e.shape[f]}for(let f=s;f<n;f++){a.push(e.shape[f]);c*=e.shape[f]}for(let f=s;f<r;f++){a.push(t.shape[f])}for(let f=n+1;f<o;f++){a.push(e.shape[f]);u*=e.shape[f]}return{batchSize:l,sliceSize:u,outerSize:c,dimSize:i,outputShape:a}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(e){try{return e.map(t=>Xs(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function m9(e){return e.map(t=>Pn(t))}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g9=lt();g9.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>false,e=>{if(e){console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var be;(function(e){e[e["DT_INVALID"]=0]="DT_INVALID";e[e["DT_FLOAT"]=1]="DT_FLOAT";e[e["DT_DOUBLE"]=2]="DT_DOUBLE";e[e["DT_INT32"]=3]="DT_INT32";e[e["DT_UINT8"]=4]="DT_UINT8";e[e["DT_INT16"]=5]="DT_INT16";e[e["DT_INT8"]=6]="DT_INT8";e[e["DT_STRING"]=7]="DT_STRING";e[e["DT_COMPLEX64"]=8]="DT_COMPLEX64";e[e["DT_INT64"]=9]="DT_INT64";e[e["DT_BOOL"]=10]="DT_BOOL";e[e["DT_QINT8"]=11]="DT_QINT8";e[e["DT_QUINT8"]=12]="DT_QUINT8";e[e["DT_QINT32"]=13]="DT_QINT32";e[e["DT_BFLOAT16"]=14]="DT_BFLOAT16";e[e["DT_QINT16"]=15]="DT_QINT16";e[e["DT_QUINT16"]=16]="DT_QUINT16";e[e["DT_UINT16"]=17]="DT_UINT16";e[e["DT_COMPLEX128"]=18]="DT_COMPLEX128";e[e["DT_HALF"]=19]="DT_HALF";e[e["DT_RESOURCE"]=20]="DT_RESOURCE";e[e["DT_VARIANT"]=21]="DT_VARIANT";e[e["DT_UINT32"]=22]="DT_UINT32";e[e["DT_UINT64"]=23]="DT_UINT64";e[e["DT_FLOAT_REF"]=101]="DT_FLOAT_REF";e[e["DT_DOUBLE_REF"]=102]="DT_DOUBLE_REF";e[e["DT_INT32_REF"]=103]="DT_INT32_REF";e[e["DT_UINT8_REF"]=104]="DT_UINT8_REF";e[e["DT_INT16_REF"]=105]="DT_INT16_REF";e[e["DT_INT8_REF"]=106]="DT_INT8_REF";e[e["DT_STRING_REF"]=107]="DT_STRING_REF";e[e["DT_COMPLEX64_REF"]=108]="DT_COMPLEX64_REF";e[e["DT_INT64_REF"]=109]="DT_INT64_REF";e[e["DT_BOOL_REF"]=110]="DT_BOOL_REF";e[e["DT_QINT8_REF"]=111]="DT_QINT8_REF";e[e["DT_QUINT8_REF"]=112]="DT_QUINT8_REF";e[e["DT_QINT32_REF"]=113]="DT_QINT32_REF";e[e["DT_BFLOAT16_REF"]=114]="DT_BFLOAT16_REF";e[e["DT_QINT16_REF"]=115]="DT_QINT16_REF";e[e["DT_QUINT16_REF"]=116]="DT_QUINT16_REF";e[e["DT_UINT16_REF"]=117]="DT_UINT16_REF";e[e["DT_COMPLEX128_REF"]=118]="DT_COMPLEX128_REF";e[e["DT_HALF_REF"]=119]="DT_HALF_REF";e[e["DT_RESOURCE_REF"]=120]="DT_RESOURCE_REF";e[e["DT_VARIANT_REF"]=121]="DT_VARIANT_REF";e[e["DT_UINT32_REF"]=122]="DT_UINT32_REF";e[e["DT_UINT64_REF"]=123]="DT_UINT64_REF"})(be||(be={}));var xl;(function(e){(function(t){t[t["LEGACY"]=0]="LEGACY";t[t["V1"]=1]="V1";t[t["V2"]=2]="V2"})(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(xl||(xl={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y9={};function Af(e){return y9[e]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y(e,t,n,s,r){const o=t.inputParams[e];if(o&&o.inputIndexStart!==void 0){const a=o.inputIndexStart;const l=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?a+1:o.inputIndexEnd;if(o.type==="tensor"){return te(t.inputNames[o.inputIndexStart],n,s,r)}if(o.type==="tensors"){const f=t.inputNames.slice(a,l);return f.map(h=>te(h,n,s,r))}const c=te(t.inputNames.slice(a)[0],n,s,r);const u=c.dataSync();return o.type==="number"?u[0]:Se(c.shape,u)}const i=t.attrParams[e];return i&&i.value}function te(e,t,n,s){const[r,o]=ie(e);if(s!=null){const a=s.getHashTableHandleByName(r);if(a!=null){return a}}const i=n.currentContextIds.find(a=>{return!!t[Rr(r,a)]});return i!==void 0?t[Rr(r,i)][o]:void 0}function b9(e,t,n){return t[Rr(e,n.currentContextId)]}function We(e,t){const[n,s,r]=ie(e);return[Rr(n,t&&t.currentContextId),s,r]}function Rr(e,t){return!!t?`${e}-${t}`:e}function ie(e){const t=e.split(":");if(t.length===1){return[e,0,void 0]}const n=t[0];const s=t.length===3?t[1]:void 0;const r=Number(t[t.length-1]);return[n,r,s]}function mr(e,t,n){let s=y("pad",e,t,n);if(s==="explicit"){s=y("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++){r[o][0]=s[o*2];r[o][1]=s[o*2+1]}return r}return s}function sn(e){return e.kept?e:wn(e)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _9=[{"tfOpName":"Add","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"AddV2","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"AddN","category":"arithmetic","inputs":[{"start":0,"end":0,"name":"tensors","type":"tensors"}]},{"tfOpName":"BiasAdd","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true},{"tfName":"data_format","name":"dataFormat","type":"string","notSupported":true}]},{"tfOpName":"Sub","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"RealDiv","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Div","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"DivNoNan","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"FloorDiv","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Mul","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Maximum","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Minimum","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Pow","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"SquaredDifference","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Mod","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"FloorMod","category":"arithmetic","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]}];var w9=Object.freeze({__proto__:null,json:_9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N9=[{"tfOpName":"Abs","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Acos","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Asin","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Atan","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Atan2","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"y","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Ceil","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"ClipByValue","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"clipValueMin","type":"number"},{"start":2,"name":"clipValueMax","type":"number"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Complex","category":"basic_math","inputs":[{"start":0,"name":"real","type":"tensor"},{"start":1,"name":"imag","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"ComplexAbs","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Cos","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Cosh","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Elu","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Exp","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Floor","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Log","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Imag","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true},{"tfName":"Tout","name":"outputType","type":"dtype","notSupported":true}]},{"tfOpName":"Neg","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Real","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true},{"tfName":"Tout","name":"outputType","type":"dtype","notSupported":true}]},{"tfOpName":"Prelu","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"alpha","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Relu","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Relu6","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Selu","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Sigmoid","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Sin","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Sinh","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Sqrt","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Rsqrt","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Square","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Tan","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Tanh","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Sign","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Round","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Expm1","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Log1p","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Reciprocal","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Softplus","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Asinh","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Acosh","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Atanh","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Erf","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Prod","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axes","type":"number[]"}],"attrs":[{"tfName":"keep_dims","name":"keepDims","type":"bool","notSupported":true},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"LeakyRelu","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"alpha","name":"alpha","type":"number","defaultValue":.2},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"IsNan","category":"basic_math","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]}];var I9=Object.freeze({__proto__:null,json:N9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k9=[{"tfOpName":"EmptyTensorList","category":"control","inputs":[{"start":0,"name":"elementShape","type":"shape"},{"start":1,"name":"maxNumElements","type":"number"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"LoopCond","category":"control","inputs":[{"start":0,"name":"pred","type":"tensor"}]},{"tfOpName":"Switch","category":"control","inputs":[{"start":0,"name":"data","type":"tensor"},{"start":1,"name":"pred","type":"tensor"}]},{"tfOpName":"Merge","category":"control","inputs":[{"start":0,"end":0,"name":"tensors","type":"tensors"}]},{"tfOpName":"Enter","category":"control","inputs":[{"start":0,"name":"tensor","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true},{"tfName":"frame_name","name":"frameName","type":"string"},{"tfName":"is_constant","name":"isConstant","type":"bool"}]},{"tfOpName":"Exit","category":"control","inputs":[{"start":0,"name":"tensor","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"NextIteration","category":"control","inputs":[{"start":0,"name":"tensor","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"TensorArrayV3","category":"control","inputs":[{"start":0,"name":"size","type":"number"}],"attrs":[{"tfName":"dtype","name":"dtype","type":"dtype"},{"tfName":"element_shape","name":"elementShape","type":"shape"},{"tfName":"dynamic_size","name":"dynamicSize","type":"bool"},{"tfName":"clear_after_read","name":"clearAfterRead","type":"bool"},{"tfName":"identical_element_shapes","name":"identicalElementShapes","type":"bool"},{"tfName":"tensor_array_name","name":"name","type":"string"}]},{"tfOpName":"TensorArrayWriteV3","category":"control","inputs":[{"start":0,"name":"tensorArrayId","type":"tensor"},{"start":1,"name":"index","type":"number"},{"start":2,"name":"tensor","type":"tensor"},{"start":3,"name":"flowIn","type":"number"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"TensorArrayReadV3","category":"control","inputs":[{"start":0,"name":"tensorArrayId","type":"tensor"},{"start":1,"name":"index","type":"number"},{"start":2,"name":"flowIn","type":"number"}],"attrs":[{"tfName":"dtype","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"TensorArrayGatherV3","category":"control","inputs":[{"start":0,"name":"tensorArrayId","type":"tensor"},{"start":1,"name":"indices","type":"number[]"},{"start":2,"name":"flowIn","type":"number"}],"attrs":[{"tfName":"dtype","name":"dtype","type":"dtype"},{"tfName":"element_shape","name":"elementShape","type":"shape"}]},{"tfOpName":"TensorArrayScatterV3","category":"control","inputs":[{"start":0,"name":"tensorArrayId","type":"tensor"},{"start":1,"name":"indices","type":"number[]"},{"start":2,"name":"tensor","type":"tensor"},{"start":3,"name":"flowIn","type":"number"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype"}]},{"tfOpName":"TensorArrayConcatV3","category":"control","inputs":[{"start":0,"name":"tensorArrayId","type":"tensor"},{"start":1,"name":"flowIn","type":"number"}],"attrs":[{"tfName":"dtype","name":"dtype","type":"dtype"},{"tfName":"element_shape_except0","name":"elementShapeExcept0","type":"shape","notSupported":true}]},{"tfOpName":"TensorArraySplitV3","category":"control","inputs":[{"start":0,"name":"tensorArrayId","type":"tensor"},{"start":1,"name":"tensor","type":"tensor"},{"start":2,"name":"lengths","type":"number[]"},{"start":3,"name":"flowIn","type":"number"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype"}]},{"tfOpName":"TensorArraySizeV3","category":"control","inputs":[{"start":0,"name":"tensorArrayId","type":"tensor"},{"start":1,"name":"flowIn","type":"number"}]},{"tfOpName":"TensorArrayCloseV3","category":"control","inputs":[{"start":0,"name":"tensorArrayId","type":"tensor"}]},{"tfOpName":"StatelessIf","category":"control","inputs":[{"start":0,"name":"cond","type":"tensor"},{"start":1,"end":0,"name":"args","type":"tensors"}],"attrs":[{"tfName":"then_branch","name":"thenBranch","type":"func"},{"tfName":"else_branch","name":"elseBranch","type":"func"}]},{"tfOpName":"If","category":"control","inputs":[{"start":0,"name":"cond","type":"tensor"},{"start":1,"end":0,"name":"args","type":"tensors"}],"attrs":[{"tfName":"then_branch","name":"thenBranch","type":"func"},{"tfName":"else_branch","name":"elseBranch","type":"func"}]},{"tfOpName":"StatelessWhile","category":"control","inputs":[{"start":0,"end":0,"name":"args","type":"tensors"}],"attrs":[{"tfName":"cond","name":"cond","type":"func"},{"tfName":"body","name":"body","type":"func"}]},{"tfOpName":"While","category":"control","inputs":[{"start":0,"end":0,"name":"args","type":"tensors"}],"attrs":[{"tfName":"cond","name":"cond","type":"func"},{"tfName":"body","name":"body","type":"func"}]},{"tfOpName":"TensorListScatter","category":"control","inputs":[{"start":0,"name":"tensor","type":"tensor"},{"start":1,"name":"indices","type":"number[]"},{"start":2,"name":"elementShape","type":"shape"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListScatterV2","category":"control","inputs":[{"start":0,"name":"tensor","type":"tensor"},{"start":1,"name":"indices","type":"number[]"},{"start":2,"name":"elementShape","type":"shape"},{"start":3,"name":"numElements","type":"number"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListGather","category":"control","inputs":[{"start":0,"name":"tensorListId","type":"tensor"},{"start":1,"name":"indices","type":"number[]"},{"start":2,"name":"elementShape","type":"shape"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListGetItem","category":"control","inputs":[{"start":0,"name":"tensorListId","type":"tensor"},{"start":1,"name":"index","type":"number"},{"start":2,"name":"elementShape","type":"shape"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListSetItem","category":"control","inputs":[{"start":0,"name":"tensorListId","type":"tensor"},{"start":1,"name":"index","type":"number"},{"start":2,"name":"tensor","type":"tensor"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListReserve","category":"control","inputs":[{"start":0,"name":"elementShape","type":"shape"},{"start":1,"name":"numElements","type":"number"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListFromTensor","category":"control","inputs":[{"start":0,"name":"tensor","type":"tensor"},{"start":1,"name":"elementShape","type":"shape"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListStack","category":"control","inputs":[{"start":0,"name":"tensorListId","type":"tensor"},{"start":1,"name":"elementShape","type":"shape"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"},{"tfName":"num_elements","name":"numElements","type":"dtype"}]},{"tfOpName":"TensorListSplit","category":"control","inputs":[{"start":0,"name":"tensor","type":"tensor"},{"start":1,"name":"elementShape","type":"shape"},{"start":2,"name":"lengths","type":"number[]"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListConcat","category":"control","inputs":[{"start":0,"name":"tensorListId","type":"tensor"}],"attrs":[{"tfName":"element_shape","name":"elementShape","type":"shape"},{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListConcatV2","category":"control","inputs":[{"start":0,"name":"tensorListId","type":"tensor"}],"attrs":[{"tfName":"element_shape","name":"elementShape","type":"shape"},{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListPopBack","category":"control","inputs":[{"start":0,"name":"tensorListId","type":"tensor"},{"start":1,"name":"elementShape","type":"shape"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListPushBack","category":"control","inputs":[{"start":0,"name":"tensorListId","type":"tensor"},{"start":1,"name":"tensor","type":"tensor"}],"attrs":[{"tfName":"element_dtype","name":"elementDType","type":"dtype"}]},{"tfOpName":"TensorListLength","category":"control","inputs":[{"start":0,"name":"tensorListId","type":"tensor"}]},{"tfOpName":"TensorListResize","category":"control","inputs":[{"start":0,"name":"tensorListId","type":"tensor"},{"start":1,"name":"size","type":"number"}]}];var T9=Object.freeze({__proto__:null,json:k9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S9=[{"tfOpName":"AvgPool","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"data_format","name":"dataFormat","type":"string","notSupported":true},{"tfName":"ksize","name":"kernelSize","type":"number[]"},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"MaxPool","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"data_format","name":"dataFormat","type":"string","notSupported":true},{"tfName":"ksize","name":"kernelSize","type":"number[]"},{"tfName":"explicit_paddings","name":"explicitPaddings","type":"number[]","defaultValue":[],"notSupported":true},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"MaxPoolWithArgmax","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"ksize","name":"kernelSize","type":"number[]"},{"tfName":"include_batch_in_index","name":"includeBatchInIndex","type":"bool"},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"AvgPool3D","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"data_format","name":"dataFormat","type":"string","notSupported":true},{"tfName":"ksize","name":"kernelSize","type":"number[]"},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"MaxPool3D","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"data_format","name":"dataFormat","type":"string","notSupported":true},{"tfName":"ksize","name":"kernelSize","type":"number[]"},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Conv1D","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"filter","type":"tensor"}],"attrs":[{"tfName":"stride","name":"stride","type":"number"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"data_format","name":"dataFormat","type":"string","defaultValue":"NWC"},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true},{"tfName":"dilation","name":"dilation","type":"number","defaultValue":1}]},{"tfOpName":"Conv2D","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"filter","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true},{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"useCudnnOnGpu","name":"useCudnnOnGpu","type":"bool"},{"tfName":"data_format","name":"dataFormat","type":"string","defaultValue":"NHWC"},{"tfName":"explicit_paddings","name":"explicitPaddings","type":"number[]","defaultValue":[]},{"tfName":"dilations","name":"dilations","type":"number[]"}]},{"tfOpName":"_FusedConv2D","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"filter","type":"tensor"},{"start":2,"end":0,"name":"args","type":"tensors"}],"attrs":[{"tfName":"num_args","name":"numArgs","type":"number"},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true},{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"explicit_paddings","name":"explicitPaddings","type":"number[]","defaultValue":[]},{"tfName":"use_cudnn_on_gpu","name":"useCudnnOnGpu","type":"bool","defaultValue":true},{"tfName":"data_format","name":"dataFormat","type":"string","defaultValue":"NHWC"},{"tfName":"dilations","name":"dilations","type":"number[]","defaultValue":[1,1,1,1]},{"tfName":"fused_ops","name":"fusedOps","type":"string[]","defaultValue":[]},{"tfName":"epsilon","name":"epsilon","type":"number","defaultValue":1e-4},{"tfName":"leakyrelu_alpha","name":"leakyreluAlpha","type":"number","defaultValue":.2}]},{"tfOpName":"Conv2DBackpropInput","category":"convolution","inputs":[{"start":2,"name":"x","type":"tensor"},{"start":1,"name":"filter","type":"tensor"},{"start":0,"name":"outputShape","type":"number[]"}],"attrs":[{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"data_format","name":"dataFormat","type":"string","notSupported":true},{"tfName":"explicit_paddings","name":"explicitPaddings","type":"number[]","defaultValue":[]},{"tfName":"dilations","name":"dilations","type":"number[]","notSupported":true}]},{"tfOpName":"DepthwiseConv2d","category":"convolution","inputs":[{"start":0,"name":"input","type":"tensor"},{"start":1,"name":"filter","type":"tensor"}],"attrs":[{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"data_format","name":"dataFormat","type":"string","defaultValue":"NHWC"},{"tfName":"explicit_paddings","name":"explicitPaddings","type":"number[]","defaultValue":[]},{"tfName":"dilations","name":"dilations","type":"number[]"}]},{"tfOpName":"DepthwiseConv2dNative","category":"convolution","inputs":[{"start":0,"name":"input","type":"tensor"},{"start":1,"name":"filter","type":"tensor"}],"attrs":[{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"data_format","name":"dataFormat","type":"string","defaultValue":"NHWC"},{"tfName":"explicit_paddings","name":"explicitPaddings","type":"number[]","defaultValue":[]},{"tfName":"dilations","name":"dilations","type":"number[]"}]},{"tfOpName":"FusedDepthwiseConv2dNative","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"filter","type":"tensor"},{"start":2,"end":0,"name":"args","type":"tensors"}],"attrs":[{"tfName":"num_args","name":"numArgs","type":"number"},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true},{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"data_format","name":"dataFormat","type":"string","defaultValue":"NHWC"},{"tfName":"dilations","name":"dilations","type":"number[]","defaultValue":[1,1,1,1]},{"tfName":"fused_ops","name":"fusedOps","type":"string[]","defaultValue":[]},{"tfName":"explicit_paddings","name":"explicitPaddings","type":"number[]","defaultValue":[]}]},{"tfOpName":"Conv3D","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"filter","type":"tensor"}],"attrs":[{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"},{"tfName":"data_format","name":"dataFormat","type":"string","defaultValue":"NHWC"},{"tfName":"dilations","name":"dilations","type":"number[]"}]},{"tfOpName":"Dilation2D","category":"convolution","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"filter","type":"tensor"}],"attrs":[{"tfName":"strides","name":"strides","type":"number[]"},{"tfName":"rates","name":"dilations","type":"number[]"},{"tfName":"padding","name":"pad","type":"string"}]}];var E9=Object.freeze({__proto__:null,json:S9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v9=[{"tfOpName":"Fill","category":"creation","inputs":[{"start":0,"name":"shape","type":"number[]"},{"start":1,"name":"value","type":"number"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype"}]},{"tfOpName":"LinSpace","category":"creation","inputs":[{"start":0,"name":"start","type":"number"},{"start":1,"name":"stop","type":"number"},{"start":2,"name":"num","type":"number"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"OneHot","category":"creation","inputs":[{"start":0,"name":"indices","type":"tensor"},{"start":1,"name":"depth","type":"number"},{"start":2,"name":"onValue","type":"number","defaultValue":1},{"start":3,"name":"offValue","type":"number","defaultValue":0}],"attrs":[{"tfName":"axis","name":"axis","type":"number","notSupported":true},{"tfName":"T","name":"dtype","type":"dtype"}]},{"tfOpName":"Ones","category":"creation","inputs":[{"start":0,"name":"shape","type":"number[]"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype"}]},{"tfOpName":"OnesLike","category":"creation","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"dtype","name":"dtype","type":"dtype"}]},{"tfOpName":"RandomStandardNormal","category":"creation","inputs":[{"start":0,"name":"shape","type":"number[]"}],"attrs":[{"tfName":"seed","name":"seed","type":"number","defaultValue":0},{"tfName":"seed2","name":"seed2","type":"number","defaultValue":0,"notSupported":true},{"tfName":"dtype","name":"dtype","type":"dtype"},{"tfName":"T","name":"T","type":"number","notSupported":true}]},{"tfOpName":"RandomUniform","category":"creation","inputs":[{"start":0,"name":"shape","type":"number[]"}],"attrs":[{"tfName":"minval","name":"minval","type":"number","defaultValue":0},{"tfName":"maxval","name":"maxval","type":"number","defaultValue":1},{"tfName":"dtype","name":"dtype","type":"dtype"},{"tfName":"seed","name":"seed","type":"number","defaultValue":0},{"tfName":"seed2","name":"seed2","type":"number","defaultValue":0,"notSupported":true},{"tfName":"T","name":"T","type":"number","notSupported":true}]},{"tfOpName":"Range","category":"creation","inputs":[{"start":0,"name":"start","type":"number"},{"start":1,"name":"stop","type":"number"},{"start":2,"name":"step","type":"number","defaultValue":0}],"attrs":[{"tfName":"Tidx","name":"dtype","type":"dtype"}]},{"tfOpName":"TruncatedNormal","category":"creation","inputs":[{"start":0,"name":"shape","type":"number[]"}],"attrs":[{"tfName":"means","name":"mean","type":"number","defaultValue":0},{"tfName":"stddev","name":"stdDev","type":"number","defaultValue":1},{"tfName":"seed","name":"seed","type":"number"},{"tfName":"seed2","name":"seed2","type":"number","defaultValue":0,"notSupported":true},{"tfName":"dtype","name":"dtype","type":"dtype"},{"tfName":"T","name":"T","type":"number","notSupported":true}]},{"tfOpName":"Zeros","category":"creation","inputs":[{"start":0,"name":"shape","type":"number[]"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype"}]},{"tfOpName":"ZerosLike","category":"creation","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype"}]},{"tfOpName":"Multinomial","category":"creation","inputs":[{"start":0,"name":"logits","type":"tensor"},{"start":1,"name":"numSamples","type":"number"}],"attrs":[{"tfName":"seed","name":"seed","type":"number"},{"tfName":"seed2","name":"seed2","type":"number"},{"tfName":"T","name":"dtype","type":"dtype"},{"tfName":"output_dtype","name":"output_dtype","type":"dtype"}]}];var x9=Object.freeze({__proto__:null,json:v9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $9=[{"tfOpName":"NonMaxSuppressionV2","category":"dynamic","inputs":[{"start":0,"name":"boxes","type":"tensor"},{"start":1,"name":"scores","type":"tensor"},{"start":2,"name":"maxOutputSize","type":"number"},{"start":3,"name":"iouThreshold","type":"number"}]},{"tfOpName":"NonMaxSuppressionV3","category":"dynamic","inputs":[{"start":0,"name":"boxes","type":"tensor"},{"start":1,"name":"scores","type":"tensor"},{"start":2,"name":"maxOutputSize","type":"number"},{"start":3,"name":"iouThreshold","type":"number"},{"start":4,"name":"scoreThreshold","type":"number"}]},{"tfOpName":"NonMaxSuppressionV4","category":"dynamic","inputs":[{"start":0,"name":"boxes","type":"tensor"},{"start":1,"name":"scores","type":"tensor"},{"start":2,"name":"maxOutputSize","type":"number"},{"start":3,"name":"iouThreshold","type":"number"},{"start":4,"name":"scoreThreshold","type":"number"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true},{"tfName":"T_threshold","name":"threshold","type":"dtype","notSupported":true},{"tfName":"pad_to_max_output_size","name":"padToMaxOutputSize","type":"bool"}]},{"tfOpName":"NonMaxSuppressionV5","category":"dynamic","inputs":[{"start":0,"name":"boxes","type":"tensor"},{"start":1,"name":"scores","type":"tensor"},{"start":2,"name":"maxOutputSize","type":"number"},{"start":3,"name":"iouThreshold","type":"number"},{"start":4,"name":"scoreThreshold","type":"number"},{"start":5,"name":"softNmsSigma","type":"number"}]},{"tfOpName":"Where","category":"dynamic","inputs":[{"start":0,"name":"condition","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"ListDiff","category":"dynamic","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"y","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]}];var A9=Object.freeze({__proto__:null,json:$9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D9=[{"tfOpName":"LowerBound","category":"evaluation","inputs":[{"start":0,"name":"sortedSequence","type":"tensor"},{"start":1,"name":"values","type":"tensor"}]},{"tfOpName":"TopKV2","category":"evaluation","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"k","type":"number"}],"attrs":[{"tfName":"sorted","name":"sorted","type":"bool"}]},{"tfOpName":"UpperBound","category":"evaluation","inputs":[{"start":0,"name":"sortedSequence","type":"tensor"},{"start":1,"name":"values","type":"tensor"}]},{"tfOpName":"Unique","category":"evaluation","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"UniqueV2","category":"evaluation","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number"}]}];var R9=Object.freeze({__proto__:null,json:D9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O9=[{"tfOpName":"PlaceholderWithDefault","category":"graph","inputs":[{"start":0,"name":"default","type":"tensor"}],"attrs":[{"tfName":"shape","name":"shape","type":"shape"},{"tfName":"dtype","name":"dtype","type":"dtype"}]},{"tfOpName":"Placeholder","category":"graph","attrs":[{"tfName":"shape","name":"shape","type":"shape"},{"tfName":"dtype","name":"dtype","type":"dtype"}]},{"tfOpName":"Const","category":"graph"},{"tfOpName":"Identity","category":"graph","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"IdentityN","category":"graph","inputs":[{"start":0,"end":0,"name":"x","type":"tensors"}]},{"tfOpName":"Snapshot","category":"graph","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"Rank","category":"graph","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"Size","category":"graph","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"Shape","category":"graph","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"ShapeN","category":"graph","inputs":[{"start":0,"end":0,"name":"x","type":"tensors"}]},{"tfOpName":"Print","category":"graph","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"data","type":"tensors"}],"attrs":[{"tfName":"message","name":"message","type":"string"},{"tfName":"first_n","name":"firstN","type":"number","notSupported":true},{"tfName":"summarize","name":"summarize","type":"number","defaultValue":3}]},{"tfOpName":"NoOp","category":"graph","inputs":[]},{"tfOpName":"StopGradient","category":"graph","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"FakeQuantWithMinMaxVars","category":"graph","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"min","name":"min","type":"number"},{"tfName":"max","name":"max","type":"number"}]}];var L9=Object.freeze({__proto__:null,json:O9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F9=[{"tfOpName":"HashTable","category":"hash_table","inputs":[],"attrs":[{"tfName":"shared_name","name":"sharedName","type":"string"},{"tfName":"use_node_name_sharing","name":"useNodeNameSharing","type":"bool"},{"tfName":"key_dtype","name":"keyDType","type":"dtype"},{"tfName":"value_dtype","name":"valueDType","type":"dtype"}]},{"tfOpName":"HashTableV2","category":"hash_table","inputs":[],"attrs":[{"tfName":"shared_name","name":"sharedName","type":"string"},{"tfName":"use_node_name_sharing","name":"useNodeNameSharing","type":"bool"},{"tfName":"key_dtype","name":"keyDType","type":"dtype"},{"tfName":"value_dtype","name":"valueDType","type":"dtype"}]},{"tfOpName":"LookupTableImport","category":"hash_table","inputs":[{"start":0,"name":"tableHandle","type":"tensor"},{"start":1,"name":"keys","type":"tensor"},{"start":2,"name":"values","type":"tensor"}],"attrs":[{"tfName":"Tin","name":"tIn","type":"dtype","notSupported":true},{"tfName":"Tout","name":"tOut","type":"dtype","notSupported":true}]},{"tfOpName":"LookupTableImportV2","category":"hash_table","inputs":[{"start":0,"name":"tableHandle","type":"tensor"},{"start":1,"name":"keys","type":"tensor"},{"start":2,"name":"values","type":"tensor"}],"attrs":[{"tfName":"Tin","name":"tIn","type":"dtype","notSupported":true},{"tfName":"Tout","name":"tOut","type":"dtype","notSupported":true}]},{"tfOpName":"LookupTableFind","category":"hash_table","inputs":[{"start":0,"name":"tableHandle","type":"tensor"},{"start":1,"name":"keys","type":"tensor"},{"start":2,"name":"defaultValue","type":"tensor"}],"attrs":[{"tfName":"Tin","name":"tIn","type":"dtype","notSupported":true},{"tfName":"Tout","name":"tOut","type":"dtype","notSupported":true}]},{"tfOpName":"LookupTableFindV2","category":"hash_table","inputs":[{"start":0,"name":"tableHandle","type":"tensor"},{"start":1,"name":"keys","type":"tensor"},{"start":2,"name":"defaultValue","type":"tensor"}],"attrs":[{"tfName":"Tin","name":"tIn","type":"dtype","notSupported":true},{"tfName":"Tout","name":"tOut","type":"dtype","notSupported":true}]},{"tfOpName":"LookupTableSize","category":"hash_table","inputs":[{"start":0,"name":"tableHandle","type":"tensor"}]},{"tfOpName":"LookupTableSizeV2","category":"hash_table","inputs":[{"start":0,"name":"tableHandle","type":"tensor"}]}];var P9=Object.freeze({__proto__:null,json:F9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U9=[{"tfOpName":"ResizeBilinear","category":"image","inputs":[{"start":0,"name":"images","type":"tensor"},{"start":1,"name":"size","type":"number[]"}],"attrs":[{"tfName":"align_corners","name":"alignCorners","type":"bool"},{"tfName":"half_pixel_centers","name":"halfPixelCenters","type":"bool"},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"ResizeNearestNeighbor","category":"image","inputs":[{"start":0,"name":"images","type":"tensor"},{"start":1,"name":"size","type":"number[]"}],"attrs":[{"tfName":"align_corners","name":"alignCorners","type":"bool"},{"tfName":"half_pixel_centers","name":"halfPixelCenters","type":"bool"},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"CropAndResize","category":"image","inputs":[{"start":0,"name":"image","type":"tensor"},{"start":1,"name":"boxes","type":"tensor"},{"start":2,"name":"boxInd","type":"tensor"},{"start":3,"name":"cropSize","type":"number[]"}],"attrs":[{"tfName":"method","name":"method","type":"string"},{"tfName":"extrapolation_value","name":"extrapolationValue","type":"number"}]},{"tfOpName":"ImageProjectiveTransformV3","category":"image","inputs":[{"start":0,"name":"images","type":"tensor"},{"start":1,"name":"transforms","type":"tensor"},{"start":2,"name":"outputShape","type":"number[]"},{"start":3,"name":"fillValue","type":"number"}],"attrs":[{"tfName":"interpolation","name":"interpolation","type":"string"},{"tfName":"fill_mode","name":"fillMode","type":"string"}]}];var M9=Object.freeze({__proto__:null,json:U9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V9=[{"tfOpName":"Equal","category":"logical","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"NotEqual","category":"logical","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Greater","category":"logical","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"GreaterEqual","category":"logical","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Less","category":"logical","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"LessEqual","category":"logical","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"LogicalAnd","category":"logical","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"LogicalNot","category":"logical","inputs":[{"start":0,"name":"a","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"LogicalOr","category":"logical","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Select","category":"logical","inputs":[{"start":0,"name":"condition","type":"tensor"},{"start":1,"name":"a","type":"tensor"},{"start":2,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"SelectV2","category":"logical","inputs":[{"start":0,"name":"condition","type":"tensor"},{"start":1,"name":"a","type":"tensor"},{"start":2,"name":"b","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]}];var B9=Object.freeze({__proto__:null,json:V9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C9=[{"tfOpName":"_FusedMatMul","category":"matrices","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"},{"start":2,"end":0,"name":"args","type":"tensors"}],"attrs":[{"tfName":"num_args","name":"numArgs","type":"number"},{"tfName":"fused_ops","name":"fusedOps","type":"string[]","defaultValue":[]},{"tfName":"epsilon","name":"epsilon","type":"number","defaultValue":1e-4},{"tfName":"transpose_a","name":"transposeA","type":"bool","defaultValue":false},{"tfName":"transpose_b","name":"transposeB","type":"bool","defaultValue":false},{"tfName":"leakyrelu_alpha","name":"leakyreluAlpha","type":"number","defaultValue":.2},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"MatMul","category":"matrices","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"transpose_a","name":"transposeA","type":"bool","defaultValue":false},{"tfName":"transpose_b","name":"transposeB","type":"bool","defaultValue":false},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"BatchMatMul","category":"matrices","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"adj_x","name":"transposeA","type":"bool","defaultValue":false},{"tfName":"adj_y","name":"transposeB","type":"bool","defaultValue":false},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"BatchMatMulV2","category":"matrices","inputs":[{"start":0,"name":"a","type":"tensor"},{"start":1,"name":"b","type":"tensor"}],"attrs":[{"tfName":"adj_x","name":"transposeA","type":"bool","defaultValue":false},{"tfName":"adj_y","name":"transposeB","type":"bool","defaultValue":false},{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Transpose","category":"matrices","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"perm","type":"number[]"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"Einsum","category":"matrices","inputs":[{"start":0,"end":0,"name":"tensors","type":"tensors"}],"attrs":[{"tfName":"equation","name":"equation","type":"string"},{"tfName":"N","name":"n","type":"number","defaultValue":2},{"tfName":"T","name":"dtype","type":"dtype"}]}];var z9=Object.freeze({__proto__:null,json:C9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W9=[{"tfOpName":"EuclideanNorm","category":"normalization","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number[]"}],"attrs":[{"tfName":"keep_dims","name":"keepDims","type":"bool","defaultValue":false}]},{"tfOpName":"FusedBatchNorm","category":"normalization","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"scale","type":"tensor"},{"start":2,"name":"offset","type":"tensor"},{"start":3,"name":"mean","type":"tensor"},{"start":4,"name":"variance","type":"tensor"}],"attrs":[{"tfName":"epsilon","name":"epsilon","type":"number","defaultValue":.001},{"tfName":"data_format","name":"dataFormat","type":"string","notSupported":true}]},{"tfOpName":"FusedBatchNormV2","category":"normalization","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"scale","type":"tensor"},{"start":2,"name":"offset","type":"tensor"},{"start":3,"name":"mean","type":"tensor"},{"start":4,"name":"variance","type":"tensor"}],"attrs":[{"tfName":"epsilon","name":"epsilon","type":"number","defaultValue":.001},{"tfName":"data_format","name":"dataFormat","type":"string","notSupported":true}]},{"tfOpName":"FusedBatchNormV3","category":"normalization","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"scale","type":"tensor"},{"start":2,"name":"offset","type":"tensor"},{"start":3,"name":"mean","type":"tensor"},{"start":4,"name":"variance","type":"tensor"}],"attrs":[{"tfName":"epsilon","name":"epsilon","type":"number","defaultValue":.001},{"tfName":"data_format","name":"dataFormat","type":"string","notSupported":true}]},{"tfOpName":"LRN","category":"normalization","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"depth_radius","name":"radius","type":"number","defaultValue":5},{"tfName":"bias","name":"bias","type":"number","defaultValue":1},{"tfName":"alpha","name":"alpha","type":"number","defaultValue":1},{"tfName":"beta","name":"beta","type":"number","defaultValue":.5}]},{"tfOpName":"Softmax","category":"normalization","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"LogSoftmax","category":"normalization","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"SparseToDense","category":"normalization","inputs":[{"start":0,"name":"sparseIndices","type":"tensor"},{"start":1,"name":"outputShape","type":"number[]"},{"start":2,"name":"sparseValues","type":"tensor"},{"start":3,"name":"defaultValue","type":"tensor"}],"attrs":[{"tfName":"validate_indices","name":"validateIndices","type":"bool","defaultValue":true,"notSupported":true}]}];var H9=Object.freeze({__proto__:null,json:W9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q9=[{"tfOpName":"Bincount","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"size","type":"number"},{"start":2,"name":"weights","type":"tensor"}]},{"tfOpName":"DenseBincount","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"size","type":"number"},{"start":2,"name":"weights","type":"tensor"}],"attrs":[{"tfName":"binary_output","name":"binaryOutput","type":"bool"}]},{"tfOpName":"Max","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number[]"}],"attrs":[{"tfName":"keep_dims","name":"keepDims","type":"bool"}]},{"tfOpName":"Mean","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number[]"}],"attrs":[{"tfName":"keep_dims","name":"keepDims","type":"bool"}]},{"tfOpName":"Min","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number[]"}],"attrs":[{"tfName":"keep_dims","name":"keepDims","type":"bool"}]},{"tfOpName":"Sum","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number[]"}],"attrs":[{"tfName":"keep_dims","name":"keepDims","type":"bool"}]},{"tfOpName":"All","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number[]"}],"attrs":[{"tfName":"keep_dims","name":"keepDims","type":"bool"}]},{"tfOpName":"Any","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number[]"}],"attrs":[{"tfName":"keep_dims","name":"keepDims","type":"bool"}]},{"tfOpName":"ArgMax","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number"}]},{"tfOpName":"ArgMin","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number"}]},{"tfOpName":"Prod","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number[]"}],"attrs":[{"tfName":"keep_dims","name":"keepDims","type":"bool"}]},{"tfOpName":"Cumprod","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number"}],"attrs":[{"tfName":"exclusive","name":"exclusive","type":"bool"},{"tfName":"reverse","name":"reverse","type":"bool"}]},{"tfOpName":"Cumsum","category":"reduction","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number"}],"attrs":[{"tfName":"exclusive","name":"exclusive","type":"bool"},{"tfName":"reverse","name":"reverse","type":"bool"}]}];var G9=Object.freeze({__proto__:null,json:q9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K9=[{"tfOpName":"ConcatV2","category":"slice_join","inputs":[{"start":0,"end":-1,"name":"tensors","type":"tensors"},{"start":-1,"name":"axis","type":"number"}],"attrs":[{"tfName":"N","name":"n","type":"number","defaultValue":2}]},{"tfOpName":"Concat","category":"slice_join","inputs":[{"start":1,"end":0,"name":"tensors","type":"tensors"},{"start":0,"name":"axis","type":"number"}],"attrs":[{"tfName":"N","name":"n","type":"number","defaultValue":2}]},{"tfOpName":"GatherV2","category":"slice_join","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"indices","type":"tensor"},{"start":2,"name":"axis","type":"number","defaultValue":0}],"attrs":[{"tfName":"batch_dims","name":"batchDims","type":"number","defaultValue":0}]},{"tfOpName":"Gather","category":"slice_join","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"indices","type":"tensor"}],"attrs":[{"tfName":"validate_indices","name":"validateIndices","type":"bool","notSupported":true}]},{"tfOpName":"Reverse","category":"slice_join","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"dims","type":"bool[]"}]},{"tfOpName":"ReverseV2","category":"slice_join","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number[]"}]},{"tfOpName":"Slice","category":"slice_join","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"begin","type":"number[]"},{"start":2,"name":"size","type":"number[]"}]},{"tfOpName":"StridedSlice","category":"slice_join","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"begin","type":"number[]"},{"start":2,"name":"end","type":"number[]"},{"start":3,"name":"strides","type":"number[]"}],"attrs":[{"tfName":"begin_mask","name":"beginMask","type":"number","defaultValue":0},{"tfName":"end_mask","name":"endMask","type":"number","defaultValue":0},{"tfName":"new_axis_mask","name":"newAxisMask","type":"number","defaultValue":0},{"tfName":"ellipsis_mask","name":"ellipsisMask","type":"number","defaultValue":0},{"tfName":"shrink_axis_mask","name":"shrinkAxisMask","type":"number","defaultValue":0}]},{"tfOpName":"Pack","category":"slice_join","inputs":[{"start":0,"end":0,"name":"tensors","type":"tensors"}],"attrs":[{"tfName":"axis","name":"axis","type":"number","defaultValue":0}]},{"tfOpName":"Unpack","category":"slice_join","inputs":[{"start":0,"name":"tensor","type":"tensor"}],"attrs":[{"tfName":"axis","name":"axis","type":"number","defaultValue":0},{"tfName":"num","name":"num","type":"number","defaultValue":0,"notSupported":true}]},{"tfOpName":"Tile","category":"slice_join","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"reps","type":"number[]"}]},{"tfOpName":"Split","category":"slice_join","inputs":[{"start":0,"name":"axis","type":"number","defaultValue":0},{"start":1,"name":"x","type":"tensor"}],"attrs":[{"tfName":"num_split","name":"numOrSizeSplits","type":"number","defaultValue":1}]},{"tfOpName":"SplitV","category":"slice_join","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"numOrSizeSplits","type":"number[]"},{"start":2,"name":"axis","type":"number","defaultValue":0}]},{"tfOpName":"ScatterNd","category":"slice_join","inputs":[{"start":0,"name":"indices","type":"tensor"},{"start":1,"name":"values","type":"tensor"},{"start":2,"name":"shape","type":"number[]"}]},{"tfOpName":"GatherNd","category":"slice_join","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"indices","type":"tensor"}]},{"tfOpName":"SparseToDense","category":"slice_join","inputs":[{"start":0,"name":"sparseIndices","type":"tensor"},{"start":1,"name":"outputShape","type":"number[]"},{"start":2,"name":"sparseValues","type":"tensor"},{"start":3,"name":"defaultValue","type":"tensor"}],"attrs":[{"tfName":"validate_indices","name":"validateIndices","type":"bool","defaultValue":false,"notSupported":true}]}];var j9=Object.freeze({__proto__:null,json:K9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X9=[{"tfOpName":"SparseFillEmptyRows","category":"sparse","inputs":[{"start":0,"name":"indices","type":"tensor"},{"start":1,"name":"values","type":"tensor"},{"start":2,"name":"denseShape","type":"tensor"},{"start":3,"name":"defaultValue","type":"tensor"}]},{"tfOpName":"SparseReshape","category":"sparse","inputs":[{"start":0,"name":"inputIndices","type":"tensor"},{"start":1,"name":"inputShape","type":"tensor"},{"start":2,"name":"newShape","type":"tensor"}],"attrs":[{"tfName":"T","name":"dtype","type":"dtype","notSupported":true}]},{"tfOpName":"SparseSegmentMean","category":"sparse","inputs":[{"start":0,"name":"data","type":"tensor"},{"start":1,"name":"indices","type":"tensor"},{"start":2,"name":"segmentIds","type":"tensor"}]},{"tfOpName":"SparseSegmentSum","category":"sparse","inputs":[{"start":0,"name":"data","type":"tensor"},{"start":1,"name":"indices","type":"tensor"},{"start":2,"name":"segmentIds","type":"tensor"}]}];var Y9=Object.freeze({__proto__:null,json:X9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z9=[{"tfOpName":"FFT","category":"spectral","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"IFFT","category":"spectral","inputs":[{"start":0,"name":"x","type":"tensor"}]},{"tfOpName":"RFFT","category":"spectral","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"fft_length","type":"number","notSupported":true}]},{"tfOpName":"IRFFT","category":"spectral","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"fft_length","type":"number","notSupported":true}]}];var J9=Object.freeze({__proto__:null,json:Z9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q9=[{"tfOpName":"StringNGrams","category":"string","inputs":[{"start":0,"name":"data","type":"tensor"},{"start":1,"name":"dataSplits","type":"tensor"}],"attrs":[{"tfName":"separator","name":"separator","type":"string"},{"tfName":"ngram_widths","name":"nGramWidths","type":"number[]"},{"tfName":"left_pad","name":"leftPad","type":"string"},{"tfName":"right_pad","name":"rightPad","type":"string"},{"tfName":"pad_width","name":"padWidth","type":"number"},{"tfName":"preserve_short_sequences","name":"preserveShortSequences","type":"bool"}],"outputs":["ngrams","ngrams_splits"]},{"tfOpName":"StringSplit","category":"string","inputs":[{"start":0,"name":"input","type":"tensor"},{"start":1,"name":"delimiter","type":"tensor"}],"attrs":[{"tfName":"skip_empty","name":"skipEmpty","type":"bool"}],"outputs":["indices","values","shape"]},{"tfOpName":"StringToHashBucketFast","category":"string","inputs":[{"start":0,"name":"input","type":"tensor"}],"attrs":[{"tfName":"num_buckets","name":"numBuckets","type":"number"}]}];var t3=Object.freeze({__proto__:null,json:Q9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e3=[{"tfOpName":"Cast","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"SrcT","name":"sdtype","type":"dtype","notSupported":true},{"tfName":"DstT","name":"dtype","type":"dtype"}]},{"tfOpName":"ExpandDims","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"axis","type":"number"}]},{"tfOpName":"MirrorPad","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"padding","type":"number[]"}],"attrs":[{"tfName":"mode","name":"mode","type":"string"}]},{"tfOpName":"Pad","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"padding","type":"number[]"}],"attrs":[{"tfName":"constant_value","name":"constantValue","type":"number","defaultValue":0}]},{"tfOpName":"PadV2","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"padding","type":"number[]"},{"start":2,"name":"constantValue","type":"number","defaultValue":0}]},{"tfOpName":"Reshape","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"shape","type":"number[]"}]},{"tfOpName":"Squeeze","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"axis","tfDeprecatedName":"squeeze_dims","name":"axis","type":"number[]"}]},{"tfOpName":"SpaceToBatchND","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"blockShape","type":"number[]"},{"start":2,"name":"paddings","type":"number[]"}]},{"tfOpName":"BatchToSpaceND","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"blockShape","type":"number[]"},{"start":2,"name":"crops","type":"number[]"}]},{"tfOpName":"DepthToSpace","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"}],"attrs":[{"tfName":"block_size","name":"blockSize","type":"number"},{"tfName":"data_format","name":"dataFormat","type":"string"}]},{"tfOpName":"BroadcastTo","category":"transformation","inputs":[{"start":0,"name":"x","type":"tensor"},{"start":1,"name":"shape","type":"number[]"}],"attrs":[]},{"tfOpName":"BroadcastArgs","category":"transformation","inputs":[{"start":0,"name":"s0","type":"tensor"},{"start":1,"name":"s1","type":"tensor"}],"attrs":[]}];var n3=Object.freeze({__proto__:null,json:e3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $l{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[w9,I9,T9,E9,x9,A9,R9,L9,P9,M9,B9,z9,H9,G9,j9,Y9,J9,t3,n3];const n=[].concat(...t.map(s=>s.json));this.opMappers=n.reduce((s,r)=>{s[r.tfOpName]=r;return s},{})}transformGraph(t,n={}){const s=t.node;const r=[];const o=[];const i=[];const a=s.reduce((g,m)=>{g[m.name]=this.mapNode(m);if(m.op.startsWith("Placeholder")){r.push(g[m.name])}else if(m.op==="Const"){o.push(g[m.name])}else if(m.input==null||m.input.length===0){i.push(g[m.name])}return g},{});let l=[];const c=[];let u={};let f={};if(n!=null){u=this.mapSignatureEntries(n.inputs);f=this.mapSignatureEntries(n.outputs)}const h=Object.keys(a);h.forEach(g=>{const m=a[g];m.inputNames.forEach((b,_)=>{const[w,,N]=We(b);const I=a[w];if(I.outputs!=null){const T=I.outputs.indexOf(N);if(T!==-1){const E=`${w}:${T}`;m.inputNames[_]=E}}m.inputs.push(I);I.children.push(m)})});if(Object.keys(f).length===0){h.forEach(g=>{const m=a[g];if(m.children.length===0){c.push(m)}})}else{Object.keys(f).forEach(g=>{const[m]=We(g);const b=a[m];if(b!=null){b.signatureKey=f[g];c.push(b)}})}if(Object.keys(u).length>0){Object.keys(u).forEach(g=>{const[m]=We(g);const b=a[m];if(b){b.signatureKey=u[g];l.push(b)}})}else{l=r}let p={};if(t.library!=null&&t.library.function!=null){p=t.library.function.reduce((g,m)=>{g[m.signature.name]=this.mapFunction(m);return g},{})}const d={nodes:a,inputs:l,outputs:c,weights:o,placeholders:r,signature:n,functions:p};if(i.length>0){d.initNodes=i}return d}mapSignatureEntries(t){return Object.keys(t||{}).reduce((n,s)=>{n[t[s].name]=s;return n},{})}mapNode(t){const n=Af(t.op)||this.opMappers[t.op]||{};if(t.attr==null){t.attr={}}const s={name:t.name,op:t.op,category:n.category,inputNames:(t.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:n.outputs};if(n.inputs!=null){s.inputParams=n.inputs.reduce((r,o)=>{r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end};return r},{})}if(n.attrs!=null){s.attrParams=n.attrs.reduce((r,o)=>{const i=o.type;let a=void 0;switch(o.type){case"string":a=Ko(t.attr,o.tfName,o.defaultValue);if(a===void 0&&!!o.tfDeprecatedName){a=Ko(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"string[]":a=ti(t.attr,o.tfName,o.defaultValue);if(a===void 0&&!!o.tfDeprecatedName){a=ti(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"number":a=Xo(t.attr,o.tfName,o.defaultValue||0);if(a===void 0&&!!o.tfDeprecatedName){a=Xo(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"number[]":a=Qo(t.attr,o.tfName,o.defaultValue);if(a===void 0&&!!o.tfDeprecatedName){a=Qo(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"bool":a=jo(t.attr,o.tfName,o.defaultValue);if(a===void 0&&!!o.tfDeprecatedName){a=jo(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"bool[]":a=ni(t.attr,o.tfName,o.defaultValue);if(a===void 0&&!!o.tfDeprecatedName){a=ni(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"shape":a=Jo(t.attr,o.tfName,o.defaultValue);if(a===void 0&&!!o.tfDeprecatedName){a=Jo(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"shape[]":a=ei(t.attr,o.tfName,o.defaultValue);if(a===void 0&&!!o.tfDeprecatedName){a=ei(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"dtype":a=Yo(t.attr,o.tfName,o.defaultValue);if(a===void 0&&!!o.tfDeprecatedName){a=Yo(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"dtype[]":a=Zo(t.attr,o.tfName,o.defaultValue);if(a===void 0&&!!o.tfDeprecatedName){a=Zo(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"func":a=Al(t.attr,o.tfName,o.defaultValue);if(a===void 0&&!!o.tfDeprecatedName){a=Al(t.attr,o.tfDeprecatedName,o.defaultValue)}break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${t.op}`)}r[o.name]={value:a,type:i};return r},{})}return s}mapFunction(t){const n=t.nodeDef;const s=[];const r=[];let o={};if(n!=null){o=n.reduce((f,h)=>{f[h.name]=this.mapNode(h);if(h.op==="Const"){r.push(f[h.name])}return f},{})}const i=[];const a=[];t.signature.inputArg.forEach(f=>{const[h]=We(f.name);const p={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ha(f.type),type:"dtype"}},children:[]};p.signatureKey=f.name;i.push(p);o[h]=p});const l=Object.keys(o);l.forEach(f=>{const h=o[f];h.inputNames.forEach((p,d)=>{const[g,,m]=We(p);const b=o[g];if(b.outputs!=null){const _=b.outputs.indexOf(m);if(_!==-1){const w=`${g}:${_}`;h.inputNames[d]=w}}h.inputs.push(b);b.children.push(h)})});const c=t.ret;t.signature.outputArg.forEach(f=>{const[h,p]=We(c[f.name]);const d=o[h];if(d!=null){d.defaultOutput=p;a.push(d)}});const u=this.mapArgsToSignature(t);return{nodes:o,inputs:i,outputs:a,weights:r,placeholders:s,signature:u}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((n,s)=>{n[s.name]=this.mapArgToTensorInfo(s);return n},{}),outputs:t.signature.outputArg.reduce((n,s)=>{n[s.name]=this.mapArgToTensorInfo(s,t.ret);return n},{})}}mapArgToTensorInfo(t,n){let s=t.name;if(n!=null){s=n[s]}return{name:s,dtype:t.type}}}function s3(e){const t=lt().global;if(typeof t.atob!=="undefined"){return t.atob(e)}else if(typeof Buffer!=="undefined"){return new Buffer(e,"base64").toString()}else{throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}}function Df(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):s3(e);return t?n:n.toLowerCase()}function Ko(e,t,n,s=false){const r=e[t];if(r!=null){return Df(r.s,s)}return n}function jo(e,t,n){const s=e[t];return s?s.b:n}function Xo(e,t,n){const s=e[t]||{};const r=s["i"]!=null?s["i"]:s["f"]!=null?s["f"]:n;return typeof r==="number"?r:parseInt(r,10)}function Ha(e){if(typeof e==="string"){e=be[e]}switch(e){case be.DT_FLOAT:case be.DT_HALF:return"float32";case be.DT_INT32:case be.DT_INT64:case be.DT_INT8:case be.DT_UINT8:return"int32";case be.DT_BOOL:return"bool";case be.DT_DOUBLE:return"float32";case be.DT_STRING:return"string";default:return null}}function Al(e,t,n){const s=e[t];if(s&&s.func){return s.func.name}return n}function Yo(e,t,n){const s=e[t];if(s&&s.type){return Ha(s.type)}return n}function Zo(e,t,n){const s=e[t];if(s&&s.list&&s.list.type){return s.list.type.map(r=>Ha(r))}return n}function Rf(e){if(e.unknownRank){return void 0}if(e.dim!=null){return e.dim.map(t=>typeof t.size==="number"?t.size:parseInt(t.size,10))}return[]}function Jo(e,t,n){const s=e[t];if(s&&s.shape){return Rf(s.shape)}return n}function Qo(e,t,n){const s=e[t];if(s){return((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r==="number"?r:parseInt(r,10))}return n}function ti(e,t,n,s=false){const r=e[t];if(r&&r.list&&r.list.s){return r.list.s.map(o=>{return Df(o,s)})}return n}function ei(e,t,n){const s=e[t];if(s&&s.list&&s.list.shape){return s.list.shape.map(r=>{return Rf(r)})}return n}function ni(e,t,n){const s=e[t];if(s&&s.list&&s.list.b){return s.list.b}return n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r3{constructor(t,n,s){this.node=t;this.tensorMap=n;this.context=s;this.inputs=[];this.attrs={};this.inputs=t.inputNames.map(r=>this.getInput(r));if(t.rawAttrs!=null){this.attrs=Object.keys(t.rawAttrs).reduce((r,o)=>{r[o]=this.getAttr(o);return r},{})}}getInput(t){return te(t,this.tensorMap,this.context)}getAttr(t,n){const s=this.node.rawAttrs[t];if(s.tensor!=null){return te(t,this.tensorMap,this.context)}if(s.i!=null||s.f!=null){return Xo(this.node.rawAttrs,t,n)}if(s.s!=null){return Ko(this.node.rawAttrs,t,n)}if(s.b!=null){return jo(this.node.rawAttrs,t,n)}if(s.shape!=null){return Jo(this.node.rawAttrs,t,n)}if(s.type!=null){return Yo(this.node.rawAttrs,t,n)}if(s.list!=null){if(s.list.i!=null||s.list.f!=null){return Qo(this.node.rawAttrs,t,n)}if(s.list.s!=null){return ti(this.node.rawAttrs,t,n)}if(s.list.shape!=null){return ei(this.node.rawAttrs,t,n)}if(s.list.b!=null){return ni(this.node.rawAttrs,t,n)}if(s.list.type!=null){return Zo(this.node.rawAttrs,t,n)}}return n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Zt=Object.freeze({__proto__:null,OP_SCOPE_SUFFIX:f1,abs:_e,acos:Qd,acosh:em,add:Vt,addN:sm,all:om,any:am,argMax:cm,argMin:fm,asin:pm,asinh:mm,atan:ym,atan2:_m,atanh:Nm,avgPool:O1,avgPool3d:$m,basicLSTMCell:Fm,batchNorm:no,batchNorm2d:Bm,batchNorm3d:zm,batchNorm4d:Hm,batchToSpaceND:L1,bincount:F1,booleanMaskAsync:w5,broadcastArgs:Km,broadcastTo:Ws,buffer:at,cast:Mt,ceil:Ym,clipByValue:Jm,clone:wn,complex:Nn,concat:ne,concat1d:t0,concat2d:n0,concat3d:r0,concat4d:i0,conv1d:c0,conv2d:ro,conv2dTranspose:h0,conv3d:d0,conv3dTranspose:b0,cos:w0,cosh:I0,cosineWindow:Ma,cumprod:T0,cumsum:E0,denseBincount:x0,depthToSpace:A0,depthwiseConv2d:$a,diag:O0,dilation2d:F0,div:ee,divNoNan:B0,dot:z0,dropout:R5,einsum:H0,elu:M1,enclosingPowerOfTwo:wf,equal:U1,erf:K0,euclideanNorm:s2,exp:Wn,expandDims:vn,expm1:a2,eye:z1,fft:Fa,fill:so,floor:W1,floorDiv:D1,fused:K5,gather:H1,gatherND:$5,greater:ao,greaterEqual:q1,ifft:Ar,imag:Jr,image:Iy,inTopKAsync:L5,irfft:mf,isFinite:m2,isInf:y2,isNaN:_2,leakyRelu:G1,less:I2,lessEqual:Ra,linalg:ky,linspace:T2,localResponseNormalization:E2,log:Zs,log1p:K1,logSigmoid:D2,logSoftmax:L2,logSumExp:X1,logicalAnd:xr,logicalNot:Y1,logicalOr:Z1,logicalXor:B2,losses:Ty,lowerBound:z2,matMul:mt,max:fs,maxPool:J1,maxPool3d:q2,maxPoolWithArgmax:K2,maximum:X2,mean:$r,meshgrid:Z2,min:qo,minimum:Q1,mirrorPad:tg,mod:ng,moments:rg,movingAverage:I5,mul:ot,multiRNNCell:ig,multinomial:lg,neg:on,norm:io,notEqual:tf,oneHot:Ed,ones:Fn,onesLike:fg,op:v,outerProduct:pg,pad:sr,pad1d:gg,pad2d:bg,pad3d:wg,pad4d:Ig,pool:vg,pow:Da,prelu:nf,print:k1,prod:Ag,raggedGather:Rg,raggedTensorToTensor:Lg,rand:Pg,randomGamma:n4,randomNormal:ff,randomStandardNormal:o4,randomUniform:hf,range:Js,real:Ys,reciprocal:l4,relu:co,relu6:pf,reshape:C,reverse:Hn,reverse1d:p4,reverse2d:m4,reverse3d:y4,reverse4d:_4,rfft:Pa,round:df,rsqrt:I4,scalar:ht,scatterND:T5,searchSorted:Oa,selu:T4,separableConv2d:E4,setdiff1dAsync:x4,sigmoid:us,sign:A4,signal:Ny,sin:R4,sinh:L4,slice:wt,slice1d:P4,slice2d:M4,slice3d:B4,slice4d:z4,softmax:H4,softplus:j1,spaceToBatchND:ef,sparse:Sy,sparseToDense:v5,spectral:wy,split:Qs,sqrt:Go,square:oo,squaredDifference:gf,squeeze:Ua,stack:cn,step:yf,stridedSlice:e5,string:Ey,sub:ct,sum:Tt,tan:s5,tanh:Ho,tensor:Re,tensor1d:De,tensor2d:qs,tensor3d:Fd,tensor4d:r5,tensor5d:o5,tensor6d:i5,tile:Hs,topk:l5,transpose:Co,truncatedNormal:u5,unique:h5,unsortedSegmentSum:d5,unstack:Qn,upperBound:g5,variable:y5,where:ys,whereAsync:_f,zeros:bs,zerosLike:Aa});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o3=(e,t,n,s=Zt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":{return[s.add(y("a",e,t,n),y("b",e,t,n))]}case"AddN":{return[s.addN(y("tensors",e,t,n))]}case"FloorMod":case"Mod":return[s.mod(y("a",e,t,n),y("b",e,t,n))];case"Mul":return[s.mul(y("a",e,t,n),y("b",e,t,n))];case"RealDiv":case"Div":{return[s.div(y("a",e,t,n),y("b",e,t,n))]}case"DivNoNan":{return[s.divNoNan(y("a",e,t,n),y("b",e,t,n))]}case"FloorDiv":{return[s.floorDiv(y("a",e,t,n),y("b",e,t,n))]}case"Sub":{return[s.sub(y("a",e,t,n),y("b",e,t,n))]}case"Minimum":{return[s.minimum(y("a",e,t,n),y("b",e,t,n))]}case"Maximum":{return[s.maximum(y("a",e,t,n),y("b",e,t,n))]}case"Pow":{return[s.pow(y("a",e,t,n),y("b",e,t,n))]}case"SquaredDifference":{return[s.squaredDifference(y("a",e,t,n),y("b",e,t,n))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i3=(e,t,n,s=Zt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs(y("x",e,t,n))];case"Acos":return[s.acos(y("x",e,t,n))];case"Acosh":return[s.acosh(y("x",e,t,n))];case"Asin":return[s.asin(y("x",e,t,n))];case"Asinh":return[s.asinh(y("x",e,t,n))];case"Atan":return[s.atan(y("x",e,t,n))];case"Atan2":return[s.atan2(y("x",e,t,n),y("y",e,t,n))];case"Atanh":return[s.atanh(y("x",e,t,n))];case"Ceil":return[s.ceil(y("x",e,t,n))];case"Complex":return[s.complex(y("real",e,t,n),y("imag",e,t,n))];case"Cos":return[s.cos(y("x",e,t,n))];case"Cosh":return[s.cosh(y("x",e,t,n))];case"Elu":return[s.elu(y("x",e,t,n))];case"Erf":return[s.erf(y("x",e,t,n))];case"Exp":return[s.exp(y("x",e,t,n))];case"Expm1":{return[s.expm1(y("x",e,t,n))]}case"Floor":return[s.floor(y("x",e,t,n))];case"Log":return[s.log(y("x",e,t,n))];case"Log1p":{return[s.log1p(y("x",e,t,n))]}case"Imag":return[s.imag(y("x",e,t,n))];case"Neg":return[s.neg(y("x",e,t,n))];case"Reciprocal":{return[s.reciprocal(y("x",e,t,n))]}case"Real":return[s.real(y("x",e,t,n))];case"Relu":return[s.relu(y("x",e,t,n))];case"Round":{return[s.round(y("x",e,t,n))]}case"Selu":return[s.selu(y("x",e,t,n))];case"Sigmoid":return[s.sigmoid(y("x",e,t,n))];case"Sin":return[s.sin(y("x",e,t,n))];case"Sign":{return[s.sign(y("x",e,t,n))]}case"Sinh":{return[s.sinh(y("x",e,t,n))]}case"Softplus":{return[s.softplus(y("x",e,t,n))]}case"Sqrt":{return[s.sqrt(y("x",e,t,n))]}case"Square":{return[s.square(y("x",e,t,n))]}case"Tanh":{return[s.tanh(y("x",e,t,n))]}case"Tan":return[s.tan(y("x",e,t,n))];case"ClipByValue":return[s.clipByValue(y("x",e,t,n),y("clipValueMin",e,t,n),y("clipValueMax",e,t,n))];case"Relu6":return[s.relu6(y("x",e,t,n))];case"Rsqrt":return[s.rsqrt(te(e.inputNames[0],t,n))];case"Prod":return[s.prod(y("x",e,t,n),y("axes",e,t,n))];case"LeakyRelu":return[s.leakyRelu(y("x",e,t,n),y("alpha",e,t,n))];case"Prelu":return[s.prelu(y("x",e,t,n),y("alpha",e,t,n))];case"IsNan":return[s.isNaN(te(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(e,t,n=""){if(typeof e==="number"||typeof t==="number"){return}S(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){const r=e[s];const o=t[s];S(r<0||o<0||r===o,()=>n+` Shapes ${e} and ${t} must match`)}}function Dl(e){if(typeof e==="number"||e.some(t=>t<0)){return false}return true}function Ls(e,t,n){let s=si(e,n);const r=!Dl(s);if(r&&t.length===0){throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`)}if(r){t.forEach(o=>{s=si(o.shape,s)})}if(!Dl(s)){throw new Error(`Non-fully-defined elementShape: ${s}`)}return s}function si(e,t){if(typeof e==="number"){return t}if(typeof t==="number"){return e}if(e.length!==t.length){throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`)}const n=[];for(let s=0;s<e.length;++s){const r=e[s];const o=t[s];if(r>=0&&o>=0&&r!==o){throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`)}n[s]=r>=0?r:o}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a3{constructor(t,n,s,r,o,i,a){this.name=t;this.dtype=n;this.maxSize=s;this.elementShape=r;this.identicalElementShapes=o;this.dynamicSize=i;this.clearAfterRead=a;this.tensors=[];this.closed_=false;this.idTensor=ht(0);bn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(n=>{if(t==null||!t.has(n.tensor.id)){n.tensor.dispose()}});this.tensors=[];this.closed_=true;this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_){throw new Error(`TensorArray ${this.name} has already been closed.`)}if(t<0||t>=this.size()){throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`)}const n=this.tensors[t];if(n.cleared){throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`)}if(this.clearAfterRead){n.cleared=true}n.read=true;return n.tensor}readMany(t){return t.map(n=>this.read(n))}write(t,n){if(this.closed_){throw new Error(`TensorArray ${this.name} has already been closed.`)}if(t<0||!this.dynamicSize&&t>=this.maxSize){throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`)}const s=this.tensors[t]||{};if(n.dtype!==this.dtype){throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`)}if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)){this.elementShape=n.shape}we(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`);if(s.read){throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`)}if(s.written){throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`)}s.tensor=n;bn(n);s.written=true;this.tensors[t]=s}writeMany(t,n){if(t.length!==n.length){throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${n.length}.`)}t.forEach((s,r)=>this.write(s,n[r]))}gather(t,n){if(!!n&&n!==this.dtype){throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`)}if(!t){t=[];for(let r=0;r<this.size();r++){t.push(r)}}else{t=t.slice(0,this.size())}if(t.length===0){return Re([],[0].concat(this.elementShape))}const s=this.readMany(t);we(this.elementShape,s[0].shape,"TensorArray shape mismatch: ");return cn(s,0)}concat(t){if(!!t&&t!==this.dtype){throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`)}if(this.size()===0){return Re([],[0].concat(this.elementShape))}const n=[];for(let r=0;r<this.size();r++){n.push(r)}const s=this.readMany(n);we(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`);return ne(s,0)}scatter(t,n){if(n.dtype!==this.dtype){throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`)}if(t.length!==n.shape[0]){throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`)}const s=Math.max(...t);if(!this.dynamicSize&&s>=this.maxSize){throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`)}this.writeMany(t,Qn(n,0))}split(t,n){if(n.dtype!==this.dtype){throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`)}let s=0;const r=t.map(l=>{s+=l;return s});if(s!==n.shape[0]){throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`)}if(!this.dynamicSize&&t.length!==this.maxSize){throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`)}const o=s===0?0:n.size/s;const i=[];Ee(()=>{n=C(n,[1,s,o]);for(let l=0;l<t.length;++l){const c=l===0?0:r[l-1];const u=[0,c,0];const f=[1,t[l],o];i[l]=C(wt(n,u,f),this.elementShape)}return i});const a=[];for(let l=0;l<t.length;l++){a[l]=l}this.writeMany(a,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qn{constructor(t,n,s,r=-1){this.tensors=t;this.elementShape=n;this.elementDtype=s;if(t!=null){t.forEach(o=>{if(s!==o.dtype){throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`)}we(n,o.shape,"TensorList shape mismatch: ");bn(o)})}this.idTensor=ht(0);this.maxNumElements=r;bn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new qn([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(n=>{if(t==null||!t.has(n.id)){n.dispose()}});this.tensors.length=0;this.idTensor.dispose()}size(){return this.tensors.length}stack(t,n,s=-1){if(n!==this.elementDtype){throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`)}if(s!==-1&&this.tensors.length!==s){throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`)}we(t,this.elementShape,"TensorList shape mismatch: ");const r=Ls(this.elementShape,this.tensors,t);return Ee(()=>{const o=this.tensors.map(i=>C(i,r));return cn(o,0)})}popBack(t,n){if(n!==this.elementDtype){throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`)}if(this.size()===0){throw new Error("Trying to pop from an empty list.")}const s=Ls(this.elementShape,this.tensors,t);const r=this.tensors.pop();r.kept=false;we(r.shape,t,"TensorList shape mismatch: ");return C(r,s)}pushBack(t){if(t.dtype!==this.elementDtype){throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`)}we(t.shape,this.elementShape,"TensorList shape mismatch: ");if(this.maxNumElements===this.size()){throw new Error(`Trying to push element into a full list.`)}bn(t);this.tensors.push(t)}resize(t){if(t<0){throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`)}if(this.maxNumElements!==-1&&t>this.maxNumElements){throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`)}const n=new qn([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=t;for(let s=0;s<Math.min(this.tensors.length,t);++s){n.tensors[s]=this.tensors[s]}return n}getItem(t,n,s){if(s!==this.elementDtype){throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`)}if(t<0||t>this.tensors.length){throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`)}if(this.tensors[t]==null){throw new Error(`element at index ${t} is null.`)}we(this.tensors[t].shape,n,"TensorList shape mismatch: ");const r=Ls(this.elementShape,this.tensors,n);return C(this.tensors[t],r)}setItem(t,n){if(n.dtype!==this.elementDtype){throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`)}if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements){throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`)}we(this.elementShape,n.shape,"TensorList shape mismatch: ");bn(n);if(this.tensors[t]!=null){this.tensors[t].kept=false}this.tensors[t]=n}gather(t,n,s){if(n!==this.elementDtype){throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`)}we(this.elementShape,s,"TensorList shape mismatch: ");t=t.slice(0,this.size());const r=Ls(this.elementShape,this.tensors,s);if(t.length===0){return Re([],[0].concat(r))}return Ee(()=>{const o=t.map(i=>C(this.tensors[i],r));return cn(o,0)})}concat(t,n){if(!!t&&t!==this.elementDtype){throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`)}we(this.elementShape,n,"TensorList shape mismatch: ");const s=Ls(this.elementShape,this.tensors,n);if(this.size()===0){return Re([],[0].concat(s))}return Ee(()=>{const r=this.tensors.map(o=>C(o,s));return ne(r,0)})}}function l3(e,t,n){const s=e.dtype;if(e.shape.length<1){throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`)}if(e.dtype!==n){throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`)}const r=e.shape.slice(1);we(r,t,"TensorList shape mismatch: ");const o=Qn(e);return new qn(o,t,s)}function c3(e,t,n,s){return new qn([],e,t,s)}function u3(e,t,n,s){if(t.length!==e.shape[0]){throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`)}const r=Math.max(...t);if(s!=null&&s!==-1&&r>=s){throw new Error(`Max index must be < array size (${r}  vs. ${s})`)}const o=new qn([],n,e.dtype,s);const i=Qn(e,0);t.forEach((a,l)=>{o.setItem(a,i[l])});return o}function f3(e,t,n){let s=0;const r=t.map(u=>{s+=u;return s});if(s!==e.shape[0]){throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`)}const o=e.shape.slice(1);const i=si(o,n);const a=s===0?0:e.size/s;const l=Ee(()=>{const u=[];e=C(e,[1,s,a]);for(let f=0;f<t.length;++f){const h=f===0?0:r[f-1];const p=[0,h,0];const d=[1,t[f],a];u[f]=C(wt(e,p,d),i)}e.dispose();return u});const c=new qn([],n,e.dtype,t.length);for(let u=0;u<l.length;u++){c.setItem(u,l[u])}return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h3=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const s=y("thenBranch",e,t,n);const r=y("elseBranch",e,t,n);const o=y("cond",e,t,n);const i=y("args",e,t,n);const a=await o.data();if(a[0]){return n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}else{return n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}}case"While":case"StatelessWhile":{const s=y("body",e,t,n);const r=y("cond",e,t,n);const o=y("args",e,t,n);const i=await n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap);const a=o.map(u=>u.id);let l=await i[0].data();i.forEach(u=>{if(!u.kept&&a.indexOf(u.id)===-1){u.dispose()}});let c=o;while(l[0]){const u=c;c=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const f=c.map(p=>p.id);u.forEach(p=>{if(!p.kept&&a.indexOf(p.id)===-1&&f.indexOf(p.id)===-1){p.dispose()}});const h=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);l=await h[0].data();h.forEach(p=>{if(!p.kept&&a.indexOf(p.id)===-1&&f.indexOf(p.id)===-1){p.dispose()}})}return c}case"LoopCond":{const s=y("pred",e,t,n);return[sn(s)]}case"Switch":{const s=y("pred",e,t,n);let r=y("data",e,t,n);if(!r.kept){r=sn(r)}return(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=e.inputNames.find(r=>te(r,t,n)!==void 0);if(s){const r=te(s,t,n);return[sn(r)]}return void 0}case"Enter":{const s=y("frameName",e,t,n);const r=y("tensor",e,t,n);n.enterFrame(s);return[sn(r)]}case"Exit":{const s=y("tensor",e,t,n);n.exitFrame();return[sn(s)]}case"NextIteration":{const s=y("tensor",e,t,n);n.nextIteration();return[sn(s)]}case"TensorArrayV3":{const s=y("size",e,t,n);const r=y("dtype",e,t,n);const o=y("elementShape",e,t,n);const i=y("dynamicSize",e,t,n);const a=y("clearAfterRead",e,t,n);const l=y("identicalElementShapes",e,t,n);const c=y("name",e,t,n);const u=new a3(c,r,s,o,l,i,a);n.addTensorArray(u);return[u.idTensor,ht(1)]}case"TensorArrayWriteV3":{const s=y("tensorArrayId",e,t,n);const r=y("index",e,t,n);const o=y("tensor",e,t,n);const i=n.getTensorArray(s.id);i.write(r,o);return[i.idTensor]}case"TensorArrayReadV3":{const s=y("tensorArrayId",e,t,n);const r=y("index",e,t,n);const o=n.getTensorArray(s.id);return[o.read(r)]}case"TensorArrayGatherV3":{const s=y("tensorArrayId",e,t,n);const r=y("indices",e,t,n);const o=y("dtype",e,t,n);const i=n.getTensorArray(s.id);return[i.gather(r,o)]}case"TensorArrayScatterV3":{const s=y("tensorArrayId",e,t,n);const r=y("indices",e,t,n);const o=y("tensor",e,t,n);const i=n.getTensorArray(s.id);i.scatter(r,o);return[i.idTensor]}case"TensorArrayConcatV3":{const s=y("tensorArrayId",e,t,n);const r=n.getTensorArray(s.id);const o=y("dtype",e,t,n);return[r.concat(o)]}case"TensorArraySplitV3":{const s=y("tensorArrayId",e,t,n);const r=y("tensor",e,t,n);const o=y("lengths",e,t,n);const i=n.getTensorArray(s.id);i.split(o,r);return[i.idTensor]}case"TensorArraySizeV3":{const s=y("tensorArrayId",e,t,n);const r=n.getTensorArray(s.id);return[ht(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=y("tensorArrayId",e,t,n);const r=n.getTensorArray(s.id);r.clearAndClose();return[r.idTensor]}case"TensorListSetItem":{const s=y("tensorListId",e,t,n);const r=y("index",e,t,n);const o=y("tensor",e,t,n);const i=n.getTensorList(s.id);i.setItem(r,o);return[i.idTensor]}case"TensorListGetItem":{const s=y("tensorListId",e,t,n);const r=y("index",e,t,n);const o=y("elementShape",e,t,n);const i=y("elementDType",e,t,n);const a=n.getTensorList(s.id);return[a.getItem(r,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=y("indices",e,t,n);const r=y("tensor",e,t,n);const o=y("elementShape",e,t,n);const i=y("numElements",e,t,n);const a=u3(r,s,o,i);n.addTensorList(a);return[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=y("elementShape",e,t,n);const r=y("elementDType",e,t,n);let o;if(e.op==="TensorListReserve"){o="numElements"}else{o="maxNumElements"}const i=y(o,e,t,n);const a=e.op==="TensorListReserve"?-1:i;const l=c3(s,r,i,a);n.addTensorList(l);return[l.idTensor]}case"TensorListGather":{const s=y("tensorListId",e,t,n);const r=y("indices",e,t,n);const o=y("elementShape",e,t,n);const i=y("elementDType",e,t,n);const a=n.getTensorList(s.id);return[a.gather(r,i,o)]}case"TensorListStack":{const s=y("tensorListId",e,t,n);const r=y("elementShape",e,t,n);const o=y("elementDType",e,t,n);const i=y("numElements",e,t,n);const a=n.getTensorList(s.id);return[a.stack(r,o,i)]}case"TensorListFromTensor":{const s=y("tensor",e,t,n);const r=y("elementShape",e,t,n);const o=y("elementDType",e,t,n);const i=l3(s,r,o);n.addTensorList(i);return[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=y("tensorListId",e,t,n);const r=n.getTensorList(s.id);const o=y("dtype",e,t,n);const i=y("elementShape",e,t,n);return[r.concat(o,i)]}case"TensorListPushBack":{const s=y("tensorListId",e,t,n);const r=y("tensor",e,t,n);const o=n.getTensorList(s.id);o.pushBack(r);return[o.idTensor]}case"TensorListPopBack":{const s=y("tensorListId",e,t,n);const r=y("elementShape",e,t,n);const o=y("elementDType",e,t,n);const i=n.getTensorList(s.id);return[i.popBack(r,o)]}case"TensorListSplit":{const s=y("tensor",e,t,n);const r=y("elementShape",e,t,n);const o=y("lengths",e,t,n);const i=f3(s,o,r);n.addTensorList(i);return[i.idTensor]}case"TensorListLength":{const s=y("tensorListId",e,t,n);const r=n.getTensorList(s.id);return[ht(r.size(),"int32")]}case"TensorListResize":{const s=y("tensorListId",e,t,n);const r=y("size",e,t,n);const o=n.getTensorList(s.id);const i=o.resize(r);n.addTensorList(i);return[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rl(e,t,n){const[s,r]=y("fusedOps",e,t,n);const o=s==="biasadd";const i=!o;const a=r==="prelu";const l=s==="fusedbatchnorm";const c=y("numArgs",e,t,n);if(o){if(a&&c!==2){throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.")}if(!a&&o&&c!==1){throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}}if(l){throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported")}const u=y("strides",e,t,n);const f=mr(e,t,n);const h=y("dataFormat",e,t,n).toUpperCase();const p=y("dilations",e,t,n);let[d,g]=y("args",e,t,n);if(i){g=d;d=void 0}const m=y("leakyreluAlpha",e,t,n);return{stride:u,pad:f,dataFormat:h,dilations:p,biasArg:d,preluArg:g,activationFunc:r,leakyreluAlpha:m}}const p3=(e,t,n,s=Zt)=>{switch(e.op){case"Conv1D":{const r=y("stride",e,t,n);const o=y("pad",e,t,n);const i=y("dataFormat",e,t,n).toUpperCase();const a=y("dilation",e,t,n);return[s.conv1d(y("x",e,t,n),y("filter",e,t,n),r,o,i,a)]}case"Conv2D":{const r=y("strides",e,t,n);const o=mr(e,t,n);const i=y("dataFormat",e,t,n).toUpperCase();const a=y("dilations",e,t,n);return[s.conv2d(y("x",e,t,n),y("filter",e,t,n),[r[1],r[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:f}=Rl(e,t,n);return[s.fused.conv2d({x:y("x",e,t,n),filter:y("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:f})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:f}=Rl(e,t,n);return[s.fused.depthwiseConv2d({x:y("x",e,t,n),filter:y("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:f})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=y("outputShape",e,t,n);const o=y("strides",e,t,n);const i=mr(e,t,n);return[s.conv2dTranspose(y("x",e,t,n),y("filter",e,t,n),r,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=y("strides",e,t,n);const o=mr(e,t,n);const i=y("dilations",e,t,n);const a=y("dataFormat",e,t,n).toUpperCase();return[s.depthwiseConv2d(y("input",e,t,n),y("filter",e,t,n),[r[1],r[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const r=y("strides",e,t,n);const o=y("pad",e,t,n);const i=y("dataFormat",e,t,n).toUpperCase();const a=y("dilations",e,t,n);return[s.conv3d(y("x",e,t,n),y("filter",e,t,n),[r[1],r[2],r[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const r=y("strides",e,t,n);const o=y("pad",e,t,n);const i=y("kernelSize",e,t,n);return[s.avgPool(y("x",e,t,n),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=y("strides",e,t,n);const o=y("pad",e,t,n);const i=y("kernelSize",e,t,n);return[s.maxPool(y("x",e,t,n),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=y("strides",e,t,n);const o=y("pad",e,t,n);const i=y("kernelSize",e,t,n);const a=y("includeBatchInIndex",e,t,n);const{result:l,indexes:c}=s.maxPoolWithArgmax(y("x",e,t,n),[i[1],i[2]],[r[1],r[2]],o,a);return[l,c]}case"AvgPool3D":{const r=y("strides",e,t,n);const o=y("pad",e,t,n);const i=y("kernelSize",e,t,n);return[s.avgPool3d(y("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=y("strides",e,t,n);const o=y("pad",e,t,n);const i=y("kernelSize",e,t,n);return[s.maxPool3d(y("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=y("strides",e,t,n);const o=y("pad",e,t,n);const i=y("dilations",e,t,n);const a=r[1];const l=r[2];const c=i[1];const u=i[2];return[s.dilation2d(y("x",e,t,n),y("filter",e,t,n),[a,l],o,[c,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d3=(e,t,n,s=Zt)=>{switch(e.op){case"Fill":{const r=y("shape",e,t,n);const o=y("dtype",e,t,n);const i=y("value",e,t,n);return[s.fill(r,i,o)]}case"LinSpace":{const r=y("start",e,t,n);const o=y("stop",e,t,n);const i=y("num",e,t,n);return[s.linspace(r,o,i)]}case"Multinomial":{const r=y("logits",e,t,n);const o=y("numSamples",e,t,n);const i=y("seed",e,t,n);return[s.multinomial(r,o,i)]}case"OneHot":{const r=y("indices",e,t,n);const o=y("depth",e,t,n);const i=y("onValue",e,t,n);const a=y("offValue",e,t,n);const l=y("dtype",e,t,n);return[s.oneHot(r,o,i,a,l)]}case"Ones":{return[s.ones(y("shape",e,t,n),y("dtype",e,t,n))]}case"OnesLike":{return[s.onesLike(y("x",e,t,n))]}case"RandomStandardNormal":{return[s.randomStandardNormal(y("shape",e,t,n),y("dtype",e,t,n),y("seed",e,t,n))]}case"RandomUniform":{return[s.randomUniform(y("shape",e,t,n),y("minval",e,t,n),y("maxval",e,t,n),y("dtype",e,t,n))]}case"Range":{const r=y("start",e,t,n);const o=y("stop",e,t,n);const i=y("step",e,t,n);return[s.range(r,o,i,y("dtype",e,t,n))]}case"TruncatedNormal":{const r=y("shape",e,t,n);const o=y("mean",e,t,n);const i=y("stdDev",e,t,n);const a=y("seed",e,t,n);return[s.truncatedNormal(r,o,i,y("dtype",e,t,n),a)]}case"Zeros":{return[s.zeros(y("shape",e,t,n),y("dtype",e,t,n))]}case"ZerosLike":{return[s.zerosLike(y("x",e,t,n))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Io(e,t,n){const s=y("boxes",e,t,n);const r=y("scores",e,t,n);const o=y("maxOutputSize",e,t,n);const i=y("iouThreshold",e,t,n);const a=y("scoreThreshold",e,t,n);const l=y("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:a,softNmsSigma:l}}const m3=async(e,t,n,s,r=Zt)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:c,softNmsSigma:u}=Io(e,t,n);const f=await r.image.nonMaxSuppressionWithScoreAsync(o,i,a,l,c,u);return[f.selectedIndices,f.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:c}=Io(e,t,n);const u=y("padToMaxOutputSize",e,t,n);const f=await r.image.nonMaxSuppressionPaddedAsync(o,i,a,l,c,u);return[f.selectedIndices,f.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:c}=Io(e,t,n);return[await r.image.nonMaxSuppressionAsync(o,i,a,l,c)]}case"Where":{const o=r.cast(y("condition",e,t,n),"bool");const i=[await r.whereAsync(o)];o.dispose();return i}case"ListDiff":{return r.setdiff1dAsync(y("x",e,t,n),y("y",e,t,n))}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g3=(e,t,n,s=Zt)=>{switch(e.op){case"LowerBound":{const r=y("sortedSequence",e,t,n);const o=y("values",e,t,n);return[s.lowerBound(r,o)]}case"TopKV2":{const r=y("x",e,t,n);const o=y("k",e,t,n);const i=y("sorted",e,t,n);const a=s.topk(r,o,i);return[a.values,a.indices]}case"UpperBound":{const r=y("sortedSequence",e,t,n);const o=y("values",e,t,n);return[s.upperBound(r,o)]}case"Unique":{const r=y("x",e,t,n);const o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=y("x",e,t,n);const o=y("axis",e,t,n);const i=s.unique(r,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y3=(e,t,n,s=Zt)=>{switch(e.op){case"Const":{return t[e.name]}case"PlaceholderWithDefault":const r=y("default",e,t,n);return[te(e.name,t,n)||r];case"Placeholder":return[te(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const u=y("x",e,t,n);return[sn(u)]}case"IdentityN":return y("x",e,t,n).map(u=>sn(u));case"Snapshot":const o=y("x",e,t,n);return[sn(o)];case"Shape":return[s.tensor1d(y("x",e,t,n).shape,"int32")];case"ShapeN":return y("x",e,t,n).map(u=>s.tensor1d(u.shape));case"Size":return[s.scalar(y("x",e,t,n).size,"int32")];case"Rank":return[s.scalar(y("x",e,t,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=y("x",e,t,n);const a=y("data",e,t,n);const l=y("message",e,t,n);const c=y("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance.");console.log(l);for(let u=0;u<a.length;u++){console.log(Array.prototype.slice.call(a[u].dataSync()).slice(0,c))}return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b3{constructor(t,n){this.keyDType=t;this.valueDType=n;this.handle=ht(0);this.tensorMap=new Map;bn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose());this.tensorMap.clear();this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ht(this.size(),"int32")}async import(t,n){this.checkKeyAndValueTensor(t,n);const s=await t.data();this.tensorMap.forEach(r=>r.dispose());this.tensorMap.clear();return Ee(()=>{const r=Qn(n);const o=s.length;const i=r.length;S(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let a=0;a<o;a++){const l=s[a];const c=r[a];bn(c);this.tensorMap.set(l,c)}return this.handle})}async find(t,n){this.checkKeyAndValueTensor(t,n);const s=await t.data();return Ee(()=>{const r=[];for(let o=0;o<s.length;o++){const i=s[o];const a=this.findWithDefault(i,n);r.push(a)}return cn(r)})}findWithDefault(t,n){const s=this.tensorMap.get(t);return s!=null?s:n}checkKeyAndValueTensor(t,n){if(t.dtype!==this.keyDType){throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`)}if(n.dtype!==this.valueDType){throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _3=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=y("keyDType",e,t,n);const o=y("valueDType",e,t,n);const i=new b3(r,o);s.addHashTable(e.name,i);return[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=y("tableHandle",e,t,n,s);const o=y("keys",e,t,n);const i=y("values",e,t,n);const a=s.getHashTableById(r.id);return[await a.import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=y("tableHandle",e,t,n,s);const o=y("keys",e,t,n);const i=y("defaultValue",e,t,n);const a=s.getHashTableById(r.id);return[await a.find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=y("tableHandle",e,t,n,s);const o=s.getHashTableById(r.id);return[o.tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w3=(e,t,n,s=Zt)=>{switch(e.op){case"ResizeBilinear":{const r=y("images",e,t,n);const o=y("size",e,t,n);const i=y("alignCorners",e,t,n);const a=y("halfPixelCenters",e,t,n);return[s.image.resizeBilinear(r,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const r=y("images",e,t,n);const o=y("size",e,t,n);const i=y("alignCorners",e,t,n);const a=y("halfPixelCenters",e,t,n);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],i,a)]}case"CropAndResize":{const r=y("image",e,t,n);const o=y("boxes",e,t,n);const i=y("boxInd",e,t,n);const a=y("cropSize",e,t,n);const l=y("method",e,t,n);const c=y("extrapolationValue",e,t,n);return[s.image.cropAndResize(r,o,i,a,l,c)]}case"ImageProjectiveTransformV3":{const r=y("images",e,t,n);const o=y("transforms",e,t,n);const i=y("outputShape",e,t,n);const a=y("fillValue",e,t,n);const l=y("interpolation",e,t,n);const c=y("fillMode",e,t,n);return[s.image.transform(r,o,l.toLowerCase(),c.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N3=(e,t,n,s=Zt)=>{switch(e.op){case"Equal":{return[s.equal(y("a",e,t,n),y("b",e,t,n))]}case"NotEqual":{return[s.notEqual(y("a",e,t,n),y("b",e,t,n))]}case"Greater":{return[s.greater(y("a",e,t,n),y("b",e,t,n))]}case"GreaterEqual":{return[s.greaterEqual(y("a",e,t,n),y("b",e,t,n))]}case"Less":{return[s.less(y("a",e,t,n),y("b",e,t,n))]}case"LessEqual":{return[s.lessEqual(y("a",e,t,n),y("b",e,t,n))]}case"LogicalAnd":{return[s.logicalAnd(y("a",e,t,n),y("b",e,t,n))]}case"LogicalNot":{return[s.logicalNot(y("a",e,t,n))]}case"LogicalOr":{return[s.logicalOr(y("a",e,t,n),y("b",e,t,n))]}case"Select":case"SelectV2":{return[s.where(y("condition",e,t,n),y("a",e,t,n),y("b",e,t,n))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I3=(e,t,n,s=Zt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(y("a",e,t,n),y("b",e,t,n),y("transposeA",e,t,n),y("transposeB",e,t,n))];case"Einsum":return[s.einsum(y("equation",e,t,n),...y("tensors",e,t,n))];case"Transpose":return[s.transpose(y("x",e,t,n),y("perm",e,t,n))];case"_FusedMatMul":const[r,o]=y("fusedOps",e,t,n);const i=r==="biasadd";const a=o==="prelu";const l=y("numArgs",e,t,n);const c=y("leakyreluAlpha",e,t,n);if(i){if(a&&l!==2){throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.")}if(!a&&l!==1){throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}}const[u,f]=y("args",e,t,n);return[s.fused.matMul({a:y("a",e,t,n),b:y("b",e,t,n),transposeA:y("transposeA",e,t,n),transposeB:y("transposeB",e,t,n),bias:u,activation:o,preluActivationWeights:f,leakyreluAlpha:c})];default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k3=(e,t,n,s=Zt)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm(y("x",e,t,n),y("axis",e,t,n),y("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":{return[s.batchNorm(y("x",e,t,n),y("mean",e,t,n),y("variance",e,t,n),y("offset",e,t,n),y("scale",e,t,n),y("epsilon",e,t,n))]}case"FusedBatchNormV3":{return[s.batchNorm(y("x",e,t,n),y("mean",e,t,n),y("variance",e,t,n),y("offset",e,t,n),y("scale",e,t,n),y("epsilon",e,t,n))]}case"LRN":{return[s.localResponseNormalization(y("x",e,t,n),y("radius",e,t,n),y("bias",e,t,n),y("alpha",e,t,n),y("beta",e,t,n))]}case"Softmax":{return[s.softmax(y("x",e,t,n))]}case"LogSoftmax":{return[s.logSoftmax(y("x",e,t,n))]}case"SparseToDense":{return[s.sparseToDense(y("sparseIndices",e,t,n),y("outputShape",e,t,n),y("sparseValues",e,t,n),y("defaultValue",e,t,n))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T3=(e,t,n,s=Zt)=>{switch(e.op){case"Max":{const a=y("axis",e,t,n);const l=y("keepDims",e,t,n);return[s.max(y("x",e,t,n),a,l)]}case"Mean":{const a=y("axis",e,t,n);const l=y("keepDims",e,t,n);return[s.mean(y("x",e,t,n),a,l)]}case"Min":{const a=y("axis",e,t,n);const l=y("keepDims",e,t,n);return[s.min(y("x",e,t,n),a,l)]}case"Sum":{const a=y("axis",e,t,n);const l=y("keepDims",e,t,n);return[s.sum(y("x",e,t,n),a,l)]}case"All":{const a=y("axis",e,t,n);const l=y("keepDims",e,t,n);return[s.all(y("x",e,t,n),a,l)]}case"Any":{const a=y("axis",e,t,n);const l=y("keepDims",e,t,n);return[s.any(y("x",e,t,n),a,l)]}case"ArgMax":{const a=y("axis",e,t,n);return[s.argMax(y("x",e,t,n),a)]}case"ArgMin":{const a=y("axis",e,t,n);return[s.argMin(y("x",e,t,n),a)]}case"Prod":{const a=y("axis",e,t,n);const l=y("keepDims",e,t,n);return[s.prod(y("x",e,t,n),a,l)]}case"Cumprod":{const a=y("axis",e,t,n);const l=y("exclusive",e,t,n);const c=y("reverse",e,t,n);return[s.cumprod(y("x",e,t,n),a,l,c)]}case"Cumsum":{const a=y("axis",e,t,n);const l=y("exclusive",e,t,n);const c=y("reverse",e,t,n);return[s.cumsum(y("x",e,t,n),a,l,c)]}case"Bincount":const r=y("x",e,t,n);const o=y("weights",e,t,n);const i=y("size",e,t,n);return[s.bincount(r,o,i)];case"DenseBincount":{const a=y("x",e,t,n);const l=y("weights",e,t,n);const c=y("size",e,t,n);const u=y("binaryOutput",e,t,n);return[s.denseBincount(a,l,c,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S3=(e,t,n,s=Zt)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=y("n",e,t,n);const o=y("axis",e,t,n);let i=y("tensors",e,t,n);i=i.slice(0,r);return[s.concat(i,o)]}case"Gather":{const r=y("x",e,t,n);const o=y("indices",e,t,n);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=y("axis",e,t,n);const o=y("batchDims",e,t,n);const i=y("x",e,t,n);const a=y("indices",e,t,n);return[s.gather(i,s.cast(a,"int32"),r,o)]}case"Reverse":{const r=y("dims",e,t,n);const o=[];for(let a=0;a<r.length;a++){if(r[a]){o.push(a)}}const i=y("x",e,t,n);return[s.reverse(i,o)]}case"ReverseV2":{const r=y("axis",e,t,n);const o=y("x",e,t,n);return[s.reverse(o,r)]}case"Slice":{const r=y("begin",e,t,n);const o=y("size",e,t,n);return[s.slice(y("x",e,t,n),r,o)]}case"StridedSlice":{const r=y("begin",e,t,n);const o=y("end",e,t,n);const i=y("strides",e,t,n);const a=y("beginMask",e,t,n);const l=y("endMask",e,t,n);const c=y("ellipsisMask",e,t,n);const u=y("newAxisMask",e,t,n);const f=y("shrinkAxisMask",e,t,n);const h=y("x",e,t,n);return[s.stridedSlice(h,r,o,i,a,l,c,u,f)]}case"Pack":{return Ee(()=>{const r=y("axis",e,t,n);const o=y("tensors",e,t,n);const i=o[0].shape;const a=s.squeeze(o[0]).shape;const l=o.map(c=>{const u=Oe(c.shape,i);if(!u&&!Oe(s.squeeze(c).shape,a)){throw new Error("the input tensors shape does not match")}return u?c:s.reshape(c,i)});return[s.stack(l,r)]})}case"Unpack":{const r=y("axis",e,t,n);const o=y("tensor",e,t,n);return s.unstack(o,r)}case"Tile":{const r=y("reps",e,t,n);return[s.tile(y("x",e,t,n),r)]}case"Split":case"SplitV":{const r=y("axis",e,t,n);const o=y("numOrSizeSplits",e,t,n);const i=y("x",e,t,n);return s.split(i,o,r)}case"ScatterNd":{const r=y("indices",e,t,n);const o=y("values",e,t,n);const i=y("shape",e,t,n);return[s.scatterND(r,o,i)]}case"GatherNd":{const r=y("x",e,t,n);const o=y("indices",e,t,n);return[s.gatherND(r,o)]}case"SparseToDense":{const r=y("sparseIndices",e,t,n);const o=y("outputShape",e,t,n);const i=y("sparseValues",e,t,n);const a=y("defaultValue",e,t,n);return[s.sparseToDense(r,i,o,i.dtype===a.dtype?a:s.cast(a,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E3=(e,t,n,s=Zt)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(y("indices",e,t,n),y("values",e,t,n),y("denseShape",e,t,n),y("defaultValue",e,t,n));return[r,o,i,a]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(y("inputIndices",e,t,n),y("inputShape",e,t,n),y("newShape",e,t,n));return[r,o]}case"SparseSegmentMean":{const r=s.sparse.sparseSegmentMean(y("data",e,t,n),y("indices",e,t,n),y("segmentIds",e,t,n));return[r]}case"SparseSegmentSum":{const r=s.sparse.sparseSegmentSum(y("data",e,t,n),y("indices",e,t,n),y("segmentIds",e,t,n));return[r]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v3=(e,t,n,s=Zt)=>{switch(e.op){case"FFT":{return[s.fft(y("x",e,t,n))]}case"IFFT":{return[s.ifft(y("x",e,t,n))]}case"RFFT":{return[s.rfft(y("x",e,t,n))]}case"IRFFT":{return[s.irfft(y("x",e,t,n))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x3=(e,t,n,s=Zt)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(y("data",e,t,n),y("dataSplits",e,t,n),y("separator",e,t,n),y("nGramWidths",e,t,n),y("leftPad",e,t,n),y("rightPad",e,t,n),y("padWidth",e,t,n),y("preserveShortSequences",e,t,n));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:i}=s.string.stringSplit(y("input",e,t,n),y("delimiter",e,t,n),y("skipEmpty",e,t,n));return[r,o,i]}case"StringToHashBucketFast":{const r=s.string.stringToHashBucketFast(y("input",e,t,n),y("numBuckets",e,t,n));return[r]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $3=(e,t,n,s=Zt)=>{switch(e.op){case"Cast":{return[s.cast(y("x",e,t,n),y("dtype",e,t,n))]}case"ExpandDims":{const r=y("axis",e,t,n);return[s.expandDims(y("x",e,t,n),r)]}case"Squeeze":{const r=y("axis",e,t,n);return[s.squeeze(y("x",e,t,n),r)]}case"Reshape":{return[s.reshape(y("x",e,t,n),y("shape",e,t,n))]}case"MirrorPad":{return[s.mirrorPad(y("x",e,t,n),y("padding",e,t,n),y("mode",e,t,n))]}case"PadV2":case"Pad":{return[s.pad(y("x",e,t,n),y("padding",e,t,n),y("constantValue",e,t,n))]}case"SpaceToBatchND":{const r=y("blockShape",e,t,n);const o=y("paddings",e,t,n);return[s.spaceToBatchND(y("x",e,t,n),r,o)]}case"BatchToSpaceND":{const r=y("blockShape",e,t,n);const o=y("crops",e,t,n);return[s.batchToSpaceND(y("x",e,t,n),r,o)]}case"DepthToSpace":{const r=y("blockSize",e,t,n);const o=y("dataFormat",e,t,n).toUpperCase();return[s.depthToSpace(y("x",e,t,n),r,o)]}case"BroadcastTo":{return[s.broadcastTo(y("x",e,t,n),y("shape",e,t,n))]}case"BroadcastArgs":{return[s.broadcastArgs(y("s0",e,t,n),y("s1",e,t,n))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ol(e,t,n,s,r=Ee){const o=((i,a,l)=>{switch(i.category){case"arithmetic":return r(()=>o3(i,a,l));case"basic_math":return r(()=>i3(i,a,l));case"control":return h3(i,a,l);case"convolution":return r(()=>p3(i,a,l));case"creation":return r(()=>d3(i,a,l));case"dynamic":return m3(i,a,l);case"evaluation":return r(()=>g3(i,a,l));case"image":return r(()=>w3(i,a,l));case"graph":return r(()=>y3(i,a,l));case"logical":return r(()=>N3(i,a,l));case"matrices":return r(()=>I3(i,a,l));case"normalization":return r(()=>k3(i,a,l));case"reduction":return r(()=>T3(i,a,l));case"slice_join":return r(()=>S3(i,a,l));case"sparse":return r(()=>E3(i,a,l));case"spectral":return r(()=>v3(i,a,l));case"string":return r(()=>x3(i,a,l));case"transformation":return r(()=>$3(i,a,l));case"hash_table":return _3(i,a,l,s);case"custom":const c=Af(i.op);if(c&&c.customExecutor){return c.customExecutor(new r3(i,a,l))}else{throw TypeError(`Custom op ${i.op} is not registered.`)}default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);if(ps(o)){return o.then(i=>[].concat(i))}return[].concat(o)}class Ll{constructor(t={},n={},s={},r={}){this.weightMap=t;this.tensorArrayMap=n;this.tensorListMap=s;this.functionMap=r;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(t,n){return{id:t,frameName:n,iterationId:0}}set currentContext(t){if(this.contexts!==t){this.contexts=t;this.generateCurrentContextIds()}}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let n=0;n<this.contexts.length-1;n++){const s=this.contexts.slice(0,this.contexts.length-n);t.push(this.contextIdforContexts(s))}t.push("");this._currentContextIds=t}contextIdforContexts(t){return t?t.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(t){if(this.contexts){this.lastId++;this.contexts=this.contexts.slice();this.contexts.push(this.newFrame(this.lastId,t));this._currentContextIds.unshift(this.contextIdforContexts(this.contexts))}}exitFrame(){if(this.contexts&&this.contexts.length>1){this.contexts=this.contexts.slice();this.contexts.splice(-1);this.currentContextIds.shift()}else{throw new Error("Cannot exit frame, the context is empty")}}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice();this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1;t.id=this.lastId;this.contexts.splice(-1,1,t);this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else{throw new Error("Cannot increase frame iteration, the context is empty")}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const n in this.tensorArrayMap){this.tensorArrayMap[n].clearAndClose(t)}for(const n in this.tensorListMap){this.tensorListMap[n].clearAndClose(t)}}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fl(e,t,n,s){const r=new Set;const o=[];let i=null;let a=null;const l=new Set;const c=Object.keys(e).map(h=>ie(h)[0]);let u=[];if(s!=null){u=s.map(h=>ie(h.name)[0])}const f=[...t];while(f.length>0){const h=f.pop();if(Of(h)||L3(h)||F3(h)){if(i==null){i=h;a=i.children.map(p=>p.name).filter(p=>r.has(p))}}r.add(h.name);if(n[h.name]!=null){continue}if(c.indexOf(h.name)!==-1){continue}if(u.indexOf(h.name)!==-1){continue}if(h.inputs.length===0){o.push(h.name);continue}h.inputs.forEach(p=>{if(l.has(p.name)){return}l.add(p.name);f.push(p)})}return{inputs:e,outputs:t,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:a}}function A3(e,t,n){const{usedNodes:s,inputs:r}=n;const o=[];const i=Object.keys(r).map(u=>ie(u)[0]).map(u=>e.nodes[u]);const a=e.initNodes;i.forEach(u=>{if(s.has(u.name)){o.push(u)}});e.weights.forEach(u=>{if(s.has(u.name)){o.push(u)}});if(a!=null){a.forEach(u=>{if(s.has(u.name)){o.push(u)}})}const l=new Set;const c=[];while(o.length>0){const u=o.pop();l.add(u.name);if(!t[u.name]){c.push(u)}u.children.forEach(f=>{if(!l.has(f.name)&&s.has(f.name)&&f.inputs.every(h=>l.has(h.name))){o.push(f)}})}return c}const D3=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"];const R3=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];const O3=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Of(e){return D3.indexOf(e.op)>=0}function L3(e){return R3.indexOf(e.op)>=0}function F3(e){return O3.indexOf(e.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Or{constructor(t,n){this.graph=t;this.parent=n;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=false;this._outputs=t.outputs;this._inputs=t.inputs;this._initNodes=t.initNodes;this._signature=t.signature;this._functions=t.functions;if(t.functions!=null){Object.keys(t.functions).forEach(s=>{this._functionExecutorMap[s]=new Or(t.functions[s],this)})}}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const n=Object.keys(t).map(s=>t[s].map(r=>r.id));this._weightIds=[].concat(...n);this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>{return{name:t.name,shape:t.attrParams["shape"]?t.attrParams["shape"].value:void 0,dtype:t.attrParams["dtype"]?t.attrParams["dtype"].value:void 0}})}get outputs(){return this._outputs.map(t=>{return{name:t.name,shape:t.attrParams["shape"]?t.attrParams["shape"].value:void 0,dtype:t.attrParams["dtype"]?t.attrParams["dtype"].value:void 0}})}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const n=t.signatureKey||t.name;return t.defaultOutput?`${n}:${t.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((t,n)=>{t[n]=this._functions[n].signature;return t},{})}getCompilationKey(t,n){const s=t.map(o=>o.name).sort();const r=n.map(o=>o.name).sort();return s.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,n){const s=Fl(t,n,this.weightMap,this._initNodes);const{missingInputs:r,dynamicNode:o,syncInputs:i}=s;if(o!=null){throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`)}if(r.length>0){const a=n.map(c=>c.name);const l=Object.keys(t);throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${l}]. Missing the following inputs: [${r}]`)}return A3(this.graph,this.weightMap,s)}execute(t,n){t=this.mapInputs(t);const s=Object.keys(t).sort();this.checkInputs(t);this.checkInputShapeAndType(t);n=this.mapOutputs(n);this.checkOutputs(n);const r=s.map(f=>this.graph.nodes[ie(f)[0]]);const o=n.map(f=>ie(f)[0]);let i=o.map(f=>this.graph.nodes[f]);this.resetIntermediateTensors();if(i.length===0){i=this._outputs}const a=this.getCompilationKey(r,i);let l=this.compiledMap.get(a);if(l==null){l=this.compile(t,i);this.compiledMap.set(a,l)}const c={};const u={};return Ee(()=>{const f=new Ll(this.weightMap,c,u,this.functionExecutorMap);const h=Object.assign({},this.weightMap);Object.keys(t).forEach(g=>{const[m,b]=ie(g);const _=[];_[b]=t[g];h[m]=_});const p=this.getFrozenTensorIds(h);const d={};for(let g=0;g<l.length;g++){const m=l[g];if(!h[m.name]){const b=Ol(m,h,f,this._resourceManager);if(ps(b)){throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`)}h[m.name]=b;this.checkTensorForDisposal(m.name,m,h,f,p,o,d)}}if(this.parent==null){f.dispose(p)}return n.map(g=>te(g,h,f))})}getFrozenTensorIds(t){const n=[].concat.apply([],Object.keys(t).map(s=>t[s]).map(s=>s.map(r=>r.id)));return new Set(n)}checkTensorForDisposal(t,n,s,r,o,i,a){if(n.category==="control"||i.indexOf(t)!==-1){return}s[t].forEach(l=>{if(l!=null){a[l.id]=(a[l.id]||0)+n.children.length}});n.inputs.forEach(l=>{if(l.category!=="control"){const c=b9(l.name,s,r);if(c!=null){c.forEach(u=>{if(u&&!u.kept&&!o.has(u.id)){const f=a[u.id];if(f===1){if(!this.keepTensorForDebug){u.dispose()}else{const[h,p]=We(n.name,r);if(this.intermediateTensors[h]){this.intermediateTensors[h][p]=u}else{this.intermediateTensors[h]=[];this.intermediateTensors[h][p]=u}}delete a[u.id]}else if(f!=null){a[u.id]--}}})}}})}async executeAsync(t,n){return this._executeAsync(t,n)}disposeIntermediateTensors(){if(!this.intermediateTensors){return}Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(n=>n.dispose()));this.disposeTensorsMap()}disposeTensorsMap(){if(!this.tensorsMap){return}Object.keys(this.tensorsMap).forEach(t=>{const n=this.tensorsMap[t];n.forEach(s=>{if(s&&!s.kept&&!s.isDisposed&&!this.keepIds.has(s.id)){s.dispose()}})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const t in this.intermediateTensors){this.intermediateTensors[t].forEach(n=>n.dispose());delete this.intermediateTensors[t]}}async _executeAsync(t,n,s=false,r={},o={}){if(!s){t=this.mapInputs(t);this.checkInputs(t);this.checkInputShapeAndType(t);n=this.mapOutputs(n);this.checkOutputs(n)}try{this.keepTensorForDebug=lt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(u){console.warn(u.message)}this.resetIntermediateTensors();const i=new Ll(this.weightMap,r,o,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,i,n,s);const a=n.map(u=>te(u,this.tensorsMap,i));const l=a.map(u=>u.id);const c=Object.keys(t).map(u=>t[u].id);this.keepIds=new Set([...l,...c,...this.weightIds]);if(!this.keepTensorForDebug){this.disposeTensorsMap()}if(this.parent==null){i.dispose(this.keepIds)}return a}async executeFunctionAsync(t,n,s){const r=t.reduce((o,i,a)=>{o[this.inputs[a].name]=i;return o},{});return this._executeAsync(r,this.outputNodes,true,n,s)}async executeWithControlFlow(t,n,s,r){const o=Object.keys(t);const i=o.map(w=>this.graph.nodes[ie(w)[0]]);const a=s.map(w=>ie(w)[0]);let l=a.map(w=>this.graph.nodes[w]);if(l.length===0){l=this._outputs}const{usedNodes:c,missingInputs:u,dynamicNode:f,syncInputs:h}=Fl(t,l,this.weightMap,this._initNodes);const p=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>{return{node:w,contexts:n.currentContext}});const d=Object.assign({},this.weightMap);Object.keys(t).forEach(w=>{const[N,I]=ie(w);const T=[];T[I]=t[w];d[N]=T});const g={};const m=this.getFrozenTensorIds(d);const b={};while(p.length>0){const w=this.processStack(i,p,n,d,b,m,a,g,c);await Promise.all(w)}if(f==null&&!r){console.warn(`This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.`)}const _=l.filter(w=>!Of(w)&&!te(w.name,d,n)).map(w=>w.name);if(_.length>0){let w="";if(f!=null){w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`}throw new Error(`Cannot compute the outputs [${_}] from the provided inputs [${o}]. Consider providing the following inputs: [${u}]. ${w}`)}return d}processStack(t,n,s,r,o,i,a,l,c){const u=[];while(n.length>0){const f=n.pop();s.currentContext=f.contexts;let h="";if(f.node.op==="Enter"&&y("isConstant",f.node,r,s)){[h]=We(f.node.name,s)}if(r[f.node.name]==null){const p=Ol(f.node,r,s,this._resourceManager);if(!h){[h]=We(f.node.name,s)}const d=s.currentContext;if(ps(p)){u.push(p.then(g=>{r[h]=g;s.currentContext=d;this.checkTensorForDisposal(h,f.node,r,s,i,a,l);this.processChildNodes(f.node,n,s,r,o,c);return g}))}else{r[h]=p;this.checkTensorForDisposal(h,f.node,r,s,i,a,l);this.processChildNodes(f.node,n,s,r,o,c)}}else{this.processChildNodes(f.node,n,s,r,o,c)}}return u}processChildNodes(t,n,s,r,o,i){t.children.forEach(a=>{const[l]=We(a.name,s);if(o[l]||!i.has(a.name)){return}if(a.op==="Merge"){if(a.inputNames.some(c=>{return!!te(c,r,s)})){o[l]=true;n.push({contexts:s.currentContext,node:a})}}else if(a.inputNames.every(c=>{return!!te(c,r,s)})){o[l]=true;n.push({contexts:s.currentContext,node:a})}})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(n=>n.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(n=>{const s=t[n];const[r]=ie(n);const o=this.graph.nodes[r];if(o.attrParams["shape"]&&o.attrParams["shape"].value){const i=o.attrParams["shape"].value;const a=i.length===s.shape.length&&s.shape.every((l,c)=>i[c]===-1||i[c]===l);S(a,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}if(o.attrParams["dtype"]&&o.attrParams["dtype"].value){S(s.dtype===o.attrParams["dtype"].value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams["dtype"].value}, but was ${s.dtype}`)}})}mapInputs(t){const n={};for(const s in t){if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[s]!=null){const r=this._signature.inputs[s];n[r.name]=t[s]}else{n[s]=t[s]}}return n}checkInputs(t){const n=Object.keys(t).filter(s=>{const[r]=ie(s);return this.graph.nodes[r]==null});if(n.length>0){throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}}mapOutputs(t){return t.map(n=>{if(this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[n]!=null){const s=this._signature.outputs[n];return s.name}return n},{})}checkOutputs(t){t.forEach(n=>{const[s]=ie(n);if(!this.graph.nodes[s]){throw new Error(`The output '${n}' is not found in the graph`)}})}}class P3{constructor(t={},n={}){this.hashTableNameToHandle=t;this.hashTableMap=n}addHashTable(t,n){this.hashTableNameToHandle[t]=n.handle;this.hashTableMap[n.id]=n}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap){this.hashTableMap[t].clearAndClose();delete this.hashTableMap[t]}for(const t in this.hashTableNameToHandle){this.hashTableNameToHandle[t].dispose();delete this.hashTableNameToHandle[t]}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U3="?tfjs-format=file";const M3="model.json";class V3{constructor(t,n={},s=$1){this.modelUrl=t;this.loadOptions=n;this.version="n/a";this.io=s;if(n==null){this.loadOptions={}}this.resourceManager=new P3}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const t=this.modelUrl;if(t.load!=null){this.handler=t}else if(this.loadOptions.requestInit!=null){this.handler=this.io.browserHTTPRequest(t,this.loadOptions)}else{const n=this.io.getLoadHandlers(t,this.loadOptions);if(n.length===0){n.push(this.io.browserHTTPRequest(t,this.loadOptions))}else if(n.length>1){throw new Error(`Found more than one (${n.length}) load handlers for URL '${[t]}'`)}this.handler=n[0]}}load(){this.findIOHandler();if(this.handler.load==null){throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.")}const t=this.handler.load();if(ps(t)){return t.then(n=>this.loadSync(n))}return this.loadSync(t)}loadSync(t){this.artifacts=t;const n=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;if(o.signature!=null){s=o.signature}if(o.structuredOutputKeys!=null){this.structuredOutputKeys=o.structuredOutputKeys}}this.signature=s;this.version=`${n.versions.producer}.${n.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);this.executor=new Or($l.Instance.transformGraph(n,this.signature));this.executor.weightMap=this.convertTensorMapToTensorsMap(r);this.executor.resourceManager=this.resourceManager;if(t.modelInitializer!=null&&t.modelInitializer.node!=null){const o=$l.Instance.transformGraph(t.modelInitializer);this.initializer=new Or(o);this.initializer.weightMap=this.executor.weightMap;this.initializer.resourceManager=this.resourceManager;this.initializer.executeAsync({},[])}return true}async save(t,n){if(typeof t==="string"){const s=this.io.getSaveHandlers(t);if(s.length===0){throw new Error(`Cannot find any save handlers for URL '${t}'`)}else if(s.length>1){throw new Error(`Found more than one (${s.length}) save handlers for URL '${t}'`)}t=s[0]}if(t.save==null){throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.")}return t.save(this.artifacts)}predict(t,n){const s=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){const r=s instanceof Kt?[s]:s;const o={};r.forEach((i,a)=>o[this.structuredOutputKeys[a]]=i);return o}return s}normalizeInputs(t){if(!(t instanceof Kt)&&!Array.isArray(t)){return t}t=Array.isArray(t)?t:[t];if(t.length!==this.inputNodes.length){throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`)}return this.inputNodes.reduce((n,s,r)=>{n[s]=t[r];return n},{})}normalizeOutputs(t){t=t||this.outputNodes;return!Array.isArray(t)?[t]:t}execute(t,n){t=this.normalizeInputs(t);n=this.normalizeOutputs(n);const s=this.executor.execute(t,n);return s.length>1?s:s[0]}async executeAsync(t,n){t=this.normalizeInputs(t);n=this.normalizeOutputs(n);const s=await this.executor.executeAsync(t,n);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((n,s)=>{n[s]=[t[s]];return n},{})}dispose(){this.executor.dispose();if(this.initializer){this.initializer.dispose()}this.resourceManager.dispose()}}async function B3(e,t={},n=$1){if(e==null){throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model")}if(t==null){t={}}if(t.fromTFHub&&typeof e==="string"){e=C3(e)}const s=new V3(e,t,n);await s.load();return s}function C3(e){if(!e.endsWith("/")){e=e+"/"}return`${e}${M3}${U3}`}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J(e,t){if(!Array.isArray(e)){e=[e]}e.forEach(n=>{if(n!=null){S(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)}})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z3=bf;class uo extends ic{constructor(){super();this.blockSize=48;this.firstUse=true;this.data=new $h(this,Nl())}nextDataId(){return uo.nextDataId++}write(t,n,s){if(this.firstUse){this.firstUse=false;if(lt().get("IS_NODE")){xn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================")}}const r={id:this.nextDataId()};this.data.set(r,{values:t,dtype:s,refCount:1});return r}makeTensorInfo(t,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&jr(s[0])){const o=s.map(i=>Pn(i));r=this.write(o,t,n)}else{r=this.write(s,t,n)}return{dataId:r,shape:t,dtype:n}}refCount(t){if(this.data.has(t)){const n=this.data.get(t);return n.refCount}return 0}incRef(t){const n=this.data.get(t);n.refCount++}decRef(t){if(this.data.has(t)){const n=this.data.get(t);n.refCount--}}move(t,n,s,r,o){this.data.set(t,{values:n,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:n,complexTensorInfos:s}=this.data.get(t);if(n==="complex64"){const r=this.readSync(s.real.dataId);const o=this.readSync(s.imag.dataId);return _s(r,o)}return this.data.get(t).values}bufferSync(t){const n=this.readSync(t.dataId);if(t.dtype==="string"){try{const s=n.map(r=>Xs(r));return at(t.shape,t.dtype,s)}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}}return at(t.shape,t.dtype,n)}makeOutput(t,n,s){return Nl().makeTensorFromTensorInfo(this.makeTensorInfo(n,s,t),this)}disposeData(t,n=false){if(this.data.has(t)){this.data.get(t).refCount--;if(!n&&this.data.get(t).refCount>0){return false}const{complexTensorInfos:s}=this.data.get(t);if(s!=null){this.disposeData(s.real.dataId,true);this.disposeData(s.imag.dataId,true)}this.data.delete(t)}return true}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const n=ms();t();const s=ms()-n;return{kernelMs:s}}memory(){return{unreliable:true,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){J([t],"where");const n=this.readSync(t.dataId);return z3(t.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}uo.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W3(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n){t[n]=Math.abs(e[n])}return t}const H3=e=>{const{x:t}=e.inputs;const n=e.backend;J(t,"abs");let s=new Float32Array(q(t.shape));const r=n.data.get(t.dataId).values;s=W3(r);return n.makeOutput(s,t.shape,t.dtype)};const q3={kernelName:hc,backendName:"cpu",kernelFunc:H3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(e){return(t,n,s,r,o)=>{const i=Dt(t,n);const a=i.length;const l=nt(i);const c=q(i);const u=Xt(o,c);const f=t.length;const h=n.length;const p=nt(t);const d=nt(n);const g=Sr(t,i);const m=Sr(n,i);if(g.length+m.length===0){for(let b=0;b<u.length;++b){u[b]=e(s[b%s.length],r[b%r.length])}}else{for(let b=0;b<u.length;++b){const _=Es(b,a,l);const w=_.slice(-f);g.forEach(E=>w[E]=0);const N=He(w,f,p);const I=_.slice(-h);m.forEach(E=>I[E]=0);const T=He(I,h,d);u[b]=e(s[N],r[T])}}return[u,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function le(e){const{inputs:t,backend:n}=e;const{real:s,imag:r}=t;const o=n.data.get(s.dataId).values;const i=n.data.get(r.dataId).values;const a=n.makeTensorInfo(s.shape,"complex64");const l=n.data.get(a.dataId);l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",o),imag:n.makeTensorInfo(r.shape,"float32",i)};return a}const G3={kernelName:Tc,backendName:"cpu",kernelFunc:le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(e,t,n="float32"){if(n==="complex64"){const r=Lr(e,t,"float32");const o=Lr(e,t,"float32");return le({inputs:{real:r,imag:o},backend:e})}const s=Yt(q(t),n);return e.makeTensorInfo(t,n,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(e){const{inputs:t,backend:n}=e;const{x:s}=t;n.incRef(s.dataId);return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const K3={kernelName:Bi,backendName:"cpu",kernelFunc:Ge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(e){const{inputs:t,backend:n}=e;const{input:s}=t;const r=n.data.get(s.dataId).complexTensorInfos.real;const o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const j3={kernelName:Iu,backendName:"cpu",kernelFunc:Gn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(e,t,n,s){if(s==="int32"){const r=Int32Array.from(e);return[t,"int32",r]}if(s==="bool"){const r=Yn([0],n);const[o,i]=Ft((a,l)=>a!==l?1:0)(t,[],e,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function In(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64"){return Ge({inputs:{x:r},backend:n})}const u=Lr(n,r.shape,r.dtype);const f=In({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});const h=le({inputs:{real:f,imag:u},backend:n});n.disposeIntermediateTensorInfo(u);n.disposeIntermediateTensorInfo(f);return h}if(r.dtype==="complex64"){const u=Gn({inputs:{input:r},backend:n});const f=In({inputs:{x:u},backend:n,attrs:{dtype:o}});n.disposeIntermediateTensorInfo(u);return f}if(!Lh(r.dtype,o)){const u=Ge({inputs:{x:r},backend:n});return{dataId:u.dataId,shape:u.shape,dtype:o}}const i=n.data.get(r.dataId).values;const[a,l,c]=X3(i,r.shape,r.dtype,o);return n.makeTensorInfo(a,l,c)}const Y3={kernelName:Si,backendName:"cpu",kernelFunc:In};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ct(e,t,n,s){if(n==null){return({inputs:r,backend:o})=>{const{a:i,b:a}=r;const l=o;J([i,a],e);const c=l.data.get(i.dataId).values;const u=l.data.get(a.dataId).values;const f=i.dtype==="string"?Dr(c):c;const h=i.dtype==="string"?Dr(u):u;const p=s||i.dtype;const[d,g]=t(i.shape,a.shape,f,h,p);return l.makeTensorInfo(g,p,d)}}return({inputs:r,backend:o})=>{const{a:i,b:a}=r;const l=o;if(i.dtype==="complex64"||a.dtype==="complex64"){const c=In({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}});const u=l.data.get(c.dataId);const f=u.complexTensorInfos.real;const h=u.complexTensorInfos.imag;const p=l.data.get(f.dataId).values;const d=l.data.get(h.dataId).values;const g=In({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}});const m=l.data.get(g.dataId);const b=m.complexTensorInfos.real;const _=m.complexTensorInfos.imag;const w=l.data.get(b.dataId).values;const N=l.data.get(_.dataId).values;const[I,T,E]=n(i.shape,a.shape,p,d,w,N);const D=l.makeTensorInfo(E,"float32",I);const L=l.makeTensorInfo(E,"float32",T);const P=le({inputs:{real:D,imag:L},backend:l});l.disposeIntermediateTensorInfo(c);l.disposeIntermediateTensorInfo(g);l.disposeIntermediateTensorInfo(D);l.disposeIntermediateTensorInfo(L);return P}else{const c=l.data.get(i.dataId).values;const u=l.data.get(a.dataId).values;const f=s||i.dtype;const[h,p]=t(i.shape,a.shape,c,u,f);return l.makeTensorInfo(p,f,h)}}}function qa(e){return(t,n,s,r,o,i)=>{const a=Dt(t,n);const l=q(a);const c=a.length;const u=nt(a);const f=Xt("float32",l);const h=Xt("float32",l);const p=Sr(t,a);const d=Sr(n,a);const g=_s(s,r);const m=_s(o,i);const b=t.length;const _=nt(t);const w=n.length;const N=nt(n);if(p.length+d.length===0){for(let I=0;I<f.length;I++){const T=I%g.length;const E=I%m.length;const D=e(g[T*2],g[T*2+1],m[E*2],m[E*2+1]);f[I]=D.real;h[I]=D.imag}}else{for(let I=0;I<f.length;I++){const T=Es(I,c,u);const E=T.slice(-b);p.forEach(B=>E[B]=0);const D=He(E,b,_);const L=T.slice(-w);d.forEach(B=>L[B]=0);const P=He(L,w,N);const M=e(g[D*2],g[D*2+1],m[P*2],m[P*2+1]);f[I]=M.real;h[I]=M.imag}}return[f,h,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z3=Ft((e,t)=>e+t);const J3=qa((e,t,n,s)=>{return{real:e+n,imag:t+s}});const ws=Ct(Yr,Z3,J3);const Q3={kernelName:Yr,backendName:"cpu",kernelFunc:ws};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lf(e,t,n,s,r){const o=q(s);const i=Yt(r,n);for(let a=0;a<e.length;a++){const l=e[a];if(l<0){throw new Error("Input x must be non-negative!")}if(l>=r){continue}if(o>0){i[l]+=t[a]}else{i[l]+=1}}return i}function t8(e,t,n,s=false){const r=e.shape[0];const o=e.shape[1];const i=at([r,n],t.dtype);for(let a=0;a<r;a++){for(let l=0;l<o;l++){const c=e.get(a,l);if(c<0){throw new Error("Input x must be non-negative!")}if(c>=n){continue}if(s){i.set(1,a,c)}else{if(t.size>0){i.set(i.get(a,c)+t.get(a,l),a,c)}else{i.set(i.get(a,c)+1,a,c)}}}}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(e){return(t,n,s)=>{const r=Xt(n,t.length);for(let o=0;o<t.length;++o){r[o]=e(t[o],s)}return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pt(e,t,n){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;J(i,e);if(i.dtype==="string"||n==="string"){throw new Error("unaryKernelFunc does not support string input/output")}const a=o;const l=a.data.get(i.dataId).values;const c=q(i.shape);const u=n||i.dtype;const f=Ht(u,c);for(let h=0;h<c;++h){f[h]=t(l[h],r)}return a.makeTensorInfo(i.shape,u,f)}}function Ds(e,t,n){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;J(i,e);if(i.dtype==="string"||n==="string"){throw new Error("unaryKernelFunc does not support string input/output")}const a=o;const l=a.data.get(i.dataId).values;const c=n||i.dtype;const u=t(l,c,r);return a.makeTensorInfo(i.shape,c,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e8=As(e=>Math.ceil(e));const n8=Ds(Ei,e8);const s8={kernelName:Ei,backendName:"cpu",kernelFunc:n8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r8(e,t,n,s){const r=Ht(n,q(t));if(s&&n!=="string"){let o=0;e.forEach(i=>{const a=q(i.shape);r.set(i.vals,o);o+=a})}else{let o=0;e.forEach(i=>{const a=n==="string"?Dr(i.vals):i.vals;let l=0;for(let c=0;c<i.shape[0];++c){const u=c*t[1]+o;for(let f=0;f<i.shape[1];++f){r[u+f]=a[l++]}}o+=i.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8=Ft((e,t)=>e===t?1:0);const Ff=Ct(Oi,o8,null,"bool");const i8={kernelName:Oi,backendName:"cpu",kernelFunc:Ff};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a8=As(e=>Math.exp(e));const Pf=Ds(Li,a8,"float32");const l8={kernelName:Li,backendName:"cpu",kernelFunc:Pf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8=As(e=>Math.expm1(e));const u8=Ds(Fi,c8);const f8={kernelName:Fi,backendName:"cpu",kernelFunc:u8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h8=As(e=>Math.floor(e));const p8=Ds(Pi,h8);const d8={kernelName:Pi,backendName:"cpu",kernelFunc:p8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(e,t,n,s,r,o,i,a,l){const c=at([s,o],n);for(let u=0;u<s;u++){const f=[];let h=0;for(let p=0;p<r;p++){const d=e[u*r+p];h+=d*i[p];f.push(d)}if(h<0||h>=l/o){throw new Error(`Invalid indices: ${f} does not index into ${a}`)}for(let p=0;p<o;p++){c.values[u*o+p]=t.get(...t.indexToLoc(h*o+p))}}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g8(e,t,n){const s=at(n,e.dtype);for(let r=0;r<s.size;++r){const o=s.indexToLoc(r);const i=o.slice();const a=i[0];const l=i[2];const c=t.locToIndex([a,l]);i[2]=t.values[c];const u=e.locToIndex(i);if(0<=u&&u<e.values.length){s.values[r]=e.values[u]}}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8=Ft((e,t)=>e>t?1:0);const b8=Ct(Mi,y8,null,"bool");const _8={kernelName:Mi,backendName:"cpu",kernelFunc:b8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8=Ft((e,t)=>e>=t?1:0);const N8=Ct(Vi,w8,null,"bool");const I8={kernelName:Vi,backendName:"cpu",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8=Ft((e,t)=>e<t?1:0);const T8=Ct(Hi,k8,null,"bool");const S8={kernelName:Hi,backendName:"cpu",kernelFunc:T8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8=Ft((e,t)=>e<=t?1:0);const v8=Ct(qi,E8,null,"bool");const x8={kernelName:qi,backendName:"cpu",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $8(e,t,n){const s=(t-e)/(n-1);const r=Yt(n,"float32");r[0]=e;for(let o=1;o<r.length;o++){r[o]=r[o-1]+s}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A8=As(e=>Math.log(e));const D8=Ds(Gi,A8);const R8={kernelName:Gi,backendName:"cpu",kernelFunc:D8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O8(e,t,n,s){const r=Xt(s,q(n));for(let o=0;o<r.length;++o){const i=o*t;let a=e[i];for(let l=0;l<t;++l){const c=e[i+l];if(Number.isNaN(c)||c>a){a=c}}r[o]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L8=Ft((e,t)=>Math.max(e,t));const F8=Ct(Zi,L8);const P8={kernelName:Zi,backendName:"cpu",kernelFunc:F8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U8=Ft((e,t)=>Math.min(e,t));const M8=Ct(Ji,U8);const V8={kernelName:Ji,backendName:"cpu",kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uf=Ft((e,t)=>e*t);const B8=qa((e,t,n,s)=>{return{real:e*n-t*s,imag:e*s+t*n}});const fo=Ct(ta,Uf,B8);const C8={kernelName:ta,backendName:"cpu",kernelFunc:fo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z8(e,t,n){const s=Ia(-1,n);return Uf([],t,s,e,n)}function W8(e){const{inputs:t,backend:n}=e;const{x:s}=t;J(s,"neg");const r=n.data.get(s.dataId).values;const[o,i]=z8(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}const H8={kernelName:cu,backendName:"cpu",kernelFunc:W8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q8=Ft((e,t)=>e!==t?1:0);const G8=Ct(ea,q8,null,"bool");const K8={kernelName:ea,backendName:"cpu",kernelFunc:G8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(e,t,n,s,r){const o=t.length;const i=q(t);const a=nt(t);const l=nt(r);const c=Xt(n,q(r));for(let u=0;u<i;++u){const f=Es(u,o,a);const h=new Array(f.length);for(let d=0;d<h.length;d++){h[d]=f[s[d]]}const p=He(h,o,l);c[p]=e[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function re(e){const{inputs:t,attrs:n,backend:s}=e;const{x:r}=t;const{perm:o}=n;J(r,"transpose");const i=r.shape.length;const a=new Array(i);for(let f=0;f<a.length;f++){a[f]=r.shape[o[f]]}const l=s.data.get(r.dataId).values;const c=Mf(l,r.shape,r.dtype,o,a);const u=s.write(c,a,r.dtype);return{dataId:u,shape:a,dtype:r.dtype}}const j8={kernelName:hr,backendName:"cpu",kernelFunc:re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X8(e,t,n,s){const[r,o]=un(e,s);const i=vs(t,"int32");const a=Yt(q(r),i);const l=q(o);for(let c=0;c<a.length;++c){const u=c*l;let f=1;for(let h=0;h<l;++h){f*=n[u+h]}a[c]=f}return{outVals:a,outShape:r,outDtype:i}}function Y8(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{axis:o,keepDims:i}=s;J(r,"prod");const a=r.shape.length;const l=Bt(o,r.shape);const c=Xe(l,a);let u=l;let f=r;const h=[];if(c!=null){f=re({inputs:{x:r},backend:n,attrs:{perm:c}});h.push(f);u=Ye(u.length,a)}const p=n.data.get(f.dataId).values;const{outVals:d,outShape:g,outDtype:m}=X8(f.shape,f.dtype,p,u);let b=g;if(i){b=Ue(g,l)}h.forEach(_=>n.disposeIntermediateTensorInfo(_));return n.makeTensorInfo(b,m,d)}const Z8={kernelName:bu,backendName:"cpu",kernelFunc:Y8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J8(e,t,n){e.forEach((s,r)=>{if(s<0||s>=n){const o=Es(r,t.length,nt(t)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${n})`)}})}function Q8(e,t){for(let n=0;n<e.length;++n){const s=e[n];const r=n===e.length-1?t:e[n+1].length;if(s.length===0){throw new Error("Ragged splits may not be empty")}if(s[0]<0){throw new Error("Ragged splits must be non-negative")}if(s[s.length-1]>r){throw new Error("Ragged splits must not point past values")}for(let o=1;o<s.length;++o){if(s[o-1]>s[o]){throw new Error("Ragged splits must be sorted in ascending order")}}}}function tb(e,t,n,s){const r=[];let o=0;const i=t.length-1+n.length;const a=new Array(i).fill(null).map(()=>[0]);Q8(n,s);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];const u=t[c+1];for(let f=1;f<l+1;++f){a[c].push(f*u)}}for(let c=0;c<e.length;++c){let u=e[c];let f=e[c]+1;for(let h=0;h<n.length;++h){const p=n[h];const d=h+t.length-1;if(d>=0){const g=a[d];const m=g[g.length-1]-p[u];for(let b=u;b<f;++b){a[d].push(p[b+1]+m)}}u=p[u];f=p[f]}if(f!==u){r.push([u,f]);o+=f-u}}return{outSplits:a,valueSlices:r,numValues:o}}function eb(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length;const r=Ht("int32",s);t.push(r);e[n].forEach((o,i)=>r[i]=o)}return t}function Pl(e,t){const n=e.slice(0,t);while(n.length<t){n.push(1)}for(let s=t;s<e.length;s++){n[t-1]*=e[s]}return n}function nb(e,t,n,s,r,o){const i=Pl(t,2)[1];const a=Pl(o,2)[1];let l=0;for(const c of n){for(let u=c[0];u<c[1];++u){for(let f=0;f<s;++f){r[l*a+f]=e[u*i+f]}++l}}}function sb(e,t,n,s,r){const o=t.slice();o[0]=r;const i=Ht(n,q(o));const a=e.length;const l=a===0?0:a/t[0];nb(e,t,s,l,i,o);return[i,o]}function rb(e,t,n,s,r,o,i,a){if(e.length===0){throw new Error("paramsNestedSplits must be non empty")}if(t[0].length===0){throw new Error("Split tensors must not be scalars")}const l=t[0][0]-1;J8(o,i,l);if(s.length===0){throw new Error("params.rank must be nonzero")}const c=s[0];const{outSplits:u,valueSlices:f,numValues:h}=tb(o,i,e,c);const p=eb(u);const d=sb(n,s,r,f,h);return[p,d[0],d[1]]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ye=ze;class Fr{constructor(t,n,s,r,o,i,a,l,c,u){this.shape=t;this.shapeShape=n;this.values=s;this.valuesShape=r;this.valuesDType=o;this.defaultValue=i;this.defaultValueShape=a;this.rowPartitionValues=l;this.rowPartitionValuesShapes=c;this.rowPartitionTypes=$y(u);this.raggedRank=Ay(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){if(this.rowPartitionTypes[0]===ye.FIRST_DIM_SIZE){return this.rowPartitionTypes[t+1]}else{return this.rowPartitionTypes[t]}}getRowPartitionTensor(t){if(this.rowPartitionTypes[0]===ye.FIRST_DIM_SIZE){return this.rowPartitionValues[t+1]}else{return this.rowPartitionValues[t]}}getMaxWidth(t){const n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case ye.VALUE_ROWIDS:return Fr.getMaxWidthValueRowID(n);case ye.ROW_SPLITS:return Fr.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${ye[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const n=t.length;if(n===0||n===1){return 0}let s=0;for(let r=0;r<n-1;++r){const o=t[r+1]-t[r];if(o>s){s=o}}return s}static getMaxWidthValueRowID(t){const n=t.length;if(n===0){return 0}let s=0;let r=t[0];let o=0;for(let i=1;i<n;++i){const a=t[i];if(a!==r){r=a;o=Math.max(i-s,o);s=i}}return Math.max(n-s,o)}tensorShapeFromTensor(t,n,s=true){if(n.length===0){if(t[0]===-1){return[]}throw new Error(`The only valid scalar shape tensor is the fully unknown shape specified as -1.`)}return Ml(t,s)}calculateOutputSize(t){const n=this.valuesShape;const s=this.defaultValueShape;Dy(s,n);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape);const o=xy(this.raggedRank,r,n);const i=o;if(i[0]<0){i[0]=t}for(let a=1;a<=this.raggedRank;++a){if(i[a]<0){i[a]=this.getMaxWidth(a)}}return i}calculateFirstParentOutputIndex(t,n,s){const r=Math.min(t,s);const o=[];let i=0;for(let a=0;a<r;++a,i+=n){o.push(i)}for(let a=r;a<t;++a){o.push(-1)}S(o.length===t,()=>"Final length of result must be equal to firstDimension.");return o}calculateOutputIndexRowSplit(t,n,s,r){const o=t.length;const i=[];for(let a=0;a<o-1;++a){const l=t[a+1]-t[a];let c=Math.min(r,l);let u=n[a];if(u===-1){c=0}for(let f=0;f<c;++f){i.push(u);u+=s}for(let f=0;f<l-c;++f){i.push(-1)}}if(o>0&&i.length!==t[o-1]){throw new Error("Invalid row split size.")}return i}calculateOutputIndexValueRowID(t,n,s,r){const o=t.length;const i=[];if(o===0){return[]}let a=0;let l=t[0];if(l>=n.length){throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`)}let c=n[l];i.push(c);for(let u=1;u<o;++u){const f=t[u];if(f===l){if(c>=0){++a;if(a<r){c+=s}else{c=-1}}}else{a=0;l=f;if(f>=n.length){throw new Error(`Got nextValueRowId=${f} which is not less than ${n.length}`)}c=n[f]}i.push(c)}if(i.length!==t.length){throw new Error("Invalid row ids.")}return i}calculateOutputIndex(t,n,s,r){const o=this.getRowPartitionTensor(t);const i=this.getRowPartitionTypeByDimension(t);switch(i){case ye.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,n,s,r);case ye.ROW_SPLITS:if(o.length-1>n.length){throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${n.length}`)}return this.calculateOutputIndexRowSplit(o,n,s,r);default:throw new Error(`Unsupported partition type: ${ye[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0){throw new Error("No row_partition_types given.")}const n=this.rowPartitionTypes[0];switch(n){case ye.FIRST_DIM_SIZE:return t[0];case ye.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ye.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${ye[n]}`)}}compute(){const t=this.rowPartitionValues[0];if(t.length<=0){throw new Error("Invalid first partition input. Tensor requires at least one element.")}const n=this.getFirstDimensionSize();const s=this.calculateOutputSize(n);const r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l){r[l]=r[l+1]*s[l+1]}const o=Ml(s,false);const i=Ht(this.valuesDType,q(o));const a=r[0]*s[0];if(a>0){let l=this.calculateFirstParentOutputIndex(n,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c){const u=this.calculateOutputIndex(c-1,l,r[c],s[c]);l=u}this.setOutput(this.raggedRank,l,i,o)}return[o,i]}setOutput(t,n,s,r){if(s.length===0){return}const o=this.values;const i=s;let a=r.slice();a=a.slice(t+1);const l=q(a);const c=n.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const d=this.defaultValueShape;Ee(()=>{const g=C(u,d);const m=Ws(g,a);u=m.dataSync()})}let f=0;let h=0;let p=0;for(let d=0;d<=c;++d){let g=d<c?n[d]:-1;if(g===p){++p;continue}if(h<p){const m=o.subarray(f*l);const b=i.subarray(h*l);const _=(p-h)*l;Ul(b,m,_)}if(d>=c){const m=s.length;g=Math.floor(m/l)}if(g>p){if(this.defaultValue.length===1){i.subarray(p*l,g*l).fill(this.defaultValue[0]);p=g}else{while(g>p){const m=i.slice(p*l);Ul(m,u,l);++p}}}if(g<0){f=d+1;h=p}else{f=d;h=p;p=h+1}}}}function Ul(e,t,n){for(let s=0;s<n;s++){e[s]=t[s]}}function Ml(e,t){const n=[];for(let s of e){if(s<0){if(!t){throw new Error(`Dimension ${s} must be >= 0`)}if(s<-1){throw new Error(`Dimension ${s} must be >= -1`)}s=-1}n.push(s)}return n}function ob(e,t,n,s,r,o,i,a,l,c){return new Fr(e,t,n,s,r,o,i,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ib(e,t,n,s){const r=e===t;const o=e<t&&n<0;const i=t<e&&n>1;if(r||o||i){return Yt(0,s)}const a=Math.abs(Math.ceil((t-e)/n));const l=Yt(a,s);if(t<e&&n===1){n=-1}l[0]=e;for(let c=1;c<l.length;c++){l[c]=l[c-1]+n}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ab=As(e=>1/Math.sqrt(e));const lb=Ds(aa,ab);const cb={kernelName:aa,backendName:"cpu",kernelFunc:lb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Us(e,t,n,s,r,o,i,a,l,c){const u=[s/r,r];const f=e.values;const h=t.values;if(s===0){return at(n,t.dtype)}const p=at(u,t.dtype);if(typeof l==="string"){p.values.fill(l)}else if(typeof l==="number"){p.values.fill(l)}else if(typeof l==="boolean"){p.values.fill(+l)}for(let d=0;d<o;d++){const g=[];let m=0;for(let b=0;b<i;b++){const _=f[d*i+b];g.push(_);m+=_*a[b]}if(m<0||m>=s/r){throw new Error(`Invalid indices: ${g} does not index into ${n}`)}for(let b=0;b<r;b++){if(c){p.values[m*r+b]+=h[d*r+b]}else{p.values[m*r+b]=t.rank===0?h[0]:h[d*r+b]}}}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vf=pt(ha,e=>1/(1+Math.exp(-e)));const ub={kernelName:ha,backendName:"cpu",kernelFunc:Vf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fb(e,t,n,s,r){const o=zd(s,t,n);const i=q(n);const a=nt(s);if(o){const f=Wd(t,a);if(r==="string"){return e.slice(f,f+i)}return e.subarray(f,f+i)}const l=r==="string"?Dr(e):e;const c=at(s,r,l);const u=at(n,r);for(let f=0;f<u.size;++f){const h=u.indexToLoc(f);const p=h.map((d,g)=>d+t[g]);u.set(c.get(...p),...h)}if(r==="string"){return m9(u.values)}return u.values}function Kn(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{begin:o,size:i}=s;J(r,"slice");const[a,l]=Hd(r,o,i);Bd(r,a,l);const c=n.data.get(r.dataId).values;const u=fb(c,a,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const hb={kernelName:Au,backendName:"cpu",kernelFunc:Kn};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pb(e,t,n,s,r,o,i){const a=t[0];const l=o[0];const c=new Array(l);const u=new Array(a);const f=t[1];if(l===0){if(a!==0){throw new Error(s9(a))}const m=Ht(n,0);const b=Ht(r,0);return[m,[0,f],b,c,u]}let h=true;let p=0;const d=new Array(l).fill(0);for(let m=0;m<a;++m){const b=e[m*f];if(b<0){throw new Error(r9(m,b))}if(b>=l){throw new Error(o9(m,b,l))}++d[b];h=h&&b>=p;p=b}let g=true;for(let m=0;m<l;++m){const b=d[m]===0;c[m]=b;g=g&&!b;d[m]=Math.max(d[m],1);if(m>0){d[m]+=d[m-1]}}if(g&&h){const m=e;const b=s;for(let _=0;_<a;++_){u[_]=_}return[m,[a,f],b,c,u]}else{const m=d[l-1];const b=Ht(n,m*f);const _=Ht(r,m);const w=new Array(l).fill(0);for(let N=0;N<a;++N){const I=e[N*f];const T=w[I];const E=(I===0?0:d[I-1])+T;w[I]++;for(let D=0;D<f;++D){b[E*f+D]=e[N*f+D]}_[E]=s[N];u[N]=E}for(let N=0;N<l;++N){const I=w[N];if(I===0){const T=N===0?0:d[N-1];b[T*f+0]=N;for(let E=1;E<f;++E){b[T*f+E]=0}_[T]=i}}return[b,[m,f],_,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function db(e,t,n,s,r){const o=q(s);const i=t[0];const a=r.length;const l=[];let c=1;let u=-1;for(let m=0;m<a;++m){const b=r[m];if(b===-1){if(u!==-1){throw new Error(i9(u,m))}u=m;l.push(1)}else{if(b<0){throw new Error(a9(m,b))}c*=b;l.push(b)}}if(u!==-1){if(c<=0){throw new Error(l9())}const m=Math.trunc(o/c);if(c*m!==o){throw new Error(c9(s,l))}l[u]=m}const f=q(l);if(f!==o){throw new Error(u9(s,l))}const h=s.length;const p=[];if(h>0){p[h-1]=1;for(let m=h-2;m>=0;--m){p[m]=p[m+1]*s[m+1]}}const d=[];if(a>0){d[a-1]=1;for(let m=a-2;m>=0;--m){d[m]=d[m+1]*l[m+1]}}const g=Ht(n,i*a);for(let m=0;m<i;++m){let b=0;for(let _=0;_<h;++_){b+=e[m*h+_]*p[_]}for(let _=0;_<a;++_){g[m*a+_]=Math.trunc(b/d[_]);b%=d[_]}}return[g,[i,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(e,t,n,s,r,o=false,i=0){const a=s.length;const l=[t[0],e.length/t[0]];const c=l[1];const u=a>0?r[a-1]+1:0;const f=u;if(f<0){throw new Error(vl())}const h=t.slice();h[0]=f;const p=h.reduce((w,N)=>w*N,1);const d=Ht(n,p);if(a===0){if(f>0){d.fill(i)}return[d,h]}if(f<=0){throw new Error(vl())}let g=0,m=1;let b=0;let _=r[g];while(true){let w=0;if(m<a){w=r[m];if(_===w){++m;continue}if(_>=w){throw new Error(f9())}}if(_<0||_>=f){throw new Error(h9(_,f))}if(_>b){d.fill(i,b*c,_*c)}for(let N=g;N<m;++N){const I=s[N];if(I<0||I>=l[0]){throw new Error(p9(N,s[N],l[0]))}for(let T=0;T<c;T++){d[_*c+T]+=e[I*c+T]}}if(o){for(let N=0;N<c;N++){d[_*c+N]/=m-g}}g=m;++m;b=_+1;_=w;if(m>a){break}}if(b<f){d.fill(i,b*c,f*c)}return[d,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mb=pt(da,e=>Math.sqrt(e));const gb={kernelName:da,backendName:"cpu",kernelFunc:mb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yb=Ft((e,t)=>{const n=e-t;return n*n});const bb=Ct(ma,yb);const _b={kernelName:ma,backendName:"cpu",kernelFunc:bb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wb(e,t,n,s){const r=at(e,t.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o);const a=new Array(i.length);for(let l=0;l<a.length;l++){a[l]=i[l]*n[l]+s[l]}r.set(t.get(...a),...i)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nb{constructor(t,n,s,r,o,i){this.separator=Pn(t);this.nGramWidths=n;this.leftPad=Pn(s);this.rightPad=Pn(r);this.padWidth=o;this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,n){const s=this.getPadWidth(n);return Math.max(0,t+2*s-n+1)}createNGrams(t,n,s,r,o,i){for(let a=0;a<o;++a){const l=this.getPadWidth(i);const c=Math.max(0,l-a);const u=Math.max(0,l-(o-(a+1)));const f=i-(c+u);const h=n+(c>0?0:a-l);let p=0;p+=c*this.leftPad.length;for(let _=0;_<f;++_){p+=t[h+_].length}p+=u*this.rightPad.length;const d=c+u+f-1;p+=d*this.separator.length;s[r+a]=new Uint8Array(p);const g=s[r+a];let m=0;const b=_=>_.forEach(w=>g[m++]=w);for(let _=0;_<c;++_){b(this.leftPad);b(this.separator)}for(let _=0;_<f-1;++_){b(t[h+_]);b(this.separator)}if(f>0){b(t[h+f-1]);for(let _=0;_<u;++_){b(this.separator);b(this.rightPad)}}else{for(let _=0;_<u-1;++_){b(this.rightPad);b(this.separator)}b(this.rightPad)}}}compute(t,n){const s=t.length;const r=n.length;if(r>0){let l=n[0];if(l!==0){throw new Error(`First split value must be 0, got ${l}`)}for(let c=1;c<r;++c){let u=n[c]>=l;u=u&&n[c]<=s;if(!u){throw new Error(`Invalid split value ${n[c]}, must be in [${l}, ${s}]`)}l=n[c]}if(l!==s){throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}}const o=r-1;const i=Ht("int32",r);if(s===0||r===0){const l=new Array(s);for(let c=0;c<=o;++c){i[c]=0}return[l,i]}i[0]=0;for(let l=1;l<=o;++l){const c=n[l]-n[l-1];let u=0;this.nGramWidths.forEach(f=>{u+=this.getNumNGrams(c,f)});if(this.preserveShort&&c>0&&u===0){u=1}i[l]=i[l-1]+u}const a=new Array(i[o]);for(let l=0;l<o;++l){const c=n[l];let u=i[l];this.nGramWidths.forEach(f=>{const h=n[l+1]-n[l];const p=this.getNumNGrams(h,f);this.createNGrams(t,c,a,u,p,f);u+=p});if(this.preserveShort&&u===i[l]){const f=n[l+1]-n[l];if(f===0){continue}const h=f+2*this.padWidth;const p=1;this.createNGrams(t,c,a,u,p,h)}}return[a,i]}}function Ib(e,t,n,s,r,o,i,a){return new Nb(n,s,r,o,i,a).compute(e,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kb(e,t,n,s){if(!e.length){return}if(t.length===0){for(let o=0;o<e.length;++o){s.push(e.subarray(o,o+1))}return}if(t.length===1){const o=t[0];let i=e.indexOf(o);while(i!==-1){const a=e.subarray(0,i);if(!n||a.length!==0){s.push(a)}e=e.subarray(i+1);i=e.indexOf(o)}if(!n||e.length!==0){s.push(e)}return}let r=0;for(let o=0;o<e.length+1;o++){if(o===e.length||t.indexOf(e[o])!==-1){const i=e.subarray(r,o);if(!n||i.length!==0){s.push(i)}r=o+1}}}function Tb(e,t,n){const s=e.length;const r=[];let o=0;let i=0;const a=new Array(s);for(let h=0;h<s;++h){const p=r.length;kb(e[h],t,n,r);const d=r.length-p;a[h]=d;o+=d;i=Math.max(i,d)}const l=Ht("int32",o*2);const c=new Array(o);const u=[s,i];let f=0;for(let h=0;h<s;++h){for(let p=0;p<a[h];++p){l[f*2]=h;l[f*2+1]=p;c[f]=r[f];++f}}return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sb(e,t){const n=Ht("int32",e.length);for(let s=0;s<e.length;++s){n[s]=fp(e[s]).modulo(t).getLowBitsUnsigned()}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eb=Ft((e,t)=>e-t);const vb=qa((e,t,n,s)=>{return{real:e-n,imag:t-s}});const Ga=Ct(ga,Eb,vb);const xb={kernelName:ga,backendName:"cpu",kernelFunc:Ga};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $b(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++){n[r]=e.shape[r]*t[r]}const s=at(n,e.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r);const i=new Array(e.rank);for(let l=0;l<i.length;l++){i[l]=o[l]%e.shape[l]}const a=e.locToIndex(i);s.values[r]=e.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ms=(e,t)=>{const n=t.value-e.value;return n===0?e.index-t.index:n};function Cf(e,t,n=0,s=e.length-1){while(s>n){if(s-n>600){const a=s-n+1;const l=t-n+1;const c=Math.log(a);const u=.5*Math.exp(2*c/3);const f=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2);const h=Math.max(n,Math.floor(t-l*u/a+f));const p=Math.min(s,Math.floor(t+(a-l)*u/a+f));Cf(e,t,h,p)}const r=e[t];let o=n;let i=s;Rs(e,n,t);if(Ms(e[s],r)>0){Rs(e,n,s)}while(o<i){Rs(e,o,i);o++;i--;while(Ms(e[o],r)<0){o=o+1}while(Ms(e[i],r)>0){i=i-1}}if(Ms(e[n],r)===0){Rs(e,n,i)}else{i=i+1;Rs(e,i,s)}if(i<=t){n=i+1}if(t<=i){s=i-1}}}function Ab(e,t,n,s,r){const o=t[t.length-1];const[i,a]=[e.length/o,o];const l=Xt(n,i*s);const c=Xt("int32",i*s);for(let f=0;f<i;f++){const h=f*a;const p=e.subarray(h,h+a);let d=new Array(p.length);p.forEach((_,w)=>d[w]={value:_,index:w});if(s<d.length){Cf(d,s);d=d.slice(0,s)}if(r){d.sort(Ms)}const g=f*s;const m=l.subarray(g,g+s);const b=c.subarray(g,g+s);for(let _=0;_<s;_++){m[_]=d[_].value;b[_]=d[_].index}}const u=t.slice();u[u.length-1]=s;return[at(u,n,l),at(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Db(e,t,n,s){const r=Bt(t,n)[0];const o=[1,n[0],1];for(let d=0;d<r;d++){o[0]*=n[d]}o[1]=n[r];for(let d=r+1;d<n.length;d++){o[2]*=n[d]}const i={};const a=new Int32Array(n[r]);const l=new Ut(o,s,e);const c=[];const u=o[0]===1&&o[2]===1;for(let d=0;d<n[r];d++){let g;if(u){g=e[d].toString()}else{const m=[];for(let b=0;b<o[0];b++){for(let _=0;_<o[2];_++){m.push(l.get(b,d,_))}}g=m.join(",")}if(i[g]!==void 0){a[d]=i[g]}else{const m=Object.keys(i).length;i[g]=m;a[d]=m;c.push(d)}}const f=o.slice();f[1]=Object.keys(i).length;const h=new Ut(f,s);c.forEach((d,g)=>{for(let m=0;m<o[0];m++){for(let b=0;b<o[2];b++){h.set(l.get(m,d,b),m,g,b)}}});const p=n.slice();p[r]=f[1];return{outputValues:h.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */$d("cpu",()=>new uo,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zf=pt(Di,e=>e>=0?e:Math.exp(e)-1);const Rb={kernelName:Di,backendName:"cpu",kernelFunc:zf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wf(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{alpha:o}=s;J([r],"leakyRelu");const i=q(r.shape);const a=n.data.get(r.dataId).values;const l=Xt("float32",i);for(let c=0;c<a.length;c++){l[c]=a[c]<0?o*a[c]:a[c]}return n.makeTensorInfo(r.shape,"float32",l)}const Ob={kernelName:Jc,backendName:"cpu",kernelFunc:Wf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lb=Ft((e,t)=>e<0?t*e:e);function Hf(e){const{inputs:t,backend:n}=e;const{x:s,alpha:r}=t;J([s,r],"prelu");const o=n.data.get(s.dataId).values;const i=n.data.get(r.dataId).values;const[a,l]=Lb(s.shape,r.shape,o,i,"float32");return n.makeTensorInfo(l,"float32",a)}const Fb={kernelName:yu,backendName:"cpu",kernelFunc:Hf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qf=pt(ra,e=>Math.max(0,e));const Pb={kernelName:ra,backendName:"cpu",kernelFunc:qf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gf=pt(oa,e=>Math.min(Math.max(0,e),6));const Ub={kernelName:oa,backendName:"cpu",kernelFunc:Gf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pr(e,t,n,s,r){if(n==="linear"){return Ge({inputs:{x:t},backend:e})}else if(n==="relu"){return qf({inputs:{x:t},backend:e})}else if(n==="elu"){return zf({inputs:{x:t},backend:e})}else if(n==="relu6"){return Gf({inputs:{x:t},backend:e})}else if(n==="prelu"){return Hf({inputs:{x:t,alpha:s},backend:e})}else if(n==="leakyrelu"){return Wf({inputs:{x:t},backend:e,attrs:{alpha:r}})}else if(n==="sigmoid"){return Vf({inputs:{x:t},backend:e})}throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function It(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{shape:o}=s;const i=q(r.shape);const a=Ah(o,i);const l=q(a);S(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);n.incRef(r.dataId);const c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real;const f=c.complexTensorInfos.imag;u.shape=a;f.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const Mb={kernelName:ku,backendName:"cpu",kernelFunc:It};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kf(e){const{inputs:t,backend:n,attrs:s}=e;const{a:r,b:o}=t;const{transposeA:i,transposeB:a}=s;J([r,o],"matMul");const l=r.shape.length;const c=o.shape.length;const u=i?r.shape[l-2]:r.shape[l-1];const f=a?o.shape[c-1]:o.shape[c-2];const h=i?r.shape[l-1]:r.shape[l-2];const p=a?o.shape[c-2]:o.shape[c-1];const d=r.shape.slice(0,-2);const g=o.shape.slice(0,-2);const m=q(d);const b=q(g);const _=Dt(r.shape.slice(0,-2),o.shape.slice(0,-2));const w=_.concat([h,p]);S(u===f,()=>`Error in matMul: inner shapes (${u}) and (${f}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const N=i?[m,u,h]:[m,h,u];const I=a?[b,p,f]:[b,f,p];const T=It({inputs:{x:r},backend:n,attrs:{shape:N}});const E=It({inputs:{x:o},backend:n,attrs:{shape:I}});const D=i?T.shape[1]:T.shape[2];const L=i?T.shape[2]:T.shape[1];const P=a?E.shape[1]:E.shape[2];const M=Math.max(m,b);const B=n.data.get(T.dataId).values;const $=n.data.get(E.dataId).values;const x=nt(T.shape);const A=nt(E.shape);const[O,F,U]=i?[x[0],1,x[1]]:[x[0],x[1],1];const[V,z,W]=a?[1,A[1],A[0]]:[A[1],1,A[0]];const G=L*P;const H=at([M,L,P],T.dtype);const j=H.values;const K=n.blockSize;for(let Y=0;Y<M;Y++){for(let Q=0;Q<L;Q+=K){for(let tt=0;tt<P;tt+=K){for(let et=0;et<D;et+=K){const st=Math.min(Q+K,L);const it=Math.min(tt+K,P);const ft=Math.min(et+K,D);for(let gt=Q;gt<st;gt++){for(let kt=tt;kt<it;kt++){let vt=0;for(let dt=et;dt<ft;dt++){const $t=Math.min(Y,m-1)*O;const Rt=Math.min(Y,b-1)*W;const Ze=B[$t+gt*F+dt*U];const zt=$[dt*V+kt*z+Rt];vt+=Ze*zt}j[Y*G+(gt*P+kt)]+=vt}}}}}}n.disposeIntermediateTensorInfo(T);n.disposeIntermediateTensorInfo(E);return n.makeTensorInfo(w,H.dtype,H.values)}const Vb={kernelName:wc,backendName:"cpu",kernelFunc:Kf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bb(e){const{inputs:t,backend:n,attrs:s}=e;const{a:r,b:o,bias:i,preluActivationWeights:a}=t;const{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:f}=s;let h;let p;let d;const g=[];const m=Kf({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:c},backend:n});h=m;if(i){p=ws({inputs:{a:h,b:i},backend:n});g.push(h);h=p}if(u){d=Pr(n,h,u,a,f);g.push(h);h=d}for(const b of g){n.disposeIntermediateTensorInfo(b)}return h}const Cb={kernelName:Eo,backendName:"cpu",kernelFunc:Bb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zb=pt(bi,e=>Math.acos(e));const Wb={kernelName:bi,backendName:"cpu",kernelFunc:zb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hb=pt(_i,e=>Math.acosh(e));const qb={kernelName:_i,backendName:"cpu",kernelFunc:Hb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gb(e){const{inputs:t,backend:n}=e;const s=t;J(t,"addN");const r=s.map(a=>n.data.get(a.dataId).values);const o=at(s[0].shape,s[0].dtype);const i=o.values;for(let a=0;a<s.length;a++){const l=r[a];for(let c=0;c<i.length;c++){i[c]+=l[c]}}return n.makeTensorInfo(o.shape,o.dtype,o.values)}const Kb={kernelName:pc,backendName:"cpu",kernelFunc:Gb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jb(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{axis:o,keepDims:i}=s;J(r,"all");const a=Bt(o,r.shape);let l=a;const c=Xe(l,r.shape.length);let u=r;if(c!=null){u=re({inputs:{x:r},backend:n,attrs:{perm:c}});l=Ye(l.length,r.shape.length)}Zn("all",l,u.shape.length);const[f,h]=un(u.shape,l);const p=q(h);const d=Yt(q(f),u.dtype);const g=n.data.get(u.dataId).values;for(let b=0;b<d.length;++b){const _=b*p;let w=g[_];for(let N=0;N<p;++N){const I=g[_+N];w=w&&I}d[b]=w}if(c!=null){n.disposeIntermediateTensorInfo(u)}const m=n.makeTensorInfo(f,u.dtype,d);if(i){const b=Ue(f,a);const _=It({inputs:{x:m},backend:n,attrs:{shape:b}});n.disposeIntermediateTensorInfo(m);return _}return m}const Xb={kernelName:dc,backendName:"cpu",kernelFunc:jb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yb(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{axis:o,keepDims:i}=s;J(r,"any");const a=Bt(o,r.shape);let l=a;const c=Xe(l,r.shape.length);let u=r;if(c!=null){u=re({inputs:{x:r},backend:n,attrs:{perm:c}});l=Ye(l.length,r.shape.length)}Zn("any",l,u.shape.length);const[f,h]=un(u.shape,l);const p=q(h);const d=Yt(q(f),u.dtype);const g=n.data.get(u.dataId).values;for(let b=0;b<d.length;++b){const _=b*p;let w=g[_];for(let N=0;N<p;++N){const I=g[_+N];w=w||I}d[b]=w}if(c!=null){n.disposeIntermediateTensorInfo(u)}const m=n.makeTensorInfo(f,u.dtype,d);if(i){const b=Ue(f,a);const _=It({inputs:{x:m},backend:n,attrs:{shape:b}});n.disposeIntermediateTensorInfo(m);return _}return m}const Zb={kernelName:mc,backendName:"cpu",kernelFunc:Yb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jb(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{axis:o}=s;J(r,"argMax");let i=Bt(o,r.shape);const a=Xe(i,r.shape.length);let l=r;const c=[];if(a!=null){l=re({inputs:{x:r},backend:n,attrs:{perm:a}});c.push(l);i=Ye(i.length,l.shape.length)}i=[i[0]];Zn("argMax",i,l.shape.length);const[u,f]=un(l.shape,i);const h=q(u);const p=Yt(h,"int32");const d=q(f);const g=n.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const b=m*d;let _=g[b];let w=0;for(let N=0;N<d;++N){const I=g[b+N];if(I>_){_=I;w=N}}p[m]=w}c.forEach(m=>n.disposeIntermediateTensorInfo(m));return n.makeTensorInfo(u,"int32",p)}const Qb={kernelName:gc,backendName:"cpu",kernelFunc:Jb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t6(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{axis:o}=s;J(r,"argMin");let i=Bt(o,r.shape);const a=Xe(i,r.shape.length);let l=r;const c=[];if(a!=null){l=re({inputs:{x:r},backend:n,attrs:{perm:a}});c.push(l);i=Ye(i.length,l.shape.length)}i=[i[0]];Zn("argMin",i,l.shape.length);const[u,f]=un(l.shape,i);const h=q(u);const p=Yt(h,"int32");const d=q(f);const g=n.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const b=m*d;let _=g[b];let w=0;for(let N=0;N<d;++N){const I=g[b+N];if(I<_){_=I;w=N}}p[m]=w}c.forEach(m=>n.disposeIntermediateTensorInfo(m));return n.makeTensorInfo(u,"int32",p)}const e6={kernelName:yc,backendName:"cpu",kernelFunc:t6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6=pt(wi,e=>Math.asin(e));const s6={kernelName:wi,backendName:"cpu",kernelFunc:n6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r6=pt(Ni,e=>Math.asinh(e));const o6={kernelName:Ni,backendName:"cpu",kernelFunc:r6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6=pt(Ii,e=>Math.atan(e));const a6={kernelName:Ii,backendName:"cpu",kernelFunc:i6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6=Ft((e,t)=>Math.atan2(e,t));const c6=Ct(Ti,l6);const u6={kernelName:Ti,backendName:"cpu",kernelFunc:c6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f6=pt(ki,e=>Math.atanh(e));const h6={kernelName:ki,backendName:"cpu",kernelFunc:f6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ka(e,t,n,s,r,o){const i=r.strideHeight;const a=r.strideWidth;const l=r.dilationHeight;const c=r.dilationWidth;const u=r.effectiveFilterHeight;const f=r.effectiveFilterWidth;const h=r.padInfo.top;const p=r.padInfo.left;const d=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY;const g=at(r.outShape,n);const m=g.values;const b=r.outShape[1]*r.outShape[2]*r.outShape[3];const _=r.outShape[2]*r.outShape[3];const w=r.outShape[3];for(let N=0;N<r.batchSize;++N){const I=N*b;const T=N*s[0];for(let E=0;E<r.inChannels;++E){for(let D=0;D<r.outHeight;++D){const L=D*i-h;const P=Math.max(0,L);const M=Math.min(r.inHeight,u+L);const B=I+D*_;for(let $=0;$<r.outWidth;++$){const x=$*a-p;const A=Math.max(0,x);const O=Math.min(r.inWidth,f+x);let F=d;let U=0;let V=0;for(let W=P;W<M;W+=l){const G=T+W*s[1];for(let H=A;H<O;H+=c){const j=G+H*s[2];const K=e[j+E];if(o==="max"&&K>F){F=K}else if(o==="avg"){U+=K;V++}}if(isNaN(F)){break}}const z=B+$*w+E;m[z]=o==="avg"?U/V:F}}}}return g}function jf(e,t,n,s,r=false,o=false){const i=at(s.outShape,"int32");const a=s.strideHeight;const l=s.strideWidth;const c=s.dilationHeight;const u=s.dilationWidth;const f=s.effectiveFilterHeight;const h=s.effectiveFilterWidth;const p=s.padInfo.top;const d=s.padInfo.left;const g=at(t,n,e);for(let m=0;m<s.batchSize;++m){for(let b=0;b<s.inChannels;++b){for(let _=0;_<s.outHeight;++_){const w=_*a-p;let N=w;while(N<0){N+=c}const I=Math.min(s.inHeight,f+w);for(let T=0;T<s.outWidth;++T){const E=T*l-d;let D=E;while(D<0){D+=u}const L=Math.min(s.inWidth,h+E);let P=Number.NEGATIVE_INFINITY;let M=-1;for(let B=N;B<I;B+=c){const $=B-w;for(let x=D;x<L;x+=u){const A=x-E;const O=g.get(m,B,x,b);if(O>P){P=O;if(r){M=o?((m*s.inHeight+B)*s.inWidth+x)*s.inChannels+b:(B*s.inWidth+x)*s.inChannels+b}else{M=$*h+A}}}}i.set(M,m,_,T,b)}}}}return i}function Xf(e,t,n,s,r,o){const i=r.strideDepth;const a=r.strideHeight;const l=r.strideWidth;const c=r.dilationDepth;const u=r.dilationHeight;const f=r.dilationWidth;const h=r.effectiveFilterDepth;const p=r.effectiveFilterHeight;const d=r.effectiveFilterWidth;const g=r.padInfo.front;const m=r.padInfo.top;const b=r.padInfo.left;const _=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY;const w=at(r.outShape,n);const N=w.values;const I=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4];const T=r.outShape[2]*r.outShape[3]*r.outShape[4];const E=r.outShape[3]*r.outShape[4];const D=r.outShape[4];for(let L=0;L<r.batchSize;++L){const P=L*I;const M=L*s[0];for(let B=0;B<r.inChannels;++B){for(let $=0;$<r.outDepth;++$){const x=$*i-g;let A=x;while(A<0){A+=c}const O=Math.min(r.inDepth,h+x);const F=P+$*T;for(let U=0;U<r.outHeight;++U){const V=U*a-m;let z=V;while(z<0){z+=u}const W=Math.min(r.inHeight,p+V);const G=F+U*E;for(let H=0;H<r.outWidth;++H){const j=H*l-b;let K=j;while(K<0){K+=f}const Y=Math.min(r.inWidth,d+j);const Q=G+H*D;let tt=_;let et=0;let st=0;for(let ft=A;ft<O;ft+=c){const gt=M+ft*s[1];for(let kt=z;kt<W;kt+=u){const vt=gt+kt*s[2];for(let dt=K;dt<Y;dt+=f){const $t=vt+dt*s[3];const Rt=e[$t+B];if(o==="max"&&Rt>tt){tt=Rt}else if(o==="avg"){et+=Rt;st++}if(isNaN(tt)){break}}if(isNaN(tt)){break}}if(isNaN(tt)){break}}const it=Q+B;N[it]=o==="avg"?et/st:tt}}}}}return w}function p6(e,t){const n=at(t.outShape,"int32");const s=t.strideDepth;const r=t.strideHeight;const o=t.strideWidth;const i=t.dilationDepth;const a=t.dilationHeight;const l=t.dilationWidth;const c=t.effectiveFilterDepth;const u=t.effectiveFilterHeight;const f=t.effectiveFilterWidth;const h=t.padInfo.front;const p=t.padInfo.top;const d=t.padInfo.left;for(let g=0;g<t.batchSize;++g){for(let m=0;m<t.inChannels;++m){for(let b=0;b<t.outDepth;++b){const _=b*s-h;let w=_;while(w<0){w+=i}const N=Math.min(t.inDepth,c+_);for(let I=0;I<t.outHeight;++I){const T=I*r-p;let E=T;while(E<0){E+=a}const D=Math.min(t.inHeight,u+T);for(let L=0;L<t.outWidth;++L){const P=L*o-d;let M=P;while(M<0){M+=l}const B=Math.min(t.inWidth,f+P);let $=Number.NEGATIVE_INFINITY;let x=-1;for(let A=w;A<N;A+=i){const O=A-_;for(let F=E;F<D;F+=a){const U=F-T;for(let V=M;V<B;V+=l){const z=V-P;const W=e.get(g,A,F,V,m);if(W>=$){$=W;x=O*u*f+U*u+z}}}}n.set(x,g,b,I,L,m)}}}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;J(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s;const c=1;S(Fe(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=xs(r.shape,o,i,c,a,l);let f;if(u.filterWidth===1&&u.filterHeight===1&&Oe(u.inShape,u.outShape)){f=Ge({inputs:{x:r},backend:n})}else{const h=n.data.get(r.dataId).values;const p=nt(r.shape);const d=Ka(h,r.shape,r.dtype,p,u,"avg");f=n.makeTensorInfo(u.outShape,r.dtype,d.values)}return f}const m6={kernelName:bc,backendName:"cpu",kernelFunc:d6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;J(r,"avgPool3d");const u=Qr(r.shape,o,i,1,a,l,c);const f=n.data.get(r.dataId).values;const h=Xf(f,r.shape,r.dtype,nt(r.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}const y6={kernelName:_c,backendName:"cpu",kernelFunc:g6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(e){const{inputs:t,backend:n,attrs:s}=e;const{dy:r,input:o}=t;const{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;J([r,o],"avgPool3DGrad");const u=Qr(o.shape,i,a,1,l,c);const f=u.strideDepth;const h=u.strideHeight;const p=u.strideWidth;const d=u.filterDepth;const g=u.filterHeight;const m=u.filterWidth;const b=u.dilationDepth;const _=u.dilationHeight;const w=u.dilationWidth;const N=u.effectiveFilterDepth;const I=u.effectiveFilterHeight;const T=u.effectiveFilterWidth;const E=N-1-u.padInfo.front;const D=T-1-u.padInfo.left;const L=I-1-u.padInfo.top;const P=at(o.shape,"float32");const M=1/(d*g*m);const B=n.bufferSync(r);for(let $=0;$<u.batchSize;++$){for(let x=0;x<u.inChannels;++x){for(let A=0;A<u.inDepth;++A){for(let O=0;O<u.inHeight;++O){for(let F=0;F<u.inWidth;++F){const U=A-E;const V=O-L;const z=F-D;let W=0;for(let G=0;G<N;G+=b){const H=(U+G)/f;if(H<0||H>=u.outDepth||Math.floor(H)!==H){continue}for(let j=0;j<I;j+=_){const K=(V+j)/h;if(K<0||K>=u.outHeight||Math.floor(K)!==K){continue}for(let Y=0;Y<T;Y+=w){const Q=(z+Y)/p;if(Q<0||Q>=u.outWidth||Math.floor(Q)!==Q){continue}const tt=B.get($,H,K,Q,x);W+=tt}}}P.set(W*M,$,A,O,F,x)}}}}}return n.makeTensorInfo(P.shape,P.dtype,P.values)}const _6={kernelName:qh,backendName:"cpu",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w6(e){const{inputs:t,backend:n,attrs:s}=e;const{dy:r,input:o}=t;const i=o;J([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s;const u=xs(i.shape,a,l,1,c);const f=u.strideHeight;const h=u.strideWidth;const p=u.filterHeight;const d=u.filterWidth;const g=u.dilationHeight;const m=u.dilationWidth;const b=u.effectiveFilterHeight;const _=u.effectiveFilterWidth;const w=_-1-u.padInfo.left;const N=b-1-u.padInfo.top;const I=at(i.shape,"float32");const T=1/(p*d);const E=n.data.get(r.dataId).values;const D=at(r.shape,"float32",E);for(let L=0;L<u.batchSize;++L){for(let P=0;P<u.inChannels;++P){for(let M=0;M<u.inHeight;++M){for(let B=0;B<u.inWidth;++B){const $=M-N;const x=B-w;let A=0;for(let O=0;O<b;O+=g){const F=($+O)/f;if(F<0||F>=u.outHeight||Math.floor(F)!==F){continue}for(let U=0;U<_;U+=m){const V=(x+U)/h;if(V<0||V>=u.outWidth||Math.floor(V)!==V){continue}const z=D.get(L,F,V,P);A+=z}}I.set(A*T,L,M,B,P)}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const N6={kernelName:Hh,backendName:"cpu",kernelFunc:w6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I6(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,scale:o,offset:i,mean:a,variance:l}=t;S(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks.");S(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks.");S(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");J([r,a,l,o,i],"batchNorm");let{varianceEpsilon:c}=s;if(c==null){c=.001}const u=n.data.get(r.dataId).values;const f=n.data.get(a.dataId).values;const h=n.data.get(l.dataId).values;const p=o?n.data.get(o.dataId).values:new Float32Array([1]);const d=i?n.data.get(i.dataId).values:new Float32Array([0]);const g=new Float32Array(u.length);const m=d.length;const b=p.length;const _=h.length;const w=f.length;let N=0;let I=0;let T=0;let E=0;for(let D=0;D<u.length;++D){g[D]=d[N++]+(u[D]-f[I++])*p[T++]/Math.sqrt(h[E++]+c);if(N>=m){N=0}if(I>=w){I=0}if(T>=b){T=0}if(E>=_){E=0}}return n.makeTensorInfo(r.shape,r.dtype,g)}const k6={kernelName:Kc,backendName:"cpu",kernelFunc:I6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{blockShape:o,crops:i}=s;J([r],"batchToSpaceND");const a=o.reduce((b,_)=>b*_);const l=Ef(r.shape,o,a);const c=vf(l.length,o.length);const u=xf(r.shape,o,a);const f=Oy(i,o.length);const h=Ly(u,i,o.length);const p=It({inputs:{x:r},backend:n,attrs:{shape:l}});const d=re({inputs:{x:p},backend:n,attrs:{perm:c}});const g=It({inputs:{x:d},backend:n,attrs:{shape:u}});const m=Kn({inputs:{x:g},backend:n,attrs:{begin:f,size:h}});n.disposeIntermediateTensorInfo(p);n.disposeIntermediateTensorInfo(d);n.disposeIntermediateTensorInfo(g);return m}const S6={kernelName:Nc,backendName:"cpu",kernelFunc:T6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,weights:o}=t;const{size:i}=s;const a=n.data.get(r.dataId).values;const l=n.data.get(o.dataId).values;const c=Lf(a,l,o.dtype,o.shape,i);return n.makeTensorInfo([i],o.dtype,c)}const v6={kernelName:Ic,backendName:"cpu",kernelFunc:E6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x6(e){const{inputs:t,backend:n}=e;const{s0:s,s1:r}=t;const o=n.data.get(s.dataId).values;const i=n.data.get(r.dataId).values;const a=Dt(Array.from(o),Array.from(i));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const $6={kernelName:kc,backendName:"cpu",kernelFunc:x6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6=pt(vi,(e,t)=>{const n=t;if(e>n.clipValueMax){return n.clipValueMax}return e<n.clipValueMin?n.clipValueMin:e});const D6={kernelName:vi,backendName:"cpu",kernelFunc:A6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6=e=>{const{x:t}=e.inputs;const n=e.backend;const s=new Float32Array(q(t.shape));const r=n.data.get(t.dataId);const o=r.complexTensorInfos.real;const i=r.complexTensorInfos.imag;const a=n.data.get(o.dataId).values;const l=n.data.get(i.dataId).values;for(let c=0;c<a.length;c++){const u=a[c];const f=l[c];s[c]=Math.hypot(u,f)}return n.makeOutput(s,t.shape,"float32")};const O6={kernelName:Sc,backendName:"cpu",kernelFunc:R6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(e){const{inputs:t,backend:n}=e;const{input:s}=t;const r=n.data.get(s.dataId).complexTensorInfos.imag;const o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const L6={kernelName:Zc,backendName:"cpu",kernelFunc:Ns};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(e){const{inputs:t,backend:n,attrs:s}=e;const{axis:r}=s;const o=Bt(r,t[0].shape)[0];const i=t.map(g=>g.shape);vy(i,o);let a=wo(t.map(g=>g.shape),o);if(q(a)===0){return n.makeTensorInfo(a,t[0].dtype,[])}const l=t.filter(g=>q(g.shape)>0);if(l.length===1){return Ge({inputs:{x:l[0]},backend:n})}if(l[0].dtype==="complex64"){const g=l.map(N=>Gn({inputs:{input:N},backend:n}));const m=l.map(N=>Ns({inputs:{input:N},backend:n}));const b=Is({inputs:g,backend:n,attrs:{axis:o}});const _=Is({inputs:m,backend:n,attrs:{axis:o}});const w=le({inputs:{real:b,imag:_},backend:n});g.forEach(N=>n.disposeIntermediateTensorInfo(N));m.forEach(N=>n.disposeIntermediateTensorInfo(N));n.disposeIntermediateTensorInfo(b);n.disposeIntermediateTensorInfo(_);return w}const c=l.map(g=>{const m=q(g.shape.slice(o));const b=[-1,m];return It({inputs:{x:g},backend:n,attrs:{shape:b}})});const u=c.map(g=>{return{vals:n.data.get(g.dataId).values,shape:g.shape}});a=wo(c.map(g=>g.shape),1);const f=c[0].shape[0]===1;const h=r8(u,a,t[0].dtype,f);const p=wo(l.map(g=>g.shape),o);const d=n.makeTensorInfo(p,t[0].dtype,h);c.forEach(g=>n.disposeIntermediateTensorInfo(g));return d}const F6={kernelName:Ec,backendName:"cpu",kernelFunc:Is};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yf(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,filter:o}=t;const{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s;J([r,o],"conv2d");const f=eo(l);const h=je(r.shape,o.shape,i,c,a,u,false,f);const p=h.filterHeight;const d=h.filterWidth;const g=h.dilationHeight;const m=h.dilationWidth;const b=h.padInfo.left;const _=h.padInfo.top;const w=h.dataFormat==="channelsLast";const N=new Ut(h.outShape,r.dtype);const I=nt(r.shape);const T=nt(o.shape);const E=I[0];const D=w?I[1]:I[2];const L=w?I[2]:1;const P=w?1:I[1];const M=N.strides[0];const B=w?N.strides[1]:N.strides[2];const $=w?N.strides[2]:1;const x=w?1:N.strides[1];const A=n.data.get(r.dataId).values;const O=n.data.get(o.dataId).values;const F=N.values;for(let U=0;U<h.batchSize;++U){const V=U*E;const z=U*M;for(let W=0;W<h.outHeight;++W){const G=z+W*B;const H=W*h.strideHeight-_;for(let j=0;j<p;++j){const K=H+j*g;if(K<0||K>=h.inHeight){continue}const Y=j*T[0];const Q=V+K*D;for(let tt=0;tt<h.outWidth;++tt){const et=G+tt*$;const st=tt*h.strideWidth-b;for(let it=0;it<d;++it){const ft=st+it*m;if(ft<0||ft>=h.inWidth){continue}const gt=Y+it*T[1];const kt=Q+ft*L;let vt=gt;for(let dt=0;dt<h.inChannels;++dt){const $t=A[kt+dt*P];for(let Rt=0;Rt<h.outChannels;++Rt){F[et+Rt*x]+=$t*O[vt+Rt]}vt+=h.outChannels}}}}}}return n.makeTensorInfo(N.shape,N.dtype,F)}const P6={kernelName:vc,backendName:"cpu",kernelFunc:Yf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,dy:o}=t;const{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;J([r,o],"conv2dBackpropFilter");const f=eo(l);const h=je(r.shape,u,i,1,a,c,false,f);const{strideHeight:p,strideWidth:d,filterHeight:g,filterWidth:m}=h;const b=h.dataFormat==="channelsLast";const _=new Ut(h.filterShape,"float32");const w=h.padInfo.left;const N=h.padInfo.top;const I=n.data.get(r.dataId).values;const T=n.data.get(o.dataId).values;const E=new Ut(r.shape,r.dtype,I);const D=new Ut(o.shape,o.dtype,T);for(let L=0;L<g;++L){const P=Math.max(0,Math.ceil((N-L)/p));const M=Math.min(h.outHeight,(h.inHeight+N-L)/p);for(let B=0;B<m;++B){const $=Math.max(0,Math.ceil((w-B)/d));const x=Math.min(h.outWidth,(h.inWidth+w-B)/d);for(let A=0;A<h.inChannels;++A){for(let O=0;O<h.outChannels;++O){let F=0;for(let U=0;U<h.batchSize;++U){for(let V=P;V<M;++V){const z=L+V*p-N;for(let W=$;W<x;++W){const G=B+W*d-w;if(b){F+=E.get(U,z,G,A)*D.get(U,V,W,O)}else{F+=E.get(U,A,z,G)*D.get(U,O,V,W)}}}}_.set(F,L,B,A,O)}}}}return n.makeTensorInfo(_.shape,_.dtype,_.values)}const M6={kernelName:xc,backendName:"cpu",kernelFunc:U6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V6(e){const{inputs:t,backend:n,attrs:s}=e;const{dy:r,filter:o}=t;const{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s;J([r,o],"conv2dBackpropInput");const f=nt(o.shape);const h=nt(r.shape);let p=eo(c);const d=je(i,o.shape,a,1,l,u,false,p);const g=new Ut(d.inShape,"float32");const m=g.values;const b=n.data.get(r.dataId).values;const _=n.data.get(o.dataId).values;const[w,N,I]=f;const{batchSize:T,filterHeight:E,filterWidth:D,inChannels:L,inHeight:P,inWidth:M,outChannels:B,outHeight:$,outWidth:x,strideHeight:A,strideWidth:O}=d;p=d.dataFormat;const F=E-1-d.padInfo.top;const U=D-1-d.padInfo.left;const V=p==="channelsLast";const z=g.strides[0];const W=V?g.strides[1]:g.strides[2];const G=V?g.strides[2]:1;const H=V?1:g.strides[1];const j=h[0];const K=V?h[1]:h[2];const Y=V?h[2]:1;const Q=V?1:h[1];for(let tt=0;tt<T;++tt){for(let et=0;et<L;++et){for(let st=0;st<P;++st){const it=st-F;const ft=Math.max(0,Math.ceil(it/A));const gt=Math.min($,(E+it)/A);for(let kt=0;kt<M;++kt){const vt=kt-U;const dt=Math.max(0,Math.ceil(vt/O));const $t=Math.min(x,(D+vt)/O);let Rt=0;for(let zt=ft;zt<gt;++zt){const Je=zt*A-it;for(let he=dt;he<$t;++he){const Sn=he*O-vt;const ve=j*tt+K*zt+Y*he;const Ve=w*(E-1-Je)+N*(D-1-Sn)+I*et;for(let hn=0;hn<B;++hn){const pn=b[ve+Q*hn];const dn=_[Ve+hn];Rt+=pn*dn}}}const Ze=z*tt+W*st+G*kt+H*et;m[Ze]=Rt}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const B6={kernelName:$c,backendName:"cpu",kernelFunc:V6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,filter:o}=t;const{strides:i,pad:a,dilations:l}=s;J([r,o],"conv3d");const c=to(r.shape,o.shape,i,l,a);const{filterDepth:u,filterHeight:f,filterWidth:h,dilationDepth:p,dilationHeight:d,dilationWidth:g,padInfo:m}=c;const b=m.front;const _=m.left;const w=m.top;const N=new Ut(c.outShape,r.dtype);const I=n.data.get(r.dataId).values;const T=n.data.get(o.dataId).values;const E=N.values;const D=nt(r.shape);const L=nt(o.shape);for(let P=0;P<c.batchSize;++P){const M=P*D[0];const B=P*N.strides[0];for(let $=0;$<c.outDepth;++$){const x=B+$*N.strides[1];const A=$*c.strideDepth-b;for(let O=0;O<u;++O){const F=A+O*p;if(F<0||F>=c.inDepth){continue}const U=O*L[0];const V=M+F*D[1];for(let z=0;z<c.outHeight;++z){const W=x+z*N.strides[2];const G=z*c.strideHeight-w;for(let H=0;H<f;++H){const j=G+H*d;if(j<0||j>=c.inHeight){continue}const K=U+H*L[1];const Y=V+j*D[2];for(let Q=0;Q<c.outWidth;++Q){const tt=W+Q*c.outChannels;const et=Q*c.strideWidth-_;for(let st=0;st<h;++st){const it=et+st*g;if(it<0||it>=c.inWidth){continue}const ft=K+st*L[2];const gt=Y+it*c.inChannels;let kt=ft;for(let vt=0;vt<c.inChannels;++vt){const dt=I[gt+vt];for(let $t=0;$t<c.outChannels;++$t){E[tt+$t]+=dt*T[kt+$t]}kt+=c.outChannels}}}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const z6={kernelName:Ac,backendName:"cpu",kernelFunc:C6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W6(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,dy:o}=t;const{strides:i,pad:a,filterShape:l}=s;J([r,o],"conv3dBackpropFilterV2");const c=nt(r.shape);const u=nt(o.shape);const f=to(r.shape,l,i,1,a);const h=f.strideDepth;const p=f.strideHeight;const d=f.strideWidth;const g=f.filterDepth;const m=f.filterHeight;const b=f.filterWidth;const _=new Ut(f.filterShape,"float32");const w=_.values;const[N,I,T,E]=_.strides;const D=n.data.get(o.dataId).values;const[L,P,M,B]=u;const $=n.data.get(r.dataId).values;const[x,A,O,F]=c;const U=f.padInfo.front;const V=f.padInfo.left;const z=f.padInfo.top;for(let W=0;W<g;++W){const G=Math.max(0,Math.ceil((U-W)/h));const H=Math.min(f.outDepth,(f.inDepth+U-W)/h);const j=W*N;for(let K=0;K<m;++K){const Y=Math.max(0,Math.ceil((z-K)/p));const Q=Math.min(f.outHeight,(f.inHeight+z-K)/p);const tt=K*I+j;for(let et=0;et<b;++et){const st=Math.max(0,Math.ceil((V-et)/d));const it=Math.min(f.outWidth,(f.inWidth+V-et)/d);const ft=et*T+tt;for(let gt=0;gt<f.inChannels;++gt){const kt=gt*E+ft;for(let vt=0;vt<f.outChannels;++vt){let dt=0;for(let $t=0;$t<f.batchSize;++$t){const Rt=$t*x;const Ze=$t*L;for(let zt=G;zt<H;++zt){const Je=W+zt*h-U;const he=Je*A+Rt;const Sn=zt*P+Ze;for(let ve=Y;ve<Q;++ve){const Ve=K+ve*p-z;const hn=Ve*O+he;const pn=ve*M+Sn;for(let dn=st;dn<it;++dn){const ts=et+dn*d-V;const po=ts*F+hn;const mo=dn*B+pn;dt+=$[po+gt]*D[mo+vt]}}}}w[kt+vt]=dt}}}}}return n.makeTensorInfo(_.shape,_.dtype,_.values)}const H6={kernelName:Gh,backendName:"cpu",kernelFunc:W6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q6(e){const{inputs:t,backend:n,attrs:s}=e;const{dy:r,filter:o}=t;const{pad:i,strides:a,inputShape:l}=s;J([r],"conv3dBackpropInputV2");const c=nt(r.shape);const u=nt(o.shape);const f=to(l,o.shape,a,1,i);const h=new Ut(f.inShape,"float32");const p=h.values;const[d,g,m,b]=h.strides;const _=n.data.get(r.dataId).values;const[w,N,I,T]=c;const E=n.data.get(o.dataId).values;const[D,L,P,M]=u;const{batchSize:B,filterDepth:$,filterHeight:x,filterWidth:A,inChannels:O,inDepth:F,inHeight:U,inWidth:V,outChannels:z,outDepth:W,outHeight:G,outWidth:H,strideDepth:j,strideHeight:K,strideWidth:Y}=f;const Q=$-1-f.padInfo.front;const tt=x-1-f.padInfo.top;const et=A-1-f.padInfo.left;for(let st=0;st<B;++st){for(let it=0;it<O;++it){for(let ft=0;ft<F;++ft){const gt=ft-Q;const kt=Math.max(0,Math.ceil(gt/j));const vt=Math.min(W,($+gt)/j);for(let dt=0;dt<U;++dt){const $t=dt-tt;const Rt=Math.max(0,Math.ceil($t/K));const Ze=Math.min(G,(x+$t)/K);for(let zt=0;zt<V;++zt){const Je=zt-et;const he=Math.max(0,Math.ceil(Je/Y));const Sn=Math.min(H,(A+Je)/Y);let ve=0;for(let Ve=kt;Ve<vt;++Ve){const hn=Ve*j-gt;for(let pn=Rt;pn<Ze;++pn){const dn=pn*K-$t;for(let ts=he;ts<Sn;++ts){const po=ts*Y-Je;const mo=w*st+N*Ve+I*pn+T*ts;const kh=D*($-1-hn)+L*(x-1-dn)+P*(A-1-po)+M*it;for(let ir=0;ir<z;++ir){const Th=_[mo+ir];const Sh=E[kh+ir];ve+=Th*Sh}}}}p[d*st+g*ft+m*dt+b*zt+it]=ve}}}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}const G6={kernelName:Dc,backendName:"cpu",kernelFunc:q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6=pt(xi,e=>Math.cos(e));const j6={kernelName:xi,backendName:"cpu",kernelFunc:K6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X6=pt($i,e=>Math.cosh(e));const Y6={kernelName:$i,backendName:"cpu",kernelFunc:X6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z6(e){const{inputs:t,backend:n,attrs:s}=e;const{image:r,boxes:o,boxInd:i}=t;const{cropSize:a,method:l,extrapolationValue:c}=s;const[u,f,h,p]=r.shape;const d=o.shape[0];const[g,m]=a;const b=at([d,g,m,p],"float32");const _=n.data.get(o.dataId).values;const w=n.data.get(i.dataId).values;const N=n.data.get(r.dataId).values;const I=nt(r.shape);const T=nt(b.shape);for(let E=0;E<d;E++){const D=E*4;const L=_[D];const P=_[D+1];const M=_[D+2];const B=_[D+3];const $=w[E];if($>=u){continue}const x=g>1?(M-L)*(f-1)/(g-1):0;const A=m>1?(B-P)*(h-1)/(m-1):0;for(let O=0;O<g;O++){const F=g>1?L*(f-1)+O*x:.5*(L+M)*(f-1);if(F<0||F>f-1){for(let U=0;U<m;U++){for(let V=0;V<p;V++){const z=V+U*T[2]+O*T[1]+E*T[0];b.values[z]=c}}continue}if(l==="bilinear"){const U=Math.floor(F);const V=Math.ceil(F);const z=F-U;for(let W=0;W<m;W++){const G=m>1?P*(h-1)+W*A:.5*(P+B)*(h-1);if(G<0||G>h-1){for(let Y=0;Y<p;Y++){const Q=Y+W*T[2]+O*T[1]+E*T[0];b.values[Q]=c}continue}const H=Math.floor(G);const j=Math.ceil(G);const K=G-H;for(let Y=0;Y<p;Y++){let Q=Y+H*I[2]+U*I[1]+$*I[0];const tt=N[Q];Q=Y+j*I[2]+U*I[1]+$*I[0];const et=N[Q];Q=Y+H*I[2]+V*I[1]+$*I[0];const st=N[Q];Q=Y+j*I[2]+V*I[1]+$*I[0];const it=N[Q];const ft=tt+(et-tt)*K;const gt=st+(it-st)*K;Q=Y+W*T[2]+O*T[1]+E*T[0];b.values[Q]=ft+(gt-ft)*z}}}else{for(let U=0;U<m;++U){const V=m>1?P*(h-1)+U*A:.5*(P+B)*(h-1);if(V<0||V>h-1){for(let G=0;G<p;G++){const H=G+U*T[2]+O*T[1]+E*T[0];b.values[H]=c}continue}const z=Math.round(V);const W=Math.round(F);for(let G=0;G<p;G++){const H=G+z*I[2]+W*I[1]+$*I[0];const j=G+U*T[2]+O*T[1]+E*T[0];b.values[j]=N[H]}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const J6={kernelName:Lc,backendName:"cpu",kernelFunc:Z6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q6(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{axis:o,exclusive:i,reverse:a}=s;J(r,"cumprod");const l=Xe([o],r.shape.length);let c=r;if(l!=null){c=re({inputs:{x:r},backend:n,attrs:{perm:l}})}const u=Ye(1,r.shape.length)[0];if(u!==c.shape.length-1){throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`)}const f=vs(c.dtype,"int32");const h=gi(q(c.shape),f);const p=n.data.get(c.dataId).values;const d=c.shape[c.shape.length-1];const g=a?(b,_)=>b+d-_-1:(b,_)=>b+_;for(let b=0;b<p.length;b+=d){for(let _=0;_<d;_++){const w=g(b,_);if(_===0){h[w]=i?1:p[w]}else{const N=g(b,_-1);h[w]=i?p[N]*h[N]:p[w]*h[N]}}}const m=n.makeTensorInfo(c.shape,f,h);if(l!=null){const b=B1(l);const _=re({inputs:{x:m},backend:n,attrs:{perm:b}});n.disposeIntermediateTensorInfo(m);n.disposeIntermediateTensorInfo(c);return _}return m}const t_={kernelName:Rc,backendName:"cpu",kernelFunc:Q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e_(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{axis:o,exclusive:i,reverse:a}=s;J(r,"cumsum");const l=Xe([o],r.shape.length);let c=r;if(l!=null){c=re({inputs:{x:r},backend:n,attrs:{perm:l}})}const u=Ye(1,r.shape.length)[0];if(u!==c.shape.length-1){throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`)}const f=vs(c.dtype,"int32");const h=Yt(q(c.shape),f);const p=n.data.get(c.dataId).values;const d=c.shape[c.shape.length-1];const g=a?(b,_)=>b+d-_-1:(b,_)=>b+_;for(let b=0;b<p.length;b+=d){for(let _=0;_<d;_++){const w=g(b,_);if(_===0){h[w]=i?0:p[w]}else{const N=g(b,_-1);h[w]=i?p[N]+h[N]:p[w]+h[N]}}}const m=n.makeTensorInfo(c.shape,f,h);if(l!=null){const b=B1(l);const _=re({inputs:{x:m},backend:n,attrs:{perm:b}});n.disposeIntermediateTensorInfo(m);n.disposeIntermediateTensorInfo(c);return _}return m}const n_={kernelName:Oc,backendName:"cpu",kernelFunc:e_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,weights:o}=t;const{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=n.data.get(r.dataId).values;const c=n.data.get(o.dataId).values;const u=Lf(l,c,o.dtype,o.shape,i);return n.makeTensorInfo([i],o.dtype,u)}else if(r.shape.length===2){const l=n.bufferSync(r);const c=n.bufferSync(o);const u=t8(l,c,i,a);return n.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const r_={kernelName:Fc,backendName:"cpu",kernelFunc:s_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{blockSize:o,dataFormat:i}=s;S(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0];const l=r.shape[1];const c=r.shape[2];const u=r.shape[3];const f=l*o;const h=c*o;const p=u/(o*o);const d=n.data.get(r.dataId).values;const g=new Float32Array(a*f*h*p);let m=0;for(let b=0;b<a;++b){for(let _=0;_<f;++_){const w=Math.floor(_/o);const N=_%o;for(let I=0;I<h;++I){const T=Math.floor(I/o);const E=I%o;const D=(N*o+E)*p;for(let L=0;L<p;++L){const P=L+D;const M=P+u*(T+c*(w+l*b));g[m++]=d[M]}}}}return n.makeTensorInfo([a,f,h,p],r.dtype,g)}const i_={kernelName:Pc,backendName:"cpu",kernelFunc:o_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zf(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,filter:o}=t;const{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;J([r,o],"depthwiseConv2DNative");const u=nt(r.shape);const f=nt(o.shape);let h=l;if(h==null){h=[1,1]}S(Fe(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const p=je(r.shape,o.shape,i,h,a,c,true);const{filterHeight:d,filterWidth:g,dilationHeight:m,dilationWidth:b,padInfo:_}=p;const w=_.left;const N=_.top;const I=p.outChannels/p.inChannels;const T=new Ut(p.outShape,r.dtype);const E=n.data.get(r.dataId).values;const D=n.data.get(o.dataId).values;const L=T.values;for(let P=0;P<p.batchSize;++P){const M=P*u[0];const B=P*T.strides[0];for(let $=0;$<p.outHeight;++$){const x=B+$*T.strides[1];const A=$*p.strideHeight-N;for(let O=0;O<d;++O){const F=A+O*m;if(F<0||F>=p.inHeight){continue}const U=O*f[0];const V=M+F*u[1];for(let z=0;z<p.outWidth;++z){const W=x+z*T.strides[2];const G=z*p.strideWidth-w;for(let H=0;H<g;++H){const j=G+H*b;if(j<0||j>=p.inWidth){continue}const K=U+H*f[1];const Y=V+j*p.inChannels;let Q=W;let tt=K;for(let et=0;et<p.inChannels;++et){const st=E[Y+et];for(let it=0;it<I;++it){L[Q+it]+=st*D[tt+it]}Q+=I;tt+=I}}}}}}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const a_={kernelName:Uc,backendName:"cpu",kernelFunc:Zf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l_(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,dy:o}=t;const{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s;J([r,o],"depthwiseConv2dNativeBackpropFilter");const f=je(r.shape,u,i,a,l,c,true);const{strideHeight:h,strideWidth:p,filterHeight:d,filterWidth:g}=f;const m=new Ut(f.filterShape,"float32");const b=f.padInfo.left;const _=f.padInfo.top;const w=f.outChannels/f.inChannels;const N=n.data.get(r.dataId).values;const I=new Ut(r.shape,r.dtype,N);const T=n.data.get(o.dataId).values;const E=new Ut(o.shape,o.dtype,T);for(let D=0;D<d;++D){const L=Math.max(0,Math.ceil((_-D)/h));const P=Math.min(f.outHeight,(f.inHeight+_-D)/h);for(let M=0;M<g;++M){const B=Math.max(0,Math.ceil((b-M)/p));const $=Math.min(f.outWidth,(f.inWidth+b-M)/p);for(let x=0;x<f.outChannels;++x){const A=Math.trunc(x/w);const O=x%w;let F=0;for(let U=0;U<f.batchSize;++U){for(let V=L;V<P;++V){const z=D+V*h-_;for(let W=B;W<$;++W){const G=M+W*p-b;F+=I.get(U,z,G,A)*E.get(U,V,W,x)}}}m.set(F,D,M,A,O)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const c_={kernelName:Mc,backendName:"cpu",kernelFunc:l_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(e){const{inputs:t,backend:n,attrs:s}=e;const{dy:r,filter:o}=t;const{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s;J([r,o],"depthwiseConv2DNativeBackpropInput");const f=nt(r.shape);const h=nt(o.shape);const p=je(u,o.shape,i,a,l,c,true);const d=new Ut(p.inShape,"float32");const g=d.values;const[m,b,_]=d.strides;const w=n.data.get(r.dataId).values;const[N,I,T]=f;const E=n.data.get(o.dataId).values;const[D,L,P]=h;const{batchSize:M,filterHeight:B,filterWidth:$,inChannels:x,inHeight:A,inWidth:O,outChannels:F,outHeight:U,outWidth:V,strideHeight:z,strideWidth:W}=p;const G=B-1-p.padInfo.top;const H=$-1-p.padInfo.left;const j=F/x;for(let K=0;K<M;++K){for(let Y=0;Y<x;++Y){for(let Q=0;Q<A;++Q){const tt=Q-G;const et=Math.max(0,Math.ceil(tt/z));const st=Math.min(U,(B+tt)/z);for(let it=0;it<O;++it){const ft=it-H;const gt=Math.max(0,Math.ceil(ft/W));const kt=Math.min(V,($+ft)/W);let vt=0;for(let dt=et;dt<st;++dt){const $t=dt*z-tt;for(let Rt=gt;Rt<kt;++Rt){const Ze=Rt*W-ft;const zt=N*K+I*dt+T*Rt;const Je=D*(B-1-$t)+L*($-1-Ze)+P*Y;for(let he=0;he<j;++he){const Sn=Y*j+he;const ve=w[zt+Sn];const Ve=E[Je+he];vt+=ve*Ve}}}g[m*K+b*Q+_*it+Y]=vt}}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const f_={kernelName:Vc,backendName:"cpu",kernelFunc:u_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h_(e){const{inputs:t,backend:n}=e;const{x:s}=t;const r=q(s.shape);const o=n.data.get(s.dataId).values;const i=at([r,r],s.dtype);const a=i.values;for(let c=0;c<o.length;c++){a[c*r+c]=o[c]}const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}const p_={kernelName:Bc,backendName:"cpu",kernelFunc:h_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d_={kernelName:Cc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e;const{strides:o,pad:i,dilations:a}=n;const l=t;const c=l.data.get(s.dataId).values;const u=s.shape.length;const f=l.data.get(r.dataId).values;const h=r.shape.length;const{batchSize:p,inHeight:d,inWidth:g,inChannels:m,outHeight:b,outWidth:_,padInfo:w,strideHeight:N,strideWidth:I,filterHeight:T,filterWidth:E,dilationHeight:D,dilationWidth:L,outShape:P}=xa(s.shape,r.shape,o,i,"NHWC",a);const M=q(P);const B=P.length;const $=Ht(s.dtype,M);for(let A=0;A<p;++A){for(let O=0;O<b;++O){const F=O*N-w.top;for(let U=0;U<_;++U){const V=U*I-w.left;for(let z=0;z<m;++z){let W=Number.MIN_SAFE_INTEGER;for(let H=0;H<T;++H){const j=F+H*D;if(j>=0&&j<d){for(let K=0;K<E;++K){const Y=V+K*L;if(Y>=0&&Y<g){const Q=He([A,j,Y,z],u,nt(s.shape));const tt=He([H,K,z],h,nt(r.shape));const et=c[Q]+f[tt];if(et>W){W=et}}}}}const G=He([A,O,U,z],B,nt(P));$[G]=W}}}}const x=l.write(Yn($,s.dtype),P,s.dtype);return{dataId:x,shape:P,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m_={kernelName:rl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:o}=e;const{strides:i,pad:a,dilations:l}=n;const c=t;const u=Se(s.shape,c.data.get(s.dataId).values);const f=Se(r.shape,c.data.get(r.dataId).values);const{batchSize:h,inHeight:p,inWidth:d,inChannels:g,outHeight:m,outWidth:b,padInfo:_,strideHeight:w,strideWidth:N,filterHeight:I,filterWidth:T,dilationHeight:E,dilationWidth:D,outShape:L}=xa(s.shape,r.shape,i,a,"NHWC",l);S(o.rank===L.length,()=>`Error in ${rl}, dy must have the same rank as output ${L.length}, but got ${o.rank}`);const P=Se(L,c.data.get(o.dataId).values);const M=lc(r.shape,r.dtype);for(let $=0;$<h;++$){for(let x=0;x<m;++x){const A=x*w-_.top;for(let O=0;O<b;++O){const F=O*N-_.left;for(let U=0;U<g;++U){let V=Number.MIN_SAFE_INTEGER;let z=0;let W=0;for(let G=0;G<I;++G){const H=A+G*E;if(H>=0&&H<p){for(let j=0;j<T;++j){const K=F+j*D;if(K>=0&&K<d){const Y=u[$][H][K][U]+f[G][j][U];if(Y>V){V=Y;z=G;W=j}}}}}M[z][W][U]+=P[$][x][O][U]}}}}const B=c.write(Yn(M,s.dtype),r.shape,r.dtype);return{dataId:B,shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_={kernelName:sl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:o}=e;const{strides:i,pad:a,dilations:l}=n;const c=t;const u=Se(s.shape,c.data.get(s.dataId).values);const f=Se(r.shape,c.data.get(r.dataId).values);const{batchSize:h,inHeight:p,inWidth:d,inChannels:g,outHeight:m,outWidth:b,padInfo:_,strideHeight:w,strideWidth:N,filterHeight:I,filterWidth:T,dilationHeight:E,dilationWidth:D,outShape:L}=xa(s.shape,r.shape,i,a,"NHWC",l);S(o.rank===L.length,()=>`Error in ${sl}, dy must have the same rank as output ${L.length}, but got ${o.rank}`);const P=Se(L,c.data.get(o.dataId).values);const M=lc(s.shape,s.dtype);for(let $=0;$<h;++$){for(let x=0;x<m;++x){const A=x*w-_.top;for(let O=0;O<b;++O){const F=O*N-_.left;for(let U=0;U<g;++U){let V=Number.MIN_SAFE_INTEGER;let z=A<0?0:A;let W=F<0?0:F;for(let G=0;G<I;++G){const H=A+G*E;if(H>=0&&H<p){for(let j=0;j<T;++j){const K=F+j*D;if(K>=0&&K<d){const Y=u[$][H][K][U]+f[G][j][U];if(Y>V){V=Y;z=H;W=K}}}}}M[$][z][W][U]+=P[$][x][O][U]}}}}const B=c.write(Yn(M,s.dtype),s.shape,s.dtype);return{dataId:B,shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rr(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{axis:o,keepDims:i}=s;J(r,"sum");let a;if(r.dtype==="bool"){a=In({inputs:{x:r},backend:n,attrs:{dtype:"int32"}})}else{a=Ge({inputs:{x:r},backend:n})}const l=a.shape.length;const c=Bt(o,a.shape);const u=Xe(c,l);let f=c;let h=a;if(u!=null){h=re({inputs:{x:a},backend:n,attrs:{perm:u}});f=Ye(f.length,l)}Zn("sum",f,h.shape.length);const[p,d]=un(h.shape,f);const g=vs(h.dtype,"int32");let m=Lr(n,p,g);const b=q(d);const _=n.data.get(m.dataId).values;const w=n.data.get(h.dataId).values;for(let N=0;N<_.length;++N){const I=N*b;let T=0;for(let E=0;E<b;++E){T+=w[I+E]}_[N]=T}if(i){const N=Ue(m.shape,c);const I=m;m=It({inputs:{x:m},backend:n,attrs:{shape:N}});n.disposeIntermediateTensorInfo(I)}n.disposeIntermediateTensorInfo(a);if(u!=null){n.disposeIntermediateTensorInfo(h)}return m}const y_={kernelName:Du,backendName:"cpu",kernelFunc:rr};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_(e){const{inputs:t,backend:n,attrs:s}=e;const{equation:r}=s;const o=t;const{allDims:i,summedDims:a,idDims:l}=Yy(r,o.length);Jy(i.length,l,o);const{path:c,steps:u}=Qy(a,l);const f=u.length;let h=null;let p=i.length;const d=[];for(let g=0;g<f;++g){for(const m of u[g]){const{permutationIndices:b,expandDims:_}=Zy(p,l[m]);let w;if(t9(b)){w=o[m]}else{w=re({inputs:{x:o[m]},backend:n,attrs:{perm:b}});d.push(w)}const N=w.shape.slice();for(let I=0;I<_.length;++I){N.splice(_[I],0,1)}if(!Oe(w.shape,N)){w=It({inputs:{x:w},backend:n,attrs:{shape:N}});d.push(w)}if(h===null){h=w}else{h=fo({inputs:{a:w,b:h},backend:n});d.push(h)}}if(g<f-1){if(c[g]>=0){h=rr({inputs:{x:h},backend:n,attrs:{axis:c[g]-(i.length-p),keepDims:false}});d.push(h)}p--}}for(const g of d){if(g===h){continue}n.disposeIntermediateTensorInfo(g)}return h}const __={kernelName:zc,backendName:"cpu",kernelFunc:b_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w_(e){const{inputs:t,backend:n}=e;const{dy:s,y:r}=t;J([s,r],"eluGrad");const o=new Float32Array(q(r.shape));const i=n.data.get(r.dataId).values;const a=n.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const c=i[l];if(c>=1){o[l]=a[l]}else{o[l]=a[l]*(c+1)}}return n.makeTensorInfo(r.shape,"float32",o)}const N_={kernelName:Kh,backendName:"cpu",kernelFunc:w_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I_=Uy;const k_=My;const T_=Vy;const S_=By;const E_=Cy;const v_=zy;const x_=pt(Ri,e=>{const t=Math.sign(e);const n=Math.abs(e);const s=1/(1+I_*n);return t*(1-((((v_*s+E_)*s+S_)*s+T_)*s+k_)*s*Math.exp(-n*n))});const $_={kernelName:Ri,backendName:"cpu",kernelFunc:x_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ur(e){const{inputs:t,backend:n,attrs:s}=e;const{input:r}=t;const{dim:o}=s;const i=r.shape.length;const a=r.shape.slice();let l=o;if(o<0){S(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`);l=i+o+1}a.splice(l,0,1);return It({inputs:{x:r},backend:n,attrs:{shape:a}})}const A_={kernelName:Wc,backendName:"cpu",kernelFunc:Ur};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D_=Ft((e,t)=>e/t);const ja=Ct(Ai,D_);const ri={kernelName:Ai,backendName:"cpu",kernelFunc:ja};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jf(e,t,n){const s=e.shape;const r=s[0];const o=s[1];const i=n.data.get(e.dataId);const a=i.complexTensorInfos.real;const l=i.complexTensorInfos.imag;const c=[r,o];const u=q(c);const f=Xt("float32",u);const h=Xt("float32",u);for(let m=0;m<r;m++){const b=Kn({inputs:{x:a},backend:n,attrs:{begin:[m,0],size:[1,o]}});const _=Kn({inputs:{x:l},backend:n,attrs:{begin:[m,0],size:[1,o]}});const w=le({inputs:{real:b,imag:_},backend:n});const{real:N,imag:I}=R_(w,t,n);const T=_s(N,I);for(let E=0;E<o;E++){const D=$f(T,E);f[m*o+E]=D.real;h[m*o+E]=D.imag}n.disposeIntermediateTensorInfo(b);n.disposeIntermediateTensorInfo(_);n.disposeIntermediateTensorInfo(w)}const p=n.makeTensorInfo(c,"float32",f);const d=n.makeTensorInfo(c,"float32",h);const g=le({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p);n.disposeIntermediateTensorInfo(d);return g}function R_(e,t,n){const s=q(e.shape);const r=n.data.get(e.dataId);const o=n.data.get(r.complexTensorInfos.real.dataId).values;const i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(O_(s)){const a=oi(o,i,s,t,n);const l=[e.shape[0],e.shape[1]];if(t){const c=n.makeTensorInfo(l,"float32",a.real);const u=n.makeTensorInfo(l,"float32",a.imag);const f=n.makeTensorInfo([],"float32",Ia(s,"float32"));const h=Ge({inputs:{x:f},backend:n});const p=ri.kernelFunc({inputs:{a:c,b:f},backend:n});const d=ri.kernelFunc({inputs:{a:u,b:h},backend:n});const g=n.data.get(p.dataId).values;const m=n.data.get(d.dataId).values;n.disposeIntermediateTensorInfo(c);n.disposeIntermediateTensorInfo(u);n.disposeIntermediateTensorInfo(f);n.disposeIntermediateTensorInfo(h);n.disposeIntermediateTensorInfo(p);n.disposeIntermediateTensorInfo(d);return{real:g,imag:m}}return a}else{const a=_s(o,i);const l=L_(a,s,t);return Wy(l)}}function O_(e){return(e&e-1)===0}function oi(e,t,n,s,r){if(n===1){return{real:e,imag:t}}const o=_s(e,t);const i=n/2;const a=Hy(o);const l=a.real;const c=a.imag;const u=[l.length];const f=r.makeTensorInfo(u,"float32",l);const h=r.makeTensorInfo(u,"float32",c);const p=le({inputs:{real:f,imag:h},backend:r});const d=qy(o);const g=d.real;const m=d.imag;const b=[g.length];const _=r.makeTensorInfo(b,"float32",g);const w=r.makeTensorInfo(b,"float32",m);const N=le({inputs:{real:_,imag:w},backend:r});const I=oi(l,c,i,s,r);const T=I.real;const E=I.imag;const D=[T.length];const L=r.makeTensorInfo(D,"float32",T);const P=r.makeTensorInfo(D,"float32",E);const M=le({inputs:{real:L,imag:P},backend:r});const B=oi(g,m,i,s,r);const $=B.real;const x=B.imag;const A=[$.length];const O=r.makeTensorInfo(A,"float32",$);const F=r.makeTensorInfo(A,"float32",x);const U=le({inputs:{real:O,imag:F},backend:r});const V=Ky(n,s);const z=[V.real.length];const W=r.makeTensorInfo(z,"float32",V.real);const G=r.makeTensorInfo(z,"float32",V.imag);const H=le({inputs:{real:W,imag:G},backend:r});const j=fo({inputs:{a:H,b:U},backend:r});const K=ws({inputs:{a:M,b:j},backend:r});const Y=Ga({inputs:{a:M,b:j},backend:r});const Q=Gn({inputs:{input:K},backend:r});const tt=Gn({inputs:{input:Y},backend:r});const et=Ns({inputs:{input:K},backend:r});const st=Ns({inputs:{input:Y},backend:r});const it=Is({inputs:[Q,tt],backend:r,attrs:{axis:0}});const ft=Is({inputs:[et,st],backend:r,attrs:{axis:0}});const gt=r.data.get(it.dataId).values;const kt=r.data.get(ft.dataId).values;r.disposeIntermediateTensorInfo(f);r.disposeIntermediateTensorInfo(h);r.disposeIntermediateTensorInfo(p);r.disposeIntermediateTensorInfo(_);r.disposeIntermediateTensorInfo(w);r.disposeIntermediateTensorInfo(N);r.disposeIntermediateTensorInfo(L);r.disposeIntermediateTensorInfo(P);r.disposeIntermediateTensorInfo(M);r.disposeIntermediateTensorInfo(O);r.disposeIntermediateTensorInfo(F);r.disposeIntermediateTensorInfo(U);r.disposeIntermediateTensorInfo(W);r.disposeIntermediateTensorInfo(G);r.disposeIntermediateTensorInfo(H);r.disposeIntermediateTensorInfo(j);r.disposeIntermediateTensorInfo(K);r.disposeIntermediateTensorInfo(Y);r.disposeIntermediateTensorInfo(Q);r.disposeIntermediateTensorInfo(et);r.disposeIntermediateTensorInfo(tt);r.disposeIntermediateTensorInfo(st);r.disposeIntermediateTensorInfo(it);r.disposeIntermediateTensorInfo(ft);return{real:gt,imag:kt}}function L_(e,t,n){const s=new Float32Array(t*2);for(let r=0;r<t;r++){let o=0;let i=0;for(let a=0;a<t;a++){const l=jy(r*a,t,n);const c=$f(e,a);o+=c.real*l.real-c.imag*l.imag;i+=c.real*l.imag+c.imag*l.real}if(n){o/=t;i/=t}Gy(s,o,i,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(e){const{inputs:t,backend:n}=e;const{input:s}=t;const r=q(s.shape);const o=s.shape[s.shape.length-1];const i=r/o;const a=It({inputs:{x:s},backend:n,attrs:{shape:[i,o]}});const l=Jf(a,false,n);const c=It({inputs:{x:l},backend:n,attrs:{shape:s.shape}});n.disposeIntermediateTensorInfo(a);n.disposeIntermediateTensorInfo(l);return c}const P_={kernelName:Hc,backendName:"cpu",kernelFunc:F_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xa(e){const{backend:t,attrs:n}=e;const{shape:s,value:r,dtype:o}=n;const i=o||Xr(r);const a=Ht(i,q(s));M_(a,r,i);return t.makeTensorInfo(s,i,a)}const U_={kernelName:qc,backendName:"cpu",kernelFunc:Xa};function M_(e,t,n){if(n==="string"){e.fill(t)}else{e.fill(t)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V_={kernelName:Gc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e;const r=n;const o=Xt(s.dtype,q(s.shape));const[i,a,l,c]=s.shape;const u=r.data.get(s.dataId).values;for(let h=0;h<i;h++){const p=h*l*a*c;for(let d=0;d<a;d++){const g=d*(l*c);for(let m=0;m<l;m++){const b=m*c;for(let _=0;_<c;_++){const w=Math.round(l-m-1);const N=p+g+b+_;let I=u[N];if(w>=0&&w<l){const T=w*c;const E=p+g+T+_;I=u[E]}o[N]=I}}}}const f=r.write(o,s.shape,s.dtype);return{dataId:f,shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B_=Ft((e,t)=>Math.floor(e/t));const C_=Ct(Ui,B_,null,"int32");const z_={kernelName:Ui,backendName:"cpu",kernelFunc:C_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,filter:o,bias:i,preluActivationWeights:a}=t;const{strides:l,pad:c,dataFormat:u,dilations:f,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=s;let g=Yf({inputs:{x:r,filter:o},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:f,dimRoundingMode:h}});if(i){const m=g;if(u==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const b=It({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});g=ws({inputs:{a:g,b},backend:n});n.disposeIntermediateTensorInfo(b)}else{g=ws({inputs:{a:g,b:i},backend:n})}n.disposeIntermediateTensorInfo(m)}if(p){const m=g;if(u==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const b=It({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});g=Pr(n,g,p,b,d);n.disposeIntermediateTensorInfo(b)}else{g=Pr(n,g,p,a,d)}n.disposeIntermediateTensorInfo(m)}return g}const H_={kernelName:vo,backendName:"cpu",kernelFunc:W_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,filter:o,bias:i,preluActivationWeights:a}=t;const{strides:l,pad:c,dataFormat:u,dilations:f,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=s;let g=Zf({inputs:{x:r,filter:o},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:f,dimRoundingMode:h}});if(i){const m=g;g=ws({inputs:{a:g,b:i},backend:n});n.disposeIntermediateTensorInfo(m)}if(p){const m=g;g=Pr(n,g,p,a,d);n.disposeIntermediateTensorInfo(m)}return g}const G_={kernelName:xo,backendName:"cpu",kernelFunc:q_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(e){const{inputs:t,backend:n}=e;const{params:s,indices:r}=t;const o=q(s.shape);const i=r.shape;const a=i[i.length-1];const[l,c,u,f]=Pd(s,r);if(c===0){return n.makeTensorInfo(l,s.dtype,[])}const h=n.data.get(r.dataId).values;const p=n.bufferSync(s);const d=m8(h,p,s.dtype,c,a,u,f,s.shape,o);return n.makeTensorInfo(l,s.dtype,d.values)}const j_={kernelName:Xc,backendName:"cpu",kernelFunc:K_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,indices:o}=t;const{axis:i,batchDims:a}=s;J([r,o],"gatherV2");const l=Bt(i,r.shape)[0];const c=n.data.get(o.dataId).values;const u=r.shape[l];for(let N=0;N<c.length;++N){const I=c[N];S(I<=u-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${u-1}]`)}let f=a;if(a==null){f=0}const h=q(o.shape);const p=d9(r,o,l,f);const d=It({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}});const g=It({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}});const m=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize];const b=n.bufferSync(g);const _=n.bufferSync(d);const w=g8(_,b,m);n.disposeIntermediateTensorInfo(d);n.disposeIntermediateTensorInfo(g);return n.makeTensorInfo(p.outputShape,w.dtype,w.values)}const Y_={kernelName:jc,backendName:"cpu",kernelFunc:X_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(e){const{inputs:t,backend:n}=e;const{input:s}=t;const r=q(s.shape);const o=s.shape[s.shape.length-1];const i=r/o;const a=It({inputs:{x:s},backend:n,attrs:{shape:[i,o]}});const l=Jf(a,true,n);const c=It({inputs:{x:l},backend:n,attrs:{shape:s.shape}});n.disposeIntermediateTensorInfo(a);n.disposeIntermediateTensorInfo(l);return c}const J_={kernelName:Yc,backendName:"cpu",kernelFunc:Z_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_=pt(Ci,e=>Number.isFinite(e)?1:0,"bool");const tw={kernelName:Ci,backendName:"cpu",kernelFunc:Q_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ew=pt(zi,e=>Math.abs(e)===Infinity?1:0,"bool");const nw={kernelName:zi,backendName:"cpu",kernelFunc:ew};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sw=pt(Wi,e=>Number.isNaN(e)?1:0,"bool");const rw={kernelName:Wi,backendName:"cpu",kernelFunc:sw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ow(e){const{backend:t,attrs:n}=e;const{start:s,stop:r,num:o}=n;const i=$8(s,r,o);return t.makeTensorInfo([i.length],"float32",i)}const iw={kernelName:Qc,backendName:"cpu",kernelFunc:ow};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aw=pt(Ki,e=>Math.log1p(e));const lw={kernelName:Ki,backendName:"cpu",kernelFunc:aw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cw=Ft((e,t)=>e&&t);const uw=Ct(ji,cw,null,"bool");const fw={kernelName:ji,backendName:"cpu",kernelFunc:uw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hw=pt(Xi,e=>e?0:1,"bool");const pw={kernelName:Xi,backendName:"cpu",kernelFunc:hw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dw=Ft((e,t)=>e||t);const mw=Ct(Yi,dw,null,"bool");const gw={kernelName:Yi,backendName:"cpu",kernelFunc:mw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{depthRadius:o,bias:i,alpha:a,beta:l}=s;J(r,"LRN");const c=r.shape[3];const u=c-1;const f=n.data.get(r.dataId).values;const h=q(r.shape);const p=new Float32Array(h);function d(g){const m=g%c;let b=g-m+Math.max(0,m-o);const _=g-m+Math.min(m+o,u);let w=0;for(;b<=_;b++){const N=f[b];w+=N*N}return w}for(let g=0;g<h;g++){const m=d(g);const b=f[g]*Math.pow(i+a*m,-l);p[g]=b}return n.makeTensorInfo(r.shape,r.dtype,p)}const bw={kernelName:tu,backendName:"cpu",kernelFunc:yw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _w(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,y:o,dy:i}=t;const{depthRadius:a,bias:l,alpha:c,beta:u}=s;J(i,"LRNGrad");const f=q(i.shape);const h=i.shape[3];const p=n.data.get(i.dataId).values;const d=n.data.get(r.dataId).values;const g=n.data.get(o.dataId).values;const m=new Float32Array(f);const b=f;for(let _=0;_<b;_++){const w=_%h;const N=_-w+Math.max(0,w-a);const I=_-w+Math.min(h,w+a+1);let T=0;for(let E=N;E<I;E++){T+=Math.pow(d[E],2)}T=c*T+l;for(let E=N;E<I;E++){let D=-2*c*u*d[E]*g[_]/T;if(_===E){D+=Math.pow(T,-u)}D*=p[_];m[E]+=D}}return n.makeTensorInfo(i.shape,r.dtype,m)}const ww={kernelName:jh,backendName:"cpu",kernelFunc:_w};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qf(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{reductionIndices:o,keepDims:i}=s;const a=n;let l=r.shape;const c=l.length;const u=Bt(o,l);let f=u;const h=Xe(f,c);let p=a.data.get(r.dataId).values;if(h!=null){const N=new Array(c);for(let I=0;I<N.length;I++){N[I]=l[h[I]]}p=Mf(p,l,r.dtype,h,N);f=Ye(f.length,c);l=N}J(r,"max");Zn("max",f,c);const[d,g]=un(l,f);const m=q(g);const b=O8(p,m,d,r.dtype);const _=a.write(b,d,r.dtype);let w=d;if(i){const N=Ue(d,u);w=N}return{dataId:_,shape:w,dtype:r.dtype}}const Nw={kernelName:eu,backendName:"cpu",kernelFunc:Qf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iw(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;J(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s;const c=1;S(Fe(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=xs(r.shape,o,i,c,a,l);let f;if(u.filterWidth===1&&u.filterHeight===1&&Oe(u.inShape,u.outShape)){f=Ge({inputs:{x:r},backend:n})}else{const h=n.data.get(r.dataId).values;const p=nt(r.shape);const d=Ka(h,r.shape,r.dtype,p,u,"max");f=n.makeTensorInfo(u.outShape,r.dtype,d.values)}return f}const kw={kernelName:nu,backendName:"cpu",kernelFunc:Iw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tw(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;J(r,"maxPool3d");const u=Qr(r.shape,o,i,1,a,l,c);const f=n.data.get(r.dataId).values;const h=Xf(f,r.shape,r.dtype,nt(r.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}const Sw={kernelName:su,backendName:"cpu",kernelFunc:Tw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ew(e){const{inputs:t,backend:n,attrs:s}=e;const{dy:r,input:o}=t;const{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;J([r,o],"maxPool3DGrad");const u=Qr(o.shape,i,a,1,l,c);const f=n.bufferSync(o);const h=p6(f,u);const p=u.strideDepth;const d=u.strideHeight;const g=u.strideWidth;const m=u.dilationDepth;const b=u.dilationHeight;const _=u.dilationWidth;const w=u.effectiveFilterDepth;const N=u.effectiveFilterHeight;const I=u.effectiveFilterWidth;const T=w-1-u.padInfo.front;const E=I-1-u.padInfo.left;const D=N-1-u.padInfo.top;const L=at(o.shape,"float32");const P=n.bufferSync(r);for(let M=0;M<u.batchSize;++M){for(let B=0;B<u.inChannels;++B){for(let $=0;$<u.inDepth;++$){for(let x=0;x<u.inHeight;++x){for(let A=0;A<u.inWidth;++A){const O=$-T;const F=x-D;const U=A-E;let V=0;for(let z=0;z<w;z+=m){const W=(O+z)/p;if(W<0||W>=u.outDepth||Math.floor(W)!==W){continue}for(let G=0;G<N;G+=b){const H=(F+G)/d;if(H<0||H>=u.outHeight||Math.floor(H)!==H){continue}for(let j=0;j<I;j+=_){const K=(U+j)/g;if(K<0||K>=u.outWidth||Math.floor(K)!==K){continue}const Y=w*N*I-1-h.get(M,W,H,K,B);const Q=z*N*I+G*I+j;const tt=Y===Q?1:0;if(tt===0){continue}const et=P.get(M,W,H,K,B);V+=et*tt}}}L.set(V,M,$,x,A,B)}}}}}return n.makeTensorInfo(L.shape,L.dtype,L.values)}const vw={kernelName:Yh,backendName:"cpu",kernelFunc:Ew};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xw(e){const{inputs:t,backend:n,attrs:s}=e;const{dy:r,input:o,output:i}=t;const a=o;J([o,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:f}=s;const h=xs(a.shape,l,c,1,u,f);const p=n.data.get(a.dataId).values;const d=at(h.outShape,a.dtype,jf(p,a.shape,a.dtype,h).values);const g=h.strideHeight;const m=h.strideWidth;const b=h.dilationHeight;const _=h.dilationWidth;const w=h.effectiveFilterHeight;const N=h.effectiveFilterWidth;const I=N-1-h.padInfo.left;const T=w-1-h.padInfo.top;const E=at(a.shape,"float32");const D=n.data.get(r.dataId).values;const L=at(r.shape,"float32",D);for(let P=0;P<h.batchSize;++P){for(let M=0;M<h.inChannels;++M){for(let B=0;B<h.inHeight;++B){for(let $=0;$<h.inWidth;++$){const x=B-T;const A=$-I;let O=0;for(let F=0;F<w;F+=b){const U=(x+F)/g;if(U<0||U>=h.outHeight||Math.floor(U)!==U){continue}for(let V=0;V<N;V+=_){const z=(A+V)/m;if(z<0||z>=h.outWidth||Math.floor(z)!==z){continue}const W=w*N-1-d.get(P,U,z,M);const G=F*N+V;const H=W===G?1:0;if(H===0){continue}const j=L.get(P,U,z,M);O+=j*H}}E.set(O,P,B,$,M)}}}}return n.makeTensorInfo(E.shape,E.dtype,E.values)}const $w={kernelName:Xh,backendName:"cpu",kernelFunc:xw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aw(e,t,n,s,r){const o=nt(t);const i=Ka(e,t,n,o,r,"max");const a=jf(e,t,n,r,true,s);return[i.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dw={kernelName:ru,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e;const{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=t;const l=n;J(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values;const u=xs(s.shape,r,o,[1,1],i);const[f,h]=Aw(c,s.shape,s.dtype,a,u);const p=l.write(f,u.outShape,s.dtype);const d=l.write(h,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:d,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rw(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{axis:o,keepDims:i}=s;const a=Bt(o,r.shape);const l=un(r.shape,a);const c=l[1];const u=q(c);const f=[];const h=n.makeTensorInfo([],"float32",new Float32Array([u]));f.push(h);const p=In({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});f.push(p);const d=ja({inputs:{a:p,b:h},backend:n});f.push(d);const g=rr({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:i}});f.forEach(m=>n.disposeIntermediateTensorInfo(m));return g}const Ow={kernelName:ou,backendName:"cpu",kernelFunc:Rw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lw(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{axis:o,keepDims:i}=s;J(r,"min");const a=Bt(o,r.shape);let l=a;const c=Xe(l,r.shape.length);let u=r;if(c!=null){u=re({inputs:{x:r},backend:n,attrs:{perm:c}});l=Ye(l.length,r.shape.length)}Zn("min",l,u.shape.length);const[f,h]=un(u.shape,l);const p=q(h);const d=Yt(q(f),u.dtype);const g=n.data.get(u.dataId).values;for(let b=0;b<d.length;++b){const _=b*p;let w=g[_];for(let N=0;N<p;++N){const I=g[_+N];if(Number.isNaN(I)||I<w){w=I}}d[b]=w}if(c!=null){n.disposeIntermediateTensorInfo(u)}const m=n.makeTensorInfo(f,u.dtype,d);if(i){const b=Ue(f,a);const _=It({inputs:{x:m},backend:n,attrs:{shape:b}});n.disposeIntermediateTensorInfo(m);return _}return m}const Fw={kernelName:iu,backendName:"cpu",kernelFunc:Lw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pw(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{paddings:o,mode:i}=s;J(r,"mirrorPad");const a=o.map((w,N)=>w[0]+r.shape[N]+w[1]);const l=o.map(w=>w[0]);const c=o.map((w,N)=>w[0]+r.shape[N]);const u=i==="reflect"?0:1;const f=n.data.get(r.dataId).values;const h=r.shape.length;const p=nt(r.shape);const d=q(a);const g=a.length;const m=nt(a);const b=Xt(r.dtype,d);for(let w=0;w<d;w++){let N=Es(w,g,m);for(let T=0;T<g;T++){if(N[T]<l[T]){N[T]=l[T]*2-N[T]-u}else if(N[T]>=c[T]){N[T]=(c[T]-1)*2-N[T]+u}}N=N.map((T,E)=>T-l[E]);const I=He(N,h,p);b[w]=f[I]}const _=n.write(b,a,r.dtype);return{dataId:_,shape:a,dtype:r.dtype}}const Uw={kernelName:au,backendName:"cpu",kernelFunc:Pw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mw=Ft((e,t)=>{const n=e%t;if(e<0&&t<0||e>=0&&t>=0){return n}else{return(n+t)%t}});const Vw=Ct(Qi,Mw);const Bw={kernelName:Qi,backendName:"cpu",kernelFunc:Vw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function th(e){const{inputs:t,backend:n,attrs:s}=e;const{logits:r}=t;const{dim:o}=s;const i=r.shape.length;let a=o;if(a===-1){a=i-1}if(a!==i-1){throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`)}const l=Bt([a],r.shape);const c=Qf({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:false}});const u=Ue(c.shape,l);const f=It({inputs:{x:c},backend:n,attrs:{shape:u}});const h=Ga({inputs:{a:r,b:f},backend:n});const p=Pf({inputs:{x:h},backend:n});const d=rr({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:false}});const g=It({inputs:{x:d},backend:n,attrs:{shape:u}});const m=ja({inputs:{a:p,b:g},backend:n});n.disposeIntermediateTensorInfo(c);n.disposeIntermediateTensorInfo(f);n.disposeIntermediateTensorInfo(h);n.disposeIntermediateTensorInfo(p);n.disposeIntermediateTensorInfo(d);n.disposeIntermediateTensorInfo(g);return m}const Cw={kernelName:Lu,backendName:"cpu",kernelFunc:th};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zw(e){const{inputs:t,backend:n,attrs:s}=e;const{logits:r}=t;const{numSamples:o,seed:i,normalized:a}=s;J(r,"multinomial");const l=a?r:th({inputs:{logits:r},backend:n,attrs:{dim:-1}});const c=l.shape[0];const u=l.shape[1];const f=n.data.get(l.dataId).values;const h=[c,o];const p=Yt(q(h),"int32");for(let d=0;d<c;++d){const g=d*u;const m=new Float32Array(u-1);m[0]=f[g];for(let w=1;w<m.length;++w){m[w]=m[w-1]+f[g+w]}const b=lo.alea(i.toString());const _=d*o;for(let w=0;w<o;++w){const N=b();p[_+w]=m.length;for(let I=0;I<m.length;I++){if(N<m[I]){p[_+w]=I;break}}}}if(!a){n.disposeIntermediateTensorInfo(l)}return n.makeTensorInfo(h,"int32",p)}const Ww={kernelName:lu,backendName:"cpu",kernelFunc:zw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hw=kf;function qw(e){const{inputs:t,backend:n,attrs:s}=e;const{boxes:r,scores:o}=t;const{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;J(r,"NonMaxSuppression");const c=n.data.get(r.dataId).values;const u=n.data.get(o.dataId).values;const{selectedIndices:f}=Hw(c,u,i,a,l);return n.makeTensorInfo([f.length],"int32",new Int32Array(f))}const Gw={kernelName:uu,backendName:"cpu",kernelFunc:qw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kw=Tf;function jw(e){const{inputs:t,backend:n,attrs:s}=e;const{boxes:r,scores:o}=t;const{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s;J(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values;const f=n.data.get(o.dataId).values;const{selectedIndices:h,validOutputs:p}=Kw(u,f,i,a,l,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const Xw={kernelName:fu,backendName:"cpu",kernelFunc:jw};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yw=Sf;function Zw(e){const{inputs:t,backend:n,attrs:s}=e;const{boxes:r,scores:o}=t;const{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s;J(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values;const f=n.data.get(o.dataId).values;const h=i;const p=a;const d=l;const g=c;const{selectedIndices:m,selectedScores:b}=Yw(u,f,h,p,d,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const Jw={kernelName:hu,backendName:"cpu",kernelFunc:Zw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qw(e){const{inputs:t,backend:n,attrs:s}=e;const{indices:r}=t;const{dtype:o,depth:i,onValue:a,offValue:l}=s;J(r,"oneHot");const c=q(r.shape);const u=new Float32Array(c*i);u.fill(l);const f=n.data.get(r.dataId).values;for(let h=0;h<c;++h){if(f[h]>=0&&f[h]<i){u[h*i+f[h]]=a}}return n.makeTensorInfo([...r.shape,i],o,u)}const tN={kernelName:du,backendName:"cpu",kernelFunc:Qw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mr(e){const{inputs:t,backend:n}=e;const{x:s}=t;if(s.dtype==="string"){throw new Error("zerosLike is not supported for string tensors")}else if(s.dtype==="complex64"){const r=Gn({inputs:{input:s},backend:n});const o=Mr({inputs:{x:r},backend:n});const i=Ns({inputs:{input:s},backend:n});const a=Mr({inputs:{x:i},backend:n});const l=le({inputs:{real:o,imag:a},backend:n});n.disposeIntermediateTensorInfo(r);n.disposeIntermediateTensorInfo(o);n.disposeIntermediateTensorInfo(i);n.disposeIntermediateTensorInfo(a);return l}else{return Xa({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}}const eN={kernelName:Xu,backendName:"cpu",kernelFunc:Mr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eh(e){const{inputs:t,backend:n}=e;const{x:s}=t;if(s.dtype==="string"){throw new Error("onesLike is not supported for string tensors")}else if(s.dtype==="complex64"){const r=Gn({inputs:{input:s},backend:n});const o=eh({inputs:{x:r},backend:n});const i=Ns({inputs:{input:s},backend:n});const a=Mr({inputs:{x:i},backend:n});const l=le({inputs:{real:o,imag:a},backend:n});n.disposeIntermediateTensorInfo(r);n.disposeIntermediateTensorInfo(o);n.disposeIntermediateTensorInfo(i);n.disposeIntermediateTensorInfo(a);return l}else{return Xa({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}}const nN={kernelName:pu,backendName:"cpu",kernelFunc:eh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nh(e){const{inputs:t,backend:n,attrs:s}=e;const{axis:r}=s;if(t.length===1){return Ur({inputs:{input:t[0]},backend:n,attrs:{dim:r}})}const o=t[0].shape;const i=t[0].dtype;t.forEach(u=>{ge(o,u.shape,"All tensors passed to stack must have matching shapes");S(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[];const l=t.map(u=>{const f=Ur({inputs:{input:u},backend:n,attrs:{dim:r}});a.push(f);return f});const c=Is({inputs:l,backend:n,attrs:{axis:r}});a.forEach(u=>n.disposeIntermediateTensorInfo(u));return c}const sN={kernelName:mu,backendName:"cpu",kernelFunc:nh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rN(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{paddings:o,constantValue:i}=s;J(r,"pad");const a=o.map((_,w)=>_[0]+r.shape[w]+_[1]);const l=o.map(_=>_[0]);const c=n.data.get(r.dataId).values;const u=q(r.shape);const f=r.shape.length;const h=nt(r.shape);const p=q(a);const d=a.length;const g=nt(a);const m=Xt(r.dtype,p);if(i!==0){m.fill(i)}for(let _=0;_<u;_++){const w=Es(_,f,h);const N=w.map((T,E)=>T+l[E]);const I=He(N,d,g);m[I]=c[_]}const b=n.write(m,a,r.dtype);return{dataId:b,shape:a,dtype:r.dtype}}const sh={kernelName:gu,backendName:"cpu",kernelFunc:rN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oN=Ft((e,t)=>Math.pow(e,t));const iN=Ct(na,oN);const aN={kernelName:na,backendName:"cpu",kernelFunc:iN};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(e){const{inputs:t,backend:n,attrs:s}=e;const{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=t;const a=r.map(m=>n.data.get(m.dataId).values);const l=r.map(m=>m.shape);const c=n.data.get(o.dataId).values;const u=n.data.get(i.dataId).values;const[f,h,p]=rb(a,l,c,o.shape,o.dtype,u,i.shape);const d=f.map(m=>n.makeTensorInfo([m.length],"int32",m));const g=n.makeTensorInfo(p,o.dtype,h);return d.concat([g])}const cN={kernelName:_u,backendName:"cpu",kernelFunc:lN};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(e){const{inputs:t,backend:n,attrs:s}=e;const{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=t;const{rowPartitionTypes:l}=s;const c=n.data.get(r.dataId).values;const u=n.data.get(o.dataId).values;const f=n.data.get(i.dataId).values;const h=a.map(m=>n.data.get(m.dataId).values);const p=a.map(m=>m.shape);const[d,g]=ob(c,r.shape,u,o.shape,o.dtype,f,i.shape,h,p,l);return n.makeTensorInfo(d,o.dtype,g)}const fN={kernelName:wu,backendName:"cpu",kernelFunc:uN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(e){const{backend:t,attrs:n}=e;const{start:s,stop:r,dtype:o,step:i}=n;const a=ib(s,r,i,o);return t.makeTensorInfo([a.length],o,a)}const pN={kernelName:Nu,backendName:"cpu",kernelFunc:hN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dN=pt(sa,e=>1/e);const mN={kernelName:sa,backendName:"cpu",kernelFunc:dN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(e){const{inputs:t,backend:n,attrs:s}=e;const{images:r}=t;const{alignCorners:o,halfPixelCenters:i,size:a}=s;J(r,"resizeBilinear");const l=nt(r.shape);const[c,u]=a;const[f,h,p,d]=r.shape;const g=n.data.get(r.dataId).values;const m=new Float32Array(q([f,c,u,d]));const b=[o&&c>1?h-1:h,o&&u>1?p-1:p];const _=[o&&c>1?c-1:c,o&&u>1?u-1:u];let w=0;const N=b[0]/_[0];const I=b[1]/_[1];for(let T=0;T<f;T++){for(let E=0;E<c;E++){let D;if(i){D=N*(E+.5)-.5}else{D=N*E}const L=Math.max(0,Math.floor(D));const P=D-L;const M=Math.min(h-1,Math.ceil(D));const B=T*l[0]+L*l[1];const $=T*l[0]+M*l[1];for(let x=0;x<u;x++){let A;if(i){A=I*(x+.5)-.5}else{A=I*x}const O=Math.max(0,Math.floor(A));const F=A-O;const U=Math.min(p-1,Math.ceil(A));const V=B+O*l[2];const z=$+O*l[2];const W=B+U*l[2];const G=$+U*l[2];for(let H=0;H<d;H++){const j=g[V+H];const K=g[z+H];const Y=g[W+H];const Q=g[G+H];const tt=j+(Y-j)*F;const et=K+(Q-K)*F;const st=tt+(et-tt)*P;m[w++]=st}}}}return n.makeTensorInfo([f,c,u,d],"float32",m)}const yN={kernelName:Su,backendName:"cpu",kernelFunc:gN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bN(e){const{inputs:t,backend:n,attrs:s}=e;const{images:r,dy:o}=t;const{alignCorners:i}=s;J([o,r],"resizeBilinearGrad");const a=nt(r.shape);const[l,c,u,f]=r.shape;const[,h,p]=o.shape;const d=new Float32Array(l*c*u*f);const g=[i&&h>1?c-1:c,i&&p>1?u-1:u];const m=[i&&h>1?h-1:h,i&&p>1?p-1:p];const b=g[0]/m[0];const _=g[1]/m[1];const w=n.data.get(o.dataId).values;let N=0;for(let I=0;I<l;I++){const T=I*a[0];for(let E=0;E<h;E++){const D=E*b;const L=Math.floor(D);const P=Math.min(Math.ceil(D),c-1);const M=T+L*a[1];const B=T+P*a[1];const $=D-L;const x=1-$;for(let A=0;A<p;A++){const O=A*_;const F=Math.floor(O);const U=Math.min(Math.ceil(O),u-1);const V=O-F;const z=1-V;const W=M+F*a[2];const G=M+U*a[2];const H=B+F*a[2];const j=B+U*a[2];const K=x*z;const Y=x*V;const Q=$*z;const tt=$*V;for(let et=0;et<f;et++){const st=w[N++];d[W+et]+=st*K;d[G+et]+=st*Y;d[H+et]+=st*Q;d[j+et]+=st*tt}}}}return n.makeTensorInfo([l,u,c,f],"float32",d)}const _N={kernelName:Jh,backendName:"cpu",kernelFunc:bN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(e){const{inputs:t,backend:n,attrs:s}=e;const{images:r}=t;const{alignCorners:o,halfPixelCenters:i,size:a}=s;J(r,"resizeNearestNeighbor");const l=nt(r.shape);const[c,u]=a;const[f,h,p,d]=r.shape;const g=n.data.get(r.dataId).values;const m=new Float32Array(f*c*u*d);const b=[o&&c>1?h-1:h,o&&u>1?p-1:p];const _=[o&&c>1?c-1:c,o&&u>1?u-1:u];const w=b[0]/_[0];const N=b[1]/_[1];let I=0;for(let T=0;T<f;T++){const E=T*l[0];for(let D=0;D<c;D++){const L=i?w*(D+.5):w*D;let P=Math.min(h-1,o?Math.round(L):Math.floor(L));if(i){P=Math.max(0,P)}const M=E+P*l[1];for(let B=0;B<u;B++){const $=i?N*(B+.5):N*B;let x=Math.min(p-1,o?Math.round($):Math.floor($));if(i){x=Math.max(0,x)}const A=M+x*l[2];for(let O=0;O<d;O++){const F=g[A+O];m[I++]=F}}}}return n.makeTensorInfo([f,c,u,d],r.dtype,m)}const NN={kernelName:Tu,backendName:"cpu",kernelFunc:wN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(e){const{inputs:t,backend:n,attrs:s}=e;const{images:r,dy:o}=t;const{alignCorners:i}=s;J([o,r],"resizeNearestNeighborGrad");const a=nt(r.shape);const l=nt(o.shape);const[c,u,f,h]=r.shape;const[,p,d]=o.shape;const g=new Float32Array(c*u*f*h);const m=n.data.get(o.dataId).values;const b=[i&&p>1?u-1:u,i&&d>1?f-1:f];const _=[i&&p>1?p-1:p,i&&d>1?d-1:d];const w=b[0]/_[0];const N=b[1]/_[1];const I=1/w;const T=1/N;const E=Math.ceil(I)*2+2;const D=Math.ceil(T)*2+2;for(let L=0;L<c;L++){const P=L*a[0];for(let M=0;M<u;M++){const B=P+M*a[1];const $=Math.floor(M*I);const x=Math.floor($-E/2);for(let A=0;A<f;A++){const O=B+A*a[2];const F=Math.floor(A*T);const U=Math.floor(F-D/2);for(let V=0;V<h;V++){let z=0;for(let W=0;W<E;W++){const G=W+x;if(G<0||G>=p){continue}const H=P+G*l[1];const j=G*w;const K=Math.min(u-1,i?Math.round(j):Math.floor(j));if(M!==K){continue}for(let Y=0;Y<D;Y++){const Q=Y+U;if(Q<0||Q>=d){continue}const tt=H+Q*l[2];const et=Q*N;const st=Math.min(f-1,i?Math.round(et):Math.floor(et));if(A===st){z+=m[tt+V]}}}g[O+V]=z}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}const kN={kernelName:Zh,backendName:"cpu",kernelFunc:IN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{dims:o}=s;J(r,"reverse");const i=r.shape.length;const a=Bt(o,r.shape);if(i===0){return Ge({inputs:{x:r},backend:n})}const l=new Ut(r.shape,r.dtype);const c=n.bufferSync(r);for(let u=0;u<l.size;u++){const f=l.indexToLoc(u);const h=f.slice();a.forEach(p=>h[p]=r.shape[p]-1-h[p]);l.set(c.get(...h),...f)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const SN={kernelName:Eu,backendName:"cpu",kernelFunc:TN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EN={kernelName:Yu,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e;const{radians:r,fillValue:o,center:i}=t;const a=n;const l=Xt(s.dtype,q(s.shape));const[c,u,f,h]=s.shape;const[p,d]=Ry(i,u,f);const g=255;const m=Math.sin(r);const b=Math.cos(r);const _=a.data.get(s.dataId).values;for(let N=0;N<c;N++){const I=N*f*u*h;for(let T=0;T<u;T++){const E=T*(f*h);for(let D=0;D<f;D++){const L=D*h;for(let P=0;P<h;P++){const M=[c,T,D,P];const B=M[2];const $=M[1];let x=(B-p)*b-($-d)*m;let A=(B-p)*m+($-d)*b;x=Math.round(x+p);A=Math.round(A+d);let O=o;if(typeof o!=="number"){if(P===3){O=g}else{O=o[P]}}if(x>=0&&x<f&&A>=0&&A<u){const U=A*(f*h);const V=x*h;const z=I+U+V+P;O=_[z]}const F=I+E+L+P;l[F]=O}}}}const w=a.write(l,s.shape,s.dtype);return{dataId:w,shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vN=pt(ia,e=>{const t=Math.floor(e);if(e-t<.5){return Math.floor(e)}else if(e-t>.5){return Math.ceil(e)}else{if(t%2===0){return t}else{return t+1}}});const xN={kernelName:ia,backendName:"cpu",kernelFunc:vN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(e){const{inputs:t,backend:n,attrs:s}=e;const{indices:r,updates:o}=t;const{shape:i}=s;const{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:f}=A1(o,r,i);const h=true;const p=n.bufferSync(r);const d=n.bufferSync(o);const g=Us(p,d,i,f,c,l,a,u,0,h);return n.makeTensorInfo(i,g.dtype,g.values)}const AN={kernelName:vu,backendName:"cpu",kernelFunc:$N};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(e,t){let n=0;let s=e.length;let r=0;while(n<s){r=Math.floor((n+s)/2);if(e[r]<t){n=r+1}else{s=r}}return s}function RN(e,t){let n=0;let s=e.length;let r=0;while(n<s){r=Math.floor((n+s)/2);if(e[r]<=t){n=r+1}else{s=r}}return s}function ON(e,t,n,s,r,o){const i=Ht("int32",n*r);for(let a=0;a<n;++a){const l=e.slice(a*s,(a+1)*s);const c=a*r;for(let u=0;u<r;++u){i[c+u]=o==="left"?DN(l,t[u+c]):RN(l,t[u+c])}}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(e){const{inputs:t,backend:n,attrs:s}=e;const{sortedSequence:r,values:o}=t;const{side:i}=s;const a=n.data.get(r.dataId).values;const l=n.data.get(o.dataId).values;const c=ON(a,l,r.shape[0],r.shape[1],o.shape[1],i);return n.makeTensorInfo(o.shape,"int32",c)}const FN={kernelName:xu,backendName:"cpu",kernelFunc:LN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(e){const{inputs:t,backend:n}=e;const{condition:s,t:r,e:o}=t;J([s,r,o],"select");const i=s.shape.length;const a=n.data.get(s.dataId).values;const l=n.data.get(r.dataId).values;const c=n.data.get(o.dataId).values;const u=vs(r.dtype,o.dtype);const f=Yt(q(r.shape),u);let h=0;const p=i===0||i>1||r.shape.length===1?1:q(r.shape.slice(1));for(let d=0;d<a.length;d++){for(let g=0;g<p;g++){if(a[d]===1){f[h++]=l[d]}else{f[h++]=c[d]}}}return n.makeTensorInfo(r.shape,u,f)}const UN={kernelName:$u,backendName:"cpu",kernelFunc:PN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MN=Fy;const VN=Py;const BN=pt(la,e=>{if(e>=0){return VN*e}else{return MN*(Math.exp(e)-1)}});const CN={kernelName:la,backendName:"cpu",kernelFunc:BN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zN=pt(fa,e=>{if(e<0){return-1}else if(e>0){return 1}else{return 0}});const WN={kernelName:fa,backendName:"cpu",kernelFunc:zN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HN=pt(ca,e=>Math.sin(e));const qN={kernelName:ca,backendName:"cpu",kernelFunc:HN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GN=pt(ua,e=>Math.sinh(e));const KN={kernelName:ua,backendName:"cpu",kernelFunc:GN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jN=11920928955078125e-23;const Vl=Math.log(jN)+2;const XN=pt(pa,e=>{const t=e>-Vl;const n=e<Vl;const s=Math.exp(e);let r;if(n){r=s}else if(t){r=e}else{r=Math.log(1+s)}return r});const YN={kernelName:pa,backendName:"cpu",kernelFunc:XN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{blockShape:o,paddings:i}=s;J([r],"spaceToBatchND");const a=q(o);const l=[[0,0]];l.push(...i);for(let T=1+o.length;T<r.shape.length;++T){l.push([0,0])}const c=sh.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}});const u=Ef(c.shape,o,a,false);const f=vf(u.length,o.length,false);const h=xf(c.shape,o,a,false);const p={x:c};const d={shape:u};const g=It({inputs:p,backend:n,attrs:d});const m={x:g};const b={perm:f};const _=re({inputs:m,backend:n,attrs:b});const w={x:_};const N={shape:h};const I=It({inputs:w,backend:n,attrs:N});n.disposeIntermediateTensorInfo(c);n.disposeIntermediateTensorInfo(g);n.disposeIntermediateTensorInfo(_);return I}const JN={kernelName:Ru,backendName:"cpu",kernelFunc:ZN};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(e){const{inputs:t,backend:n}=e;const{indices:s,values:r,denseShape:o,defaultValue:i}=t;if(o.shape.length!==1){throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`)}if(s.shape.length!==2){throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`)}if(r.shape.length!==1){throw new Error(`Values must be a vector, saw:
        ${r.shape}`)}if(i.shape.length!==0){throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`)}const a=n.data.get(s.dataId).values;const l=n.data.get(r.dataId).values;const c=n.data.get(o.dataId).values;const u=n.data.get(i.dataId).values[0];const[f,h,p,d,g]=pb(a,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(h,s.dtype,f),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(m=>Number(m)))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const tI={kernelName:Fu,backendName:"cpu",kernelFunc:QN};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eI(e){const{inputs:t,backend:n}=e;const{inputIndices:s,inputShape:r,newShape:o}=t;if(s.shape.length!==2){throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`)}if(r.shape.length!==1){throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`)}if(o.shape.length!==1){throw new Error(`Target shape should be a vector but received shape ${o.shape}`)}const i=Array.from(n.data.get(r.dataId).values);const a=n.data.get(s.dataId).values;const l=Array.from(n.data.get(o.dataId).values);const[c,u,f]=db(a,s.shape,s.dtype,i,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([f.length],o.dtype,new Int32Array(f))]}const nI={kernelName:Pu,backendName:"cpu",kernelFunc:eI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sI(e){const{inputs:t,backend:n}=e;const{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1){throw new Error(`Data should be at least 1 dimensional but received scalar`)}if(r.shape.length!==1){throw new Error(`Indices should be a vector but received shape
          ${r.shape}`)}if(o.shape.length!==1){throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`)}if(r.shape[0]!==o.shape[0]){throw new Error(`segmentIds and indices should have same size.`)}const i=n.data.get(s.dataId).values;const a=n.data.get(r.dataId).values;const l=n.data.get(o.dataId).values;const[c,u]=Bf(i,s.shape,s.dtype,a,l,true);return n.makeTensorInfo(u,s.dtype,c)}const rI={kernelName:Uu,backendName:"cpu",kernelFunc:sI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oI(e){const{inputs:t,backend:n}=e;const{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1){throw new Error(`Data should be at least 1 dimensional but received scalar`)}if(r.shape.length!==1){throw new Error(`Indices should be a vector but received shape
         ${r.shape}`)}if(o.shape.length!==1){throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`)}if(r.shape[0]!==o.shape[0]){throw new Error(`segmentIds and indices should have same size.`)}const i=n.data.get(s.dataId).values;const a=n.data.get(r.dataId).values;const l=n.data.get(o.dataId).values;const[c,u]=Bf(i,s.shape,s.dtype,a,l);return n.makeTensorInfo(u,s.dtype,c)}const iI={kernelName:Mu,backendName:"cpu",kernelFunc:oI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aI(e){const{inputs:t,backend:n,attrs:s}=e;const{sparseIndices:r,sparseValues:o,defaultValue:i}=t;const{outputShape:a}=s;const{sliceRank:l,numUpdates:c,sliceSize:u,strides:f,outputSize:h}=A1(o,r,a);const p=false;const d=n.bufferSync(r);let g;switch(o.dtype){case"bool":{const m=n.bufferSync(o);const b=Boolean(n.data.get(i.dataId).values[0]);g=Us(d,m,a,h,u,c,l,f,b,p);break}case"float32":{const m=n.bufferSync(o);const b=n.data.get(i.dataId).values[0];g=Us(d,m,a,h,u,c,l,f,b,p);break}case"int32":{const m=n.bufferSync(o);const b=n.data.get(i.dataId).values[0];g=Us(d,m,a,h,u,c,l,f,b,p);break}case"string":{const m=n.bufferSync(o);const b=Xs(n.data.get(i.dataId).values[0]);g=Us(d,m,a,h,u,c,l,f,b,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return n.makeTensorInfo(a,g.dtype,g.values)}const lI={kernelName:Vu,backendName:"cpu",kernelFunc:aI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cI(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{numOrSizeSplits:o,axis:i}=s;const a=Bt(i,r.shape)[0];const l=n9(r,o,a);const c=new Array(r.shape.length).fill(0);const u=r.shape.slice();return l.map(f=>{const h=[...u];h[a]=f;const p=Kn({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});c[a]+=f;return p})}const uI={kernelName:Ou,backendName:"cpu",kernelFunc:cI};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fI={kernelName:Qh,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e;const s=t;J(n,"square");const r=s.data.get(n.dataId).values;const o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];o[a]=l*l}const i=s.write(o,n.shape,n.dtype);return{dataId:i,shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hI=pt(wa,(e,t)=>{const n=t;if(isNaN(e)){return NaN}else{return e>0?1:n.alpha}});const pI={kernelName:wa,backendName:"cpu",kernelFunc:hI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dI(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{begin:o,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:f,shrinkAxisMask:h}=s;J(r,"stridedSlice");const{finalShapeSparse:p,finalShape:d,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:_,end:w,strides:N}=qd(r.shape,o,i,a,l,c,u,f,h);let I;if(g){I=It({inputs:{x:r},backend:n,attrs:{shape:d}})}else if(m||b){S(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const T=Cd(_,w,N);const E=Kn({inputs:{x:r},backend:n,attrs:{begin:_,size:T}});I=It({inputs:{x:E},backend:n,attrs:{shape:d}});n.disposeIntermediateTensorInfo(E)}else{const T=n.bufferSync(r);const E=wb(p,T,N,_);I=n.makeTensorInfo(d,E.dtype,E.values)}return I}const mI={kernelName:Bu,backendName:"cpu",kernelFunc:dI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gI(e){const{inputs:t,backend:n,attrs:s}=e;const{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s;const{data:u,dataSplits:f}=t;const h=n.data.get(u.dataId).values;const p=n.data.get(f.dataId).values;const[d,g]=Ib(h,p,r,o,i,a,l,c);return[n.makeTensorInfo([d.length],"string",d),n.makeTensorInfo(f.shape,"int32",g)]}const yI={kernelName:Cu,backendName:"cpu",kernelFunc:gI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(e){const{inputs:t,backend:n,attrs:s}=e;const{skipEmpty:r}=s;const{input:o,delimiter:i}=t;if(o.dtype!=="string"){throw new Error("Input must be of datatype string")}if(o.shape.length!==1){throw new Error(`Input must be a vector, got shape: ${o.shape}`)}if(i.shape.length!==0){throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`)}const a=n.data.get(o.dataId).values;const l=n.data.get(i.dataId).values[0];const[c,u,f]=Tb(a,l,r);const h=u.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(f))]}const _I={kernelName:zu,backendName:"cpu",kernelFunc:bI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(e){const{inputs:t,backend:n,attrs:s}=e;const{numBuckets:r}=s;const{input:o}=t;if(o.dtype!=="string"){throw new Error("Input must be of datatype string")}if(r<=0){throw new Error(`Number of buckets must be at least 1`)}const i=n.data.get(o.dataId).values;const a=Sb(i,r);return n.makeTensorInfo(o.shape,"int32",a)}const NI={kernelName:Wu,backendName:"cpu",kernelFunc:wI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const II=pt(ya,e=>Math.tan(e));const kI={kernelName:ya,backendName:"cpu",kernelFunc:II};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TI=pt(ba,e=>Math.tanh(e));const SI={kernelName:ba,backendName:"cpu",kernelFunc:TI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EI(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{reps:o}=s;J(r,"tile");const i=$b(n.bufferSync(r),o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const vI={kernelName:_a,backendName:"cpu",kernelFunc:EI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xI(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r}=t;const{k:o,sorted:i}=s;J(r,"topk");const a=n.data.get(r.dataId).values;const[l,c]=Ab(a,r.shape,r.dtype,o,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}const $I={kernelName:Hu,backendName:"cpu",kernelFunc:xI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AI(e){const{inputs:t,attrs:n,backend:s}=e;const{image:r,transforms:o}=t;const{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=n;const[u,f,h,p]=r.shape;const[d,g]=c!=null?c:[f,h];const m=[u,d,g,p];const b=nt(r.shape);const _=b[0];const w=b[1];const N=b[2];const I=nt(m);const T=I[0];const E=I[1];const D=I[2];const L=Xt(r.dtype,q(m));L.fill(l);const P=s.data.get(r.dataId).values;const M=s.data.get(o.dataId).values;for(let $=0;$<u;++$){const x=o.shape[0]===1?M:M.subarray($*8,$*8+8);for(let A=0;A<d;++A){for(let O=0;O<g;++O){for(let F=0;F<p;++F){let U;const V=x[6]*O+x[7]*A+1;if(V===0){continue}const z=(x[0]*O+x[1]*A+x[2])/V;const W=(x[3]*O+x[4]*A+x[5])/V;const G=Bl(z,h,a);const H=Bl(W,f,a);switch(i){case"nearest":U=PI(P,f,h,_,w,N,$,H,G,F,l);break;case"bilinear":U=UI(P,f,h,_,w,N,$,H,G,F,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const j=$*T+A*E+O*D+F;L[j]=U}}}return s.makeTensorInfo(m,r.dtype,L)}const B=s.write(L,m,r.dtype);return{dataId:B,shape:r.shape,dtype:r.dtype}}const DI={kernelName:qu,backendName:"cpu",kernelFunc:AI};function Bl(e,t,n){switch(n){case"reflect":return RI(e,t);case"wrap":return OI(e,t);case"nearest":return FI(e,t);case"constant":default:return LI(e)}}function RI(e,t){let n=e;if(n<0){if(t<=1){n=0}else{const s=2*t;if(n<s){n=s*Math.trunc(-n/s)+n}n=n<-t?n+s:-n-1}}else if(n>t-1){if(t<=1){n=0}else{const s=2*t;n-=s*Math.trunc(n/s);if(n>=t){n=s-n-1}}}return mi(0,n,t-1)}function OI(e,t){let n=e;if(n<0){if(t<=1){n=0}else{const s=t-1;n+=t*(Math.trunc(-n/s)+1)}}else if(n>t-1){if(t<=1){n=0}else{const s=t-1;n-=t*Math.trunc(n/s)}}return mi(0,n,t-1)}function LI(e,t){return e}function FI(e,t){return mi(0,e,t-1)}function Vs(e,t,n,s,r,o,i,a,l,c,u){const f=i*s+a*r+l*o+c;if(0<=a&&a<t&&0<=l&&l<n){return e[f]}else{return u}}function PI(e,t,n,s,r,o,i,a,l,c,u){const f=Math.round(a);const h=Math.round(l);return Vs(e,t,n,s,r,o,i,f,h,c,u)}function UI(e,t,n,s,r,o,i,a,l,c,u){const f=Math.floor(a);const h=Math.floor(l);const p=f+1;const d=h+1;const g=(d-l)*Vs(e,t,n,s,r,o,i,f,h,c,u)+(l-h)*Vs(e,t,n,s,r,o,i,f,d,c,u);const m=(d-l)*Vs(e,t,n,s,r,o,i,p,h,c,u)+(l-h)*Vs(e,t,n,s,r,o,i,p,d,c,u);return(p-a)*g+(a-f)*m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(e){const{inputs:t,attrs:n,backend:s}=e;const{axis:r}=n;const{x:o}=t;J(o,"unique");const i=s.data.get(o.dataId).values;const{outputValues:a,outputShape:l,indices:c}=Db(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const VI={kernelName:Gu,backendName:"cpu",kernelFunc:MI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BI(e){const{inputs:t,backend:n,attrs:s}=e;const{value:r}=t;let{axis:o}=s;if(o<0){o+=r.shape.length}const i=r.shape.length;const a=r.shape[o];const l=new Array(i-1);let c=0;for(let p=0;p<i;p++){if(p!==o){l[c++]=r.shape[p]}}const u=new Array(i).fill(0);const f=r.shape.slice();f[o]=1;const h=new Array(a);for(let p=0;p<h.length;p++){u[o]=p;const d=Kn({inputs:{x:r},backend:n,attrs:{begin:u,size:f}});h[p]=It({inputs:{x:d},backend:n,attrs:{shape:l}});n.disposeIntermediateTensorInfo(d)}return h}const CI={kernelName:Ku,backendName:"cpu",kernelFunc:BI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zI(e){const{inputs:t,backend:n,attrs:s}=e;const{x:r,segmentIds:o}=t;const{numSegments:i}=s;J(r,"unsortedSegmentSum");const a=r.shape.length;const l=o.shape.length;const c=[];const u=[];const f=a-l;let h=o;for(let d=0;d<f;++d){const g=Ur({inputs:{input:h},backend:n,attrs:{dim:d+1}});h=g;u.push(g)}for(let d=0;d<i;++d){const g=Ia(d,"int32");const m=n.makeTensorInfo([],"int32",g);const b=Ff({inputs:{a:m,b:h},backend:n});const _=In({inputs:{x:b},backend:n,attrs:{dtype:"float32"}});const w=fo({inputs:{a:_,b:r},backend:n});const N=rr({inputs:{x:w},backend:n,attrs:{axis:0,keepDims:false}});c.push(N);u.push(m);u.push(b);u.push(_);u.push(w);u.push(N)}const p=nh({inputs:c,backend:n,attrs:{axis:0}});u.forEach(d=>n.disposeIntermediateTensorInfo(d));return p}const WI={kernelName:ju,backendName:"cpu",kernelFunc:zI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI=[Cb,q3,Wb,qb,Q3,Kb,Xb,Zb,Qb,e6,s6,o6,a6,u6,h6,m6,y6,_6,N6,Vb,k6,S6,v6,$6,Y3,s8,D6,G3,O6,F6,P6,M6,B6,z6,H6,G6,j6,Y6,J6,t_,n_,r_,i_,a_,c_,f_,p_,d_,m_,g_,__,Rb,N_,i8,$_,l8,A_,f8,P_,U_,V_,d8,z_,H_,G_,j_,Y_,_8,I8,K3,J_,L6,tw,nw,rw,Ob,S8,x8,iw,R8,lw,fw,pw,gw,bw,ww,Nw,P8,kw,Sw,vw,$w,Dw,Ow,Fw,V8,Uw,Bw,Ww,C8,H8,Gw,Xw,Jw,K8,tN,nN,sN,sh,aN,Fb,Z8,cN,fN,pN,j3,ri,mN,Pb,Ub,Mb,yN,_N,NN,kN,SN,EN,xN,cb,AN,FN,UN,CN,ub,WN,qN,KN,hb,Cw,YN,JN,tI,nI,rI,iI,lI,uI,gb,fI,_b,pI,mI,yI,_I,NI,xb,y_,kI,SI,vI,$I,DI,j8,VI,CI,WI,eN];for(const e of HI){ep(e)}var qI=function(){function e(t,n){this.modelJSON=t;this.weights=n}e.prototype.load=function(){return Dn(this,void 0,void 0,function(){var t,n;var s=this;return Rn(this,function(r){t=this.modelJSON.modelTopology;n=this.modelJSON.weightsManifest;if(t===null&&n===null){throw new Error("The model contains neither model topology or manifest for weights.")}return[2,this.getModelArtifactsForJSON(this.modelJSON,function(o){return s.loadWeights(o)})]})})};e.prototype.getModelArtifactsForJSON=function(t,n){return Dn(this,void 0,void 0,function(){var s,r,o,i;return Rn(this,function(a){switch(a.label){case 0:s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(t.trainingConfig!==null){s.trainingConfig=t.trainingConfig}if(!(t.weightsManifest!==null))return[3,2];return[4,n(t.weightsManifest)];case 1:r=a.sent(),o=r[0],i=r[1];s.weightSpecs=o;s.weightData=i;a.label=2;case 2:if(t.signature!==null){s.signature=t.signature}if(t.userDefinedMetadata!==null){s.userDefinedMetadata=t.userDefinedMetadata}if(t.modelInitializer!==null){s.modelInitializer=t.modelInitializer}return[2,s]}})})};e.prototype.loadWeights=function(t){return Dn(this,void 0,void 0,function(){var n,s,r,o;return Rn(this,function(i){n=[];for(s=0,r=t;s<r.length;s++){o=r[s];n.push.apply(n,o.weights)}return[2,[n,this.weights]]})})};return e}();var GI=function(){function e(t){var n,s,r;this._modelJsonLoaderFunc=t===null||t===void 0?void 0:t.modelJsonLoaderFunc;this._weightsLoaderFunc=t===null||t===void 0?void 0:t.weightsLoaderFunc;this._minContentSize=(n=t===null||t===void 0?void 0:t.minContentSize)!==null&&n!==void 0?n:e.DEFAULT_MIN_CONTENT_SIZE;this._maxContentSize=(s=t===null||t===void 0?void 0:t.maxContentSize)!==null&&s!==void 0?s:e.DEFAULT_MAX_CONTENT_SIZE;this._normalizeNewline=(r=t===null||t===void 0?void 0:t.normalizeNewline)!==null&&r!==void 0?r:true}e.prototype.getModelJSON=function(){return Dn(this,void 0,void 0,function(){var t;return Rn(this,function(n){switch(n.label){case 0:if(this._modelJson){return[2,this._modelJson]}t=this;return[4,this._modelJsonLoaderFunc()];case 1:t._modelJson=n.sent();return[2,this._modelJson]}})})};e.prototype.getWeights=function(){return Dn(this,void 0,void 0,function(){var t;return Rn(this,function(n){switch(n.label){case 0:if(this._weights){return[2,this._weights]}t=this;return[4,this._weightsLoaderFunc()];case 1:t._weights=n.sent();return[2,this._weights]}})})};e.prototype.loadModel=function(){return Dn(this,void 0,void 0,function(){var t,n,s,r;return Rn(this,function(o){switch(o.label){case 0:if(this._model){return[2]}t=lt();t.set("IS_NODE",false);t.set("PROD",true);return[4,xd("cpu")];case 1:if(!o.sent()){throw new Error("Unable to set backend to CPU.")}return[4,this.getModelJSON()];case 2:n=o.sent();return[4,this.getWeights()];case 3:s=o.sent();r=this;return[4,B3(new qI(n,s))];case 4:r._model=o.sent();return[2]}})})};e.prototype.runModel=function(t){return Dn(this,void 0,void 0,function(){var n,s,r,o,i,a,c,l,c;return Rn(this,function(u){switch(u.label){case 0:if(!t||t.length<this._minContentSize){return[2,[]]}return[4,this.loadModel()];case 1:u.sent();if(t.length>=this._maxContentSize){t=t.substring(0,this._maxContentSize)}if(this._normalizeNewline){t=t.replace(/\r\n/g,"\n")}return[4,this._model.executeAsync(Re([t]))];case 2:n=u.sent();s=Array.isArray(n)?n[0]:n;r=Array.isArray(n)?n[1]:n;o=s.dataSync();i=r.dataSync();a=[];for(c=0;c<i.length;c++){a.push({languageId:i[c],confidence:o[c]})}l=0;for(c=0;c<o.length;c++){if(o[c]>o[l]){l=c}}return[2,a.sort(function(f,h){return h.confidence-f.confidence})]}})})};e.prototype.dispose=function(){var t;(t=this._model)===null||t===void 0?void 0:t.dispose()};e.DEFAULT_MAX_CONTENT_SIZE=1e5;e.DEFAULT_MIN_CONTENT_SIZE=20;return e}();const KI=globalThis.performance.now.bind(globalThis.performance);class ho{static create(t){return new ho(t)}constructor(t){this._now=t===false?Date.now:KI;this._startTime=this._now();this._stopTime=-1}stop(){this._stopTime=this._now()}reset(){this._startTime=this._now();this._stopTime=-1}elapsed(){if(this._stopTime!==-1){return this._stopTime-this._startTime}return this._now()-this._startTime}}class Vr{static{this.CHANNEL_NAME="languageDetectionWorkerHost"}static getChannel(t){return t.getChannel(Vr.CHANNEL_NAME)}static setChannel(t,n){t.setChannel(Vr.CHANNEL_NAME,n)}}function jI(e,t){const n=Object.create(null);for(const s of e){const r=t(s);let o=n[r];if(!o){o=n[r]=[]}o.push(s)}return n}class XI{constructor(){this.listeners=[];this.unexpectedErrorHandler=function(t){setTimeout(()=>{if(t.stack){if(ks.isErrorNoTelemetry(t)){throw new ks(t.message+"\n\n"+t.stack)}throw new Error(t.message+"\n\n"+t.stack)}throw t},0)}}addListener(t){this.listeners.push(t);return()=>{this._removeListener(t)}}emit(t){this.listeners.forEach(n=>{n(t)})}_removeListener(t){this.listeners.splice(this.listeners.indexOf(t),1)}setUnexpectedErrorHandler(t){this.unexpectedErrorHandler=t}getUnexpectedErrorHandler(){return this.unexpectedErrorHandler}onUnexpectedError(t){this.unexpectedErrorHandler(t);this.emit(t)}onUnexpectedExternalError(t){this.unexpectedErrorHandler(t)}}const YI=new XI;function gr(e){if(!ZI(e)){YI.onUnexpectedError(e)}return void 0}function ii(e){if(e instanceof Error){const{name:t,message:n,cause:s}=e;const r=e.stacktrace||e.stack;return{$isError:true,name:t,message:n,stack:r,noTelemetry:ks.isErrorNoTelemetry(e),cause:s?ii(s):void 0,code:e.code}}return e}const ai="Canceled";function ZI(e){if(e instanceof JI){return true}return e instanceof Error&&e.name===ai&&e.message===ai}class JI extends Error{constructor(){super(ai);this.name=this.message}}class ks extends Error{constructor(t){super(t);this.name="CodeExpectedError"}static fromError(t){if(t instanceof ks){return t}const n=new ks;n.message=t.message;n.stack=t.stack;return n}static isErrorNoTelemetry(t){return t.name==="CodeExpectedError"}}function QI(e,t){const n=this;let s=false;let r;return function(){if(s){return r}s=true;{r=e.apply(n,arguments)}return r}}var li;(function(e){function t(o){return o<0}e.isLessThan=t;function n(o){return o<=0}e.isLessThanOrEqual=n;function s(o){return o>0}e.isGreaterThan=s;function r(o){return o===0}e.isNeitherLessOrGreaterThan=r;e.greaterThan=1;e.lessThan=-1;e.neitherLessOrGreaterThan=0})(li||(li={}));function tk(e,t){return(n,s)=>t(e(n),e(s))}const ek=(e,t)=>e-t;class yr{static{this.empty=new yr(t=>{})}constructor(t){this.iterate=t}forEach(t){this.iterate(n=>{t(n);return true})}toArray(){const t=[];this.iterate(n=>{t.push(n);return true});return t}filter(t){return new yr(n=>this.iterate(s=>t(s)?n(s):true))}map(t){return new yr(n=>this.iterate(s=>n(t(s))))}some(t){let n=false;this.iterate(s=>{n=t(s);return!n});return n}findFirst(t){let n;this.iterate(s=>{if(t(s)){n=s;return false}return true});return n}findLast(t){let n;this.iterate(s=>{if(t(s)){n=s}return true});return n}findLastMaxBy(t){let n;let s=true;this.iterate(r=>{if(s||li.isGreaterThan(t(r,n))){s=false;n=r}return true});return n}}var Cl;class nk{constructor(t,n){this.uri=t;this.value=n}}function sk(e){return Array.isArray(e)}class is{static{this.defaultToKey=t=>t.toString()}constructor(t,n){this[Cl]="ResourceMap";if(t instanceof is){this.map=new Map(t.map);this.toKey=n??is.defaultToKey}else if(sk(t)){this.map=new Map;this.toKey=n??is.defaultToKey;for(const[s,r]of t){this.set(s,r)}}else{this.map=new Map;this.toKey=t??is.defaultToKey}}set(t,n){this.map.set(this.toKey(t),new nk(t,n));return this}get(t){return this.map.get(this.toKey(t))?.value}has(t){return this.map.has(this.toKey(t))}get size(){return this.map.size}clear(){this.map.clear()}delete(t){return this.map.delete(this.toKey(t))}forEach(t,n){if(typeof n!=="undefined"){t=t.bind(n)}for(const[s,r]of this.map){t(r.value,r.uri,this)}}*values(){for(const t of this.map.values()){yield t.value}}*keys(){for(const t of this.map.values()){yield t.uri}}*entries(){for(const t of this.map.values()){yield[t.uri,t.value]}}*[(Cl=Symbol.toStringTag,Symbol.iterator)](){for(const[,t]of this.map){yield[t.uri,t.value]}}}var zl;(function(e){e[e["None"]=0]="None";e[e["AsOld"]=1]="AsOld";e[e["AsNew"]=2]="AsNew"})(zl||(zl={}));class rk{constructor(){this.map=new Map}add(t,n){let s=this.map.get(t);if(!s){s=new Set;this.map.set(t,s)}s.add(n)}delete(t,n){const s=this.map.get(t);if(!s){return}s.delete(n);if(s.size===0){this.map.delete(t)}}forEach(t,n){const s=this.map.get(t);if(!s){return}s.forEach(n)}get(t){const n=this.map.get(t);if(!n){return new Set}return n}}function ok(e){return!!e&&typeof e[Symbol.iterator]==="function"}var Br;(function(e){function t(I){return I&&typeof I==="object"&&typeof I[Symbol.iterator]==="function"}e.is=t;const n=Object.freeze([]);function s(){return n}e.empty=s;function*r(I){yield I}e.single=r;function o(I){if(t(I)){return I}else{return r(I)}}e.wrap=o;function i(I){return I||n}e.from=i;function*a(I){for(let T=I.length-1;T>=0;T--){yield I[T]}}e.reverse=a;function l(I){return!I||I[Symbol.iterator]().next().done===true}e.isEmpty=l;function c(I){return I[Symbol.iterator]().next().value}e.first=c;function u(I,T){let E=0;for(const D of I){if(T(D,E++)){return true}}return false}e.some=u;function f(I,T){for(const E of I){if(T(E)){return E}}return void 0}e.find=f;function*h(I,T){for(const E of I){if(T(E)){yield E}}}e.filter=h;function*p(I,T){let E=0;for(const D of I){yield T(D,E++)}}e.map=p;function*d(I,T){let E=0;for(const D of I){yield*T(D,E++)}}e.flatMap=d;function*g(...I){for(const T of I){if(ok(T)){yield*T}else{yield T}}}e.concat=g;function m(I,T,E){let D=E;for(const L of I){D=T(D,L)}return D}e.reduce=m;function b(I){let T=0;for(const E of I){T++}return T}e.length=b;function*_(I,T,E=I.length){if(T<-I.length){T=0}if(T<0){T+=I.length}if(E<0){E+=I.length}else if(E>I.length){E=I.length}for(;T<E;T++){yield I[T]}}e.slice=_;function w(I,T=Number.POSITIVE_INFINITY){const E=[];if(T===0){return[E,I]}const D=I[Symbol.iterator]();for(let L=0;L<T;L++){const P=D.next();if(P.done){return[E,e.empty()]}E.push(P.value)}return[E,{[Symbol.iterator](){return D}}]}e.consume=w;async function N(I){const T=[];for await(const E of I){T.push(E)}return Promise.resolve(T)}e.asyncToArray=N})(Br||(Br={}));class rh{constructor(){this.livingDisposables=new Map}static{this.idx=0}getDisposableData(t){let n=this.livingDisposables.get(t);if(!n){n={parent:null,source:null,isSingleton:false,value:t,idx:rh.idx++};this.livingDisposables.set(t,n)}return n}trackDisposable(t){const n=this.getDisposableData(t);if(!n.source){n.source=new Error().stack}}setParent(t,n){const s=this.getDisposableData(t);s.parent=n}markAsDisposed(t){this.livingDisposables.delete(t)}markAsSingleton(t){this.getDisposableData(t).isSingleton=true}getRootParent(t,n){const s=n.get(t);if(s){return s}const r=t.parent?this.getRootParent(this.getDisposableData(t.parent),n):t;n.set(t,r);return r}getTrackedDisposables(){const t=new Map;const n=[...this.livingDisposables.entries()].filter(([,s])=>s.source!==null&&!this.getRootParent(s,t).isSingleton).flatMap(([s])=>s);return n}computeLeakingDisposables(t=10,n){let s;if(n){s=n}else{const l=new Map;const c=[...this.livingDisposables.values()].filter(f=>f.source!==null&&!this.getRootParent(f,l).isSingleton);if(c.length===0){return}const u=new Set(c.map(f=>f.value));s=c.filter(f=>{return!(f.parent&&u.has(f.parent))});if(s.length===0){throw new Error("There are cyclic diposable chains!")}}if(!s){return void 0}function r(l){function c(f,h){while(f.length>0&&h.some(p=>typeof p==="string"?p===f[0]:f[0].match(p))){f.shift()}}const u=l.source.split("\n").map(f=>f.trim().replace("at ","")).filter(f=>f!=="");c(u,["Error",/^trackDisposable \(.*\)$/,/^DisposableTracker.trackDisposable \(.*\)$/]);return u.reverse()}const o=new rk;for(const l of s){const c=r(l);for(let u=0;u<=c.length;u++){o.add(c.slice(0,u).join("\n"),l)}}s.sort(tk(l=>l.idx,ek));let i="";let a=0;for(const l of s.slice(0,t)){a++;const c=r(l);const u=[];for(let f=0;f<c.length;f++){let h=c[f];const p=o.get(c.slice(0,f+1).join("\n"));h=`(shared with ${p.size}/${s.length} leaks) at ${h}`;const d=o.get(c.slice(0,f).join("\n"));const g=jI([...d].map(m=>r(m)[f]),m=>m);delete g[c[f]];for(const[m,b]of Object.entries(g)){u.unshift(`    - stacktraces of ${b.length} other leaks continue with ${m}`)}u.unshift(h)}i+=`


==================== Leaking disposable ${a}/${s.length}: ${l.value.constructor.name} ====================
${u.join("\n")}
============================================================

`}if(s.length>t){i+=`


... and ${s.length-t} more leaking disposables

`}return{leaks:s,details:i}}}function ik(e){return e}function ak(e,t){}function oh(e){if(Br.is(e)){const t=[];for(const n of e){if(n){try{n.dispose()}catch(s){t.push(s)}}}if(t.length===1){throw t[0]}else if(t.length>1){throw new AggregateError(t,"Encountered errors while disposing of store")}return Array.isArray(e)?[]:e}else if(e){e.dispose();return e}}function lk(...e){const t=Ya(()=>oh(e));return t}function Ya(e){const t=ik({dispose:QI(()=>{e()})});return t}class or{static{this.DISABLE_DISPOSED_WARNING=false}constructor(){this._toDispose=new Set;this._isDisposed=false}dispose(){if(this._isDisposed){return}this._isDisposed=true;this.clear()}get isDisposed(){return this._isDisposed}clear(){if(this._toDispose.size===0){return}try{oh(this._toDispose)}finally{this._toDispose.clear()}}add(t){if(!t){return t}if(t===this){throw new Error("Cannot register a disposable on itself!")}if(this._isDisposed){if(!or.DISABLE_DISPOSED_WARNING){console.warn(new Error("Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!").stack)}}else{this._toDispose.add(t)}return t}delete(t){if(!t){return}if(t===this){throw new Error("Cannot dispose a disposable on itself!")}this._toDispose.delete(t);t.dispose()}deleteAndLeak(t){if(!t){return}if(this._toDispose.has(t)){this._toDispose.delete(t)}}}class ci{static{this.None=Object.freeze({dispose(){}})}constructor(){this._store=new or;ak(this._store)}dispose(){this._store.dispose()}_register(t){if(t===this){throw new Error("Cannot register a disposable on itself!")}return this._store.add(t)}}class bt{static{this.Undefined=new bt(void 0)}constructor(t){this.element=t;this.next=bt.Undefined;this.prev=bt.Undefined}}class ck{constructor(){this._first=bt.Undefined;this._last=bt.Undefined;this._size=0}get size(){return this._size}isEmpty(){return this._first===bt.Undefined}clear(){let t=this._first;while(t!==bt.Undefined){const n=t.next;t.prev=bt.Undefined;t.next=bt.Undefined;t=n}this._first=bt.Undefined;this._last=bt.Undefined;this._size=0}unshift(t){return this._insert(t,false)}push(t){return this._insert(t,true)}_insert(t,n){const s=new bt(t);if(this._first===bt.Undefined){this._first=s;this._last=s}else if(n){const o=this._last;this._last=s;s.prev=o;o.next=s}else{const o=this._first;this._first=s;s.next=o;o.prev=s}this._size+=1;let r=false;return()=>{if(!r){r=true;this._remove(s)}}}shift(){if(this._first===bt.Undefined){return void 0}else{const t=this._first.element;this._remove(this._first);return t}}pop(){if(this._last===bt.Undefined){return void 0}else{const t=this._last.element;this._remove(this._last);return t}}_remove(t){if(t.prev!==bt.Undefined&&t.next!==bt.Undefined){const n=t.prev;n.next=t.next;t.next.prev=n}else if(t.prev===bt.Undefined&&t.next===bt.Undefined){this._first=bt.Undefined;this._last=bt.Undefined}else if(t.next===bt.Undefined){this._last=this._last.prev;this._last.next=bt.Undefined}else if(t.prev===bt.Undefined){this._first=this._first.next;this._first.prev=bt.Undefined}this._size-=1}*[Symbol.iterator](){let t=this._first;while(t!==bt.Undefined){yield t.element;t=t.next}}}var Cr;(function(e){e.None=()=>ci.None;function t($,x){return h($,()=>void 0,0,void 0,true,void 0,x)}e.defer=t;function n($){return(x,A=null,O)=>{let F=false;let U=void 0;U=$(V=>{if(F){return}else if(U){U.dispose()}else{F=true}return x.call(A,V)},null,O);if(F){U.dispose()}return U}}e.once=n;function s($,x){return e.once(e.filter($,x))}e.onceIf=s;function r($,x,A){return u((O,F=null,U)=>$(V=>O.call(F,x(V)),null,U),A)}e.map=r;function o($,x,A){return u((O,F=null,U)=>$(V=>{x(V);O.call(F,V)},null,U),A)}e.forEach=o;function i($,x,A){return u((O,F=null,U)=>$(V=>x(V)&&O.call(F,V),null,U),A)}e.filter=i;function a($){return $}e.signal=a;function l(...$){return(x,A=null,O)=>{const F=lk(...$.map(U=>U(V=>x.call(A,V))));return f(F,O)}}e.any=l;function c($,x,A,O){let F=A;return r($,U=>{F=x(F,U);return F},O)}e.reduce=c;function u($,x){let A;const O={onWillAddFirstListener(){A=$(F.fire,F)},onDidRemoveLastListener(){A?.dispose()}};const F=new Ce(O);x?.add(F);return F.event}function f($,x){if(x instanceof Array){x.push($)}else if(x){x.add($)}return $}function h($,x,A=100,O=false,F=false,U,V){let z;let W=void 0;let G=void 0;let H=0;let j;const K={leakWarningThreshold:U,onWillAddFirstListener(){z=$(Q=>{H++;W=x(W,Q);if(O&&!G){Y.fire(W);W=void 0}j=()=>{const tt=W;W=void 0;G=void 0;if(!O||H>1){Y.fire(tt)}H=0};if(typeof A==="number"){clearTimeout(G);G=setTimeout(j,A)}else{if(G===void 0){G=0;queueMicrotask(j)}}})},onWillRemoveListener(){if(F&&H>0){j?.()}},onDidRemoveLastListener(){j=void 0;z.dispose()}};const Y=new Ce(K);V?.add(Y);return Y.event}e.debounce=h;function p($,x=0,A){return e.debounce($,(O,F)=>{if(!O){return[F]}O.push(F);return O},x,void 0,true,void 0,A)}e.accumulate=p;function d($,x=(O,F)=>O===F,A){let O=true;let F;return i($,U=>{const V=O||!x(U,F);O=false;F=U;return V},A)}e.latch=d;function g($,x,A){return[e.filter($,x,A),e.filter($,O=>!x(O),A)]}e.split=g;function m($,x=false,A=[],O){let F=A.slice();let U=$(W=>{if(F){F.push(W)}else{z.fire(W)}});if(O){O.add(U)}const V=()=>{F?.forEach(W=>z.fire(W));F=null};const z=new Ce({onWillAddFirstListener(){if(!U){U=$(W=>z.fire(W));if(O){O.add(U)}}},onDidAddFirstListener(){if(F){if(x){setTimeout(V)}else{V()}}},onDidRemoveLastListener(){if(U){U.dispose()}U=null}});if(O){O.add(z)}return z.event}e.buffer=m;function b($,x){const A=(O,F,U)=>{const V=x(new w);return $(function(z){const W=V.evaluate(z);if(W!==_){O.call(F,W)}},void 0,U)};return A}e.chain=b;const _=Symbol("HaltChainable");class w{constructor(){this.steps=[]}map(x){this.steps.push(x);return this}forEach(x){this.steps.push(A=>{x(A);return A});return this}filter(x){this.steps.push(A=>x(A)?A:_);return this}reduce(x,A){let O=A;this.steps.push(F=>{O=x(O,F);return O});return this}latch(x=(A,O)=>A===O){let A=true;let O;this.steps.push(F=>{const U=A||!x(F,O);A=false;O=F;return U?F:_});return this}evaluate(x){for(const A of this.steps){x=A(x);if(x===_){break}}return x}}function N($,x,A=O=>O){const O=(...z)=>V.fire(A(...z));const F=()=>$.on(x,O);const U=()=>$.removeListener(x,O);const V=new Ce({onWillAddFirstListener:F,onDidRemoveLastListener:U});return V.event}e.fromNodeEventEmitter=N;function I($,x,A=O=>O){const O=(...z)=>V.fire(A(...z));const F=()=>$.addEventListener(x,O);const U=()=>$.removeEventListener(x,O);const V=new Ce({onWillAddFirstListener:F,onDidRemoveLastListener:U});return V.event}e.fromDOMEventEmitter=I;function T($,x){return new Promise(A=>n($)(A,null,x))}e.toPromise=T;function E($){const x=new Ce;$.then(A=>{x.fire(A)},()=>{x.fire(void 0)}).finally(()=>{x.dispose()});return x.event}e.fromPromise=E;function D($,x){return $(A=>x.fire(A))}e.forward=D;function L($,x,A){x(A);return $(O=>x(O))}e.runAndSubscribe=L;class P{constructor(x,A){this._observable=x;this._counter=0;this._hasChanged=false;const O={onWillAddFirstListener:()=>{x.addObserver(this);this._observable.reportChanges()},onDidRemoveLastListener:()=>{x.removeObserver(this)}};this.emitter=new Ce(O);if(A){A.add(this.emitter)}}beginUpdate(x){this._counter++}handlePossibleChange(x){}handleChange(x,A){this._hasChanged=true}endUpdate(x){this._counter--;if(this._counter===0){this._observable.reportChanges();if(this._hasChanged){this._hasChanged=false;this.emitter.fire(this._observable.get())}}}}function M($,x){const A=new P($,x);return A.emitter.event}e.fromObservable=M;function B($){return(x,A,O)=>{let F=0;let U=false;const V={beginUpdate(){F++},endUpdate(){F--;if(F===0){$.reportChanges();if(U){U=false;x.call(A)}}},handlePossibleChange(){},handleChange(){U=true}};$.addObserver(V);$.reportChanges();const z={dispose(){$.removeObserver(V)}};if(O instanceof or){O.add(z)}else if(Array.isArray(O)){O.push(z)}return z}}e.fromObservableLight=B})(Cr||(Cr={}));class zr{static{this.all=new Set}static{this._idPool=0}constructor(t){this.listenerCount=0;this.invocationCount=0;this.elapsedOverall=0;this.durations=[];this.name=`${t}_${zr._idPool++}`;zr.all.add(this)}start(t){this._stopWatch=new ho;this.listenerCount=t}stop(){if(this._stopWatch){const t=this._stopWatch.elapsed();this.durations.push(t);this.elapsedOverall+=t;this.invocationCount+=1;this._stopWatch=void 0}}}let uk=-1;class Za{static{this._idPool=1}constructor(t,n,s=(Za._idPool++).toString(16).padStart(3,"0")){this._errorHandler=t;this.threshold=n;this.name=s;this._warnCountdown=0}dispose(){this._stacks?.clear()}check(t,n){const s=this.threshold;if(s<=0||n<s){return void 0}if(!this._stacks){this._stacks=new Map}const r=this._stacks.get(t.value)||0;this._stacks.set(t.value,r+1);this._warnCountdown-=1;if(this._warnCountdown<=0){this._warnCountdown=s*.5;const[o,i]=this.getMostFrequentStack();const a=`[${this.name}] potential listener LEAK detected, having ${n} listeners already. MOST frequent listener (${i}):`;console.warn(a);console.warn(o);const l=new fk(a,o);this._errorHandler(l)}return()=>{const o=this._stacks.get(t.value)||0;this._stacks.set(t.value,o-1)}}getMostFrequentStack(){if(!this._stacks){return void 0}let t;let n=0;for(const[s,r]of this._stacks){if(!t||n<r){t=[s,r];n=r}}return t}}class Ja{static create(){const t=new Error;return new Ja(t.stack??"")}constructor(t){this.value=t}print(){console.warn(this.value.split("\n").slice(2).join("\n"))}}class fk extends Error{constructor(t,n){super(t);this.name="ListenerLeakError";this.stack=n}}class hk extends Error{constructor(t,n){super(t);this.name="ListenerRefusalError";this.stack=n}}let pk=0;class ko{constructor(t){this.value=t;this.id=pk++}}const dk=2;class Ce{constructor(t){this._size=0;this._options=t;this._leakageMon=this._options?.leakWarningThreshold?new Za(t?.onListenerError??gr,this._options?.leakWarningThreshold??uk):void 0;this._perfMon=this._options?._profName?new zr(this._options._profName):void 0;this._deliveryQueue=this._options?.deliveryQueue}dispose(){if(!this._disposed){this._disposed=true;if(this._deliveryQueue?.current===this){this._deliveryQueue.reset()}if(this._listeners){this._listeners=void 0;this._size=0}this._options?.onDidRemoveLastListener?.();this._leakageMon?.dispose()}}get event(){this._event??=(t,n,s)=>{if(this._leakageMon&&this._size>this._leakageMon.threshold**2){const a=`[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;console.warn(a);const l=this._leakageMon.getMostFrequentStack()??["UNKNOWN stack",-1];const c=new hk(`${a}. HINT: Stack shows most frequent listener (${l[1]}-times)`,l[0]);const u=this._options?.onListenerError||gr;u(c);return ci.None}if(this._disposed){return ci.None}if(n){t=t.bind(n)}const r=new ko(t);let o;if(this._leakageMon&&this._size>=Math.ceil(this._leakageMon.threshold*.2)){r.stack=Ja.create();o=this._leakageMon.check(r.stack,this._size+1)}if(!this._listeners){this._options?.onWillAddFirstListener?.(this);this._listeners=r;this._options?.onDidAddFirstListener?.(this)}else if(this._listeners instanceof ko){this._deliveryQueue??=new mk;this._listeners=[this._listeners,r]}else{this._listeners.push(r)}this._options?.onDidAddListener?.(this);this._size++;const i=Ya(()=>{o?.();this._removeListener(r)});if(s instanceof or){s.add(i)}else if(Array.isArray(s)){s.push(i)}return i};return this._event}_removeListener(t){this._options?.onWillRemoveListener?.(this);if(!this._listeners){return}if(this._size===1){this._listeners=void 0;this._options?.onDidRemoveLastListener?.(this);this._size=0;return}const n=this._listeners;const s=n.indexOf(t);if(s===-1){console.log("disposed?",this._disposed);console.log("size?",this._size);console.log("arr?",JSON.stringify(this._listeners));throw new Error("Attempted to dispose unknown listener")}this._size--;n[s]=void 0;const r=this._deliveryQueue.current===this;if(this._size*dk<=n.length){let o=0;for(let i=0;i<n.length;i++){if(n[i]){n[o++]=n[i]}else if(r&&o<this._deliveryQueue.end){this._deliveryQueue.end--;if(o<this._deliveryQueue.i){this._deliveryQueue.i--}}}n.length=o}}_deliver(t,n){if(!t){return}const s=this._options?.onListenerError||gr;if(!s){t.value(n);return}try{t.value(n)}catch(r){s(r)}}_deliverQueue(t){const n=t.current._listeners;while(t.i<t.end){this._deliver(n[t.i++],t.value)}t.reset()}fire(t){if(this._deliveryQueue?.current){this._deliverQueue(this._deliveryQueue);this._perfMon?.stop()}this._perfMon?.start(this._size);if(!this._listeners);else if(this._listeners instanceof ko){this._deliver(this._listeners,t)}else{const n=this._deliveryQueue;n.enqueue(this,t,this._listeners.length);this._deliverQueue(n)}this._perfMon?.stop()}hasListeners(){return this._size>0}}class mk{constructor(){this.i=-1;this.end=0}enqueue(t,n,s){this.i=0;this.end=s;this.current=t;this.value=n}reset(){this.i=this.end;this.current=void 0;this.value=void 0}}const ih=Object.freeze(function(e,t){const n=setTimeout(e.bind(t),0);return{dispose(){clearTimeout(n)}}});var Wl;(function(e){function t(n){if(n===e.None||n===e.Cancelled){return true}if(n instanceof gk){return true}if(!n||typeof n!=="object"){return false}return typeof n.isCancellationRequested==="boolean"&&typeof n.onCancellationRequested==="function"}e.isCancellationToken=t;e.None=Object.freeze({isCancellationRequested:false,onCancellationRequested:Cr.None});e.Cancelled=Object.freeze({isCancellationRequested:true,onCancellationRequested:ih})})(Wl||(Wl={}));class gk{constructor(){this._isCancelled=false;this._emitter=null}cancel(){if(!this._isCancelled){this._isCancelled=true;if(this._emitter){this._emitter.fire(void 0);this.dispose()}}}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){if(this._isCancelled){return ih}if(!this._emitter){this._emitter=new Ce}return this._emitter.event}dispose(){if(this._emitter){this._emitter.dispose();this._emitter=null}}}var Z;(function(e){e[e["Null"]=0]="Null";e[e["Backspace"]=8]="Backspace";e[e["Tab"]=9]="Tab";e[e["LineFeed"]=10]="LineFeed";e[e["CarriageReturn"]=13]="CarriageReturn";e[e["Space"]=32]="Space";e[e["ExclamationMark"]=33]="ExclamationMark";e[e["DoubleQuote"]=34]="DoubleQuote";e[e["Hash"]=35]="Hash";e[e["DollarSign"]=36]="DollarSign";e[e["PercentSign"]=37]="PercentSign";e[e["Ampersand"]=38]="Ampersand";e[e["SingleQuote"]=39]="SingleQuote";e[e["OpenParen"]=40]="OpenParen";e[e["CloseParen"]=41]="CloseParen";e[e["Asterisk"]=42]="Asterisk";e[e["Plus"]=43]="Plus";e[e["Comma"]=44]="Comma";e[e["Dash"]=45]="Dash";e[e["Period"]=46]="Period";e[e["Slash"]=47]="Slash";e[e["Digit0"]=48]="Digit0";e[e["Digit1"]=49]="Digit1";e[e["Digit2"]=50]="Digit2";e[e["Digit3"]=51]="Digit3";e[e["Digit4"]=52]="Digit4";e[e["Digit5"]=53]="Digit5";e[e["Digit6"]=54]="Digit6";e[e["Digit7"]=55]="Digit7";e[e["Digit8"]=56]="Digit8";e[e["Digit9"]=57]="Digit9";e[e["Colon"]=58]="Colon";e[e["Semicolon"]=59]="Semicolon";e[e["LessThan"]=60]="LessThan";e[e["Equals"]=61]="Equals";e[e["GreaterThan"]=62]="GreaterThan";e[e["QuestionMark"]=63]="QuestionMark";e[e["AtSign"]=64]="AtSign";e[e["A"]=65]="A";e[e["B"]=66]="B";e[e["C"]=67]="C";e[e["D"]=68]="D";e[e["E"]=69]="E";e[e["F"]=70]="F";e[e["G"]=71]="G";e[e["H"]=72]="H";e[e["I"]=73]="I";e[e["J"]=74]="J";e[e["K"]=75]="K";e[e["L"]=76]="L";e[e["M"]=77]="M";e[e["N"]=78]="N";e[e["O"]=79]="O";e[e["P"]=80]="P";e[e["Q"]=81]="Q";e[e["R"]=82]="R";e[e["S"]=83]="S";e[e["T"]=84]="T";e[e["U"]=85]="U";e[e["V"]=86]="V";e[e["W"]=87]="W";e[e["X"]=88]="X";e[e["Y"]=89]="Y";e[e["Z"]=90]="Z";e[e["OpenSquareBracket"]=91]="OpenSquareBracket";e[e["Backslash"]=92]="Backslash";e[e["CloseSquareBracket"]=93]="CloseSquareBracket";e[e["Caret"]=94]="Caret";e[e["Underline"]=95]="Underline";e[e["BackTick"]=96]="BackTick";e[e["a"]=97]="a";e[e["b"]=98]="b";e[e["c"]=99]="c";e[e["d"]=100]="d";e[e["e"]=101]="e";e[e["f"]=102]="f";e[e["g"]=103]="g";e[e["h"]=104]="h";e[e["i"]=105]="i";e[e["j"]=106]="j";e[e["k"]=107]="k";e[e["l"]=108]="l";e[e["m"]=109]="m";e[e["n"]=110]="n";e[e["o"]=111]="o";e[e["p"]=112]="p";e[e["q"]=113]="q";e[e["r"]=114]="r";e[e["s"]=115]="s";e[e["t"]=116]="t";e[e["u"]=117]="u";e[e["v"]=118]="v";e[e["w"]=119]="w";e[e["x"]=120]="x";e[e["y"]=121]="y";e[e["z"]=122]="z";e[e["OpenCurlyBrace"]=123]="OpenCurlyBrace";e[e["Pipe"]=124]="Pipe";e[e["CloseCurlyBrace"]=125]="CloseCurlyBrace";e[e["Tilde"]=126]="Tilde";e[e["NoBreakSpace"]=160]="NoBreakSpace";e[e["U_Combining_Grave_Accent"]=768]="U_Combining_Grave_Accent";e[e["U_Combining_Acute_Accent"]=769]="U_Combining_Acute_Accent";e[e["U_Combining_Circumflex_Accent"]=770]="U_Combining_Circumflex_Accent";e[e["U_Combining_Tilde"]=771]="U_Combining_Tilde";e[e["U_Combining_Macron"]=772]="U_Combining_Macron";e[e["U_Combining_Overline"]=773]="U_Combining_Overline";e[e["U_Combining_Breve"]=774]="U_Combining_Breve";e[e["U_Combining_Dot_Above"]=775]="U_Combining_Dot_Above";e[e["U_Combining_Diaeresis"]=776]="U_Combining_Diaeresis";e[e["U_Combining_Hook_Above"]=777]="U_Combining_Hook_Above";e[e["U_Combining_Ring_Above"]=778]="U_Combining_Ring_Above";e[e["U_Combining_Double_Acute_Accent"]=779]="U_Combining_Double_Acute_Accent";e[e["U_Combining_Caron"]=780]="U_Combining_Caron";e[e["U_Combining_Vertical_Line_Above"]=781]="U_Combining_Vertical_Line_Above";e[e["U_Combining_Double_Vertical_Line_Above"]=782]="U_Combining_Double_Vertical_Line_Above";e[e["U_Combining_Double_Grave_Accent"]=783]="U_Combining_Double_Grave_Accent";e[e["U_Combining_Candrabindu"]=784]="U_Combining_Candrabindu";e[e["U_Combining_Inverted_Breve"]=785]="U_Combining_Inverted_Breve";e[e["U_Combining_Turned_Comma_Above"]=786]="U_Combining_Turned_Comma_Above";e[e["U_Combining_Comma_Above"]=787]="U_Combining_Comma_Above";e[e["U_Combining_Reversed_Comma_Above"]=788]="U_Combining_Reversed_Comma_Above";e[e["U_Combining_Comma_Above_Right"]=789]="U_Combining_Comma_Above_Right";e[e["U_Combining_Grave_Accent_Below"]=790]="U_Combining_Grave_Accent_Below";e[e["U_Combining_Acute_Accent_Below"]=791]="U_Combining_Acute_Accent_Below";e[e["U_Combining_Left_Tack_Below"]=792]="U_Combining_Left_Tack_Below";e[e["U_Combining_Right_Tack_Below"]=793]="U_Combining_Right_Tack_Below";e[e["U_Combining_Left_Angle_Above"]=794]="U_Combining_Left_Angle_Above";e[e["U_Combining_Horn"]=795]="U_Combining_Horn";e[e["U_Combining_Left_Half_Ring_Below"]=796]="U_Combining_Left_Half_Ring_Below";e[e["U_Combining_Up_Tack_Below"]=797]="U_Combining_Up_Tack_Below";e[e["U_Combining_Down_Tack_Below"]=798]="U_Combining_Down_Tack_Below";e[e["U_Combining_Plus_Sign_Below"]=799]="U_Combining_Plus_Sign_Below";e[e["U_Combining_Minus_Sign_Below"]=800]="U_Combining_Minus_Sign_Below";e[e["U_Combining_Palatalized_Hook_Below"]=801]="U_Combining_Palatalized_Hook_Below";e[e["U_Combining_Retroflex_Hook_Below"]=802]="U_Combining_Retroflex_Hook_Below";e[e["U_Combining_Dot_Below"]=803]="U_Combining_Dot_Below";e[e["U_Combining_Diaeresis_Below"]=804]="U_Combining_Diaeresis_Below";e[e["U_Combining_Ring_Below"]=805]="U_Combining_Ring_Below";e[e["U_Combining_Comma_Below"]=806]="U_Combining_Comma_Below";e[e["U_Combining_Cedilla"]=807]="U_Combining_Cedilla";e[e["U_Combining_Ogonek"]=808]="U_Combining_Ogonek";e[e["U_Combining_Vertical_Line_Below"]=809]="U_Combining_Vertical_Line_Below";e[e["U_Combining_Bridge_Below"]=810]="U_Combining_Bridge_Below";e[e["U_Combining_Inverted_Double_Arch_Below"]=811]="U_Combining_Inverted_Double_Arch_Below";e[e["U_Combining_Caron_Below"]=812]="U_Combining_Caron_Below";e[e["U_Combining_Circumflex_Accent_Below"]=813]="U_Combining_Circumflex_Accent_Below";e[e["U_Combining_Breve_Below"]=814]="U_Combining_Breve_Below";e[e["U_Combining_Inverted_Breve_Below"]=815]="U_Combining_Inverted_Breve_Below";e[e["U_Combining_Tilde_Below"]=816]="U_Combining_Tilde_Below";e[e["U_Combining_Macron_Below"]=817]="U_Combining_Macron_Below";e[e["U_Combining_Low_Line"]=818]="U_Combining_Low_Line";e[e["U_Combining_Double_Low_Line"]=819]="U_Combining_Double_Low_Line";e[e["U_Combining_Tilde_Overlay"]=820]="U_Combining_Tilde_Overlay";e[e["U_Combining_Short_Stroke_Overlay"]=821]="U_Combining_Short_Stroke_Overlay";e[e["U_Combining_Long_Stroke_Overlay"]=822]="U_Combining_Long_Stroke_Overlay";e[e["U_Combining_Short_Solidus_Overlay"]=823]="U_Combining_Short_Solidus_Overlay";e[e["U_Combining_Long_Solidus_Overlay"]=824]="U_Combining_Long_Solidus_Overlay";e[e["U_Combining_Right_Half_Ring_Below"]=825]="U_Combining_Right_Half_Ring_Below";e[e["U_Combining_Inverted_Bridge_Below"]=826]="U_Combining_Inverted_Bridge_Below";e[e["U_Combining_Square_Below"]=827]="U_Combining_Square_Below";e[e["U_Combining_Seagull_Below"]=828]="U_Combining_Seagull_Below";e[e["U_Combining_X_Above"]=829]="U_Combining_X_Above";e[e["U_Combining_Vertical_Tilde"]=830]="U_Combining_Vertical_Tilde";e[e["U_Combining_Double_Overline"]=831]="U_Combining_Double_Overline";e[e["U_Combining_Grave_Tone_Mark"]=832]="U_Combining_Grave_Tone_Mark";e[e["U_Combining_Acute_Tone_Mark"]=833]="U_Combining_Acute_Tone_Mark";e[e["U_Combining_Greek_Perispomeni"]=834]="U_Combining_Greek_Perispomeni";e[e["U_Combining_Greek_Koronis"]=835]="U_Combining_Greek_Koronis";e[e["U_Combining_Greek_Dialytika_Tonos"]=836]="U_Combining_Greek_Dialytika_Tonos";e[e["U_Combining_Greek_Ypogegrammeni"]=837]="U_Combining_Greek_Ypogegrammeni";e[e["U_Combining_Bridge_Above"]=838]="U_Combining_Bridge_Above";e[e["U_Combining_Equals_Sign_Below"]=839]="U_Combining_Equals_Sign_Below";e[e["U_Combining_Double_Vertical_Line_Below"]=840]="U_Combining_Double_Vertical_Line_Below";e[e["U_Combining_Left_Angle_Below"]=841]="U_Combining_Left_Angle_Below";e[e["U_Combining_Not_Tilde_Above"]=842]="U_Combining_Not_Tilde_Above";e[e["U_Combining_Homothetic_Above"]=843]="U_Combining_Homothetic_Above";e[e["U_Combining_Almost_Equal_To_Above"]=844]="U_Combining_Almost_Equal_To_Above";e[e["U_Combining_Left_Right_Arrow_Below"]=845]="U_Combining_Left_Right_Arrow_Below";e[e["U_Combining_Upwards_Arrow_Below"]=846]="U_Combining_Upwards_Arrow_Below";e[e["U_Combining_Grapheme_Joiner"]=847]="U_Combining_Grapheme_Joiner";e[e["U_Combining_Right_Arrowhead_Above"]=848]="U_Combining_Right_Arrowhead_Above";e[e["U_Combining_Left_Half_Ring_Above"]=849]="U_Combining_Left_Half_Ring_Above";e[e["U_Combining_Fermata"]=850]="U_Combining_Fermata";e[e["U_Combining_X_Below"]=851]="U_Combining_X_Below";e[e["U_Combining_Left_Arrowhead_Below"]=852]="U_Combining_Left_Arrowhead_Below";e[e["U_Combining_Right_Arrowhead_Below"]=853]="U_Combining_Right_Arrowhead_Below";e[e["U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below"]=854]="U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below";e[e["U_Combining_Right_Half_Ring_Above"]=855]="U_Combining_Right_Half_Ring_Above";e[e["U_Combining_Dot_Above_Right"]=856]="U_Combining_Dot_Above_Right";e[e["U_Combining_Asterisk_Below"]=857]="U_Combining_Asterisk_Below";e[e["U_Combining_Double_Ring_Below"]=858]="U_Combining_Double_Ring_Below";e[e["U_Combining_Zigzag_Above"]=859]="U_Combining_Zigzag_Above";e[e["U_Combining_Double_Breve_Below"]=860]="U_Combining_Double_Breve_Below";e[e["U_Combining_Double_Breve"]=861]="U_Combining_Double_Breve";e[e["U_Combining_Double_Macron"]=862]="U_Combining_Double_Macron";e[e["U_Combining_Double_Macron_Below"]=863]="U_Combining_Double_Macron_Below";e[e["U_Combining_Double_Tilde"]=864]="U_Combining_Double_Tilde";e[e["U_Combining_Double_Inverted_Breve"]=865]="U_Combining_Double_Inverted_Breve";e[e["U_Combining_Double_Rightwards_Arrow_Below"]=866]="U_Combining_Double_Rightwards_Arrow_Below";e[e["U_Combining_Latin_Small_Letter_A"]=867]="U_Combining_Latin_Small_Letter_A";e[e["U_Combining_Latin_Small_Letter_E"]=868]="U_Combining_Latin_Small_Letter_E";e[e["U_Combining_Latin_Small_Letter_I"]=869]="U_Combining_Latin_Small_Letter_I";e[e["U_Combining_Latin_Small_Letter_O"]=870]="U_Combining_Latin_Small_Letter_O";e[e["U_Combining_Latin_Small_Letter_U"]=871]="U_Combining_Latin_Small_Letter_U";e[e["U_Combining_Latin_Small_Letter_C"]=872]="U_Combining_Latin_Small_Letter_C";e[e["U_Combining_Latin_Small_Letter_D"]=873]="U_Combining_Latin_Small_Letter_D";e[e["U_Combining_Latin_Small_Letter_H"]=874]="U_Combining_Latin_Small_Letter_H";e[e["U_Combining_Latin_Small_Letter_M"]=875]="U_Combining_Latin_Small_Letter_M";e[e["U_Combining_Latin_Small_Letter_R"]=876]="U_Combining_Latin_Small_Letter_R";e[e["U_Combining_Latin_Small_Letter_T"]=877]="U_Combining_Latin_Small_Letter_T";e[e["U_Combining_Latin_Small_Letter_V"]=878]="U_Combining_Latin_Small_Letter_V";e[e["U_Combining_Latin_Small_Letter_X"]=879]="U_Combining_Latin_Small_Letter_X";e[e["LINE_SEPARATOR"]=8232]="LINE_SEPARATOR";e[e["PARAGRAPH_SEPARATOR"]=8233]="PARAGRAPH_SEPARATOR";e[e["NEXT_LINE"]=133]="NEXT_LINE";e[e["U_CIRCUMFLEX"]=94]="U_CIRCUMFLEX";e[e["U_GRAVE_ACCENT"]=96]="U_GRAVE_ACCENT";e[e["U_DIAERESIS"]=168]="U_DIAERESIS";e[e["U_MACRON"]=175]="U_MACRON";e[e["U_ACUTE_ACCENT"]=180]="U_ACUTE_ACCENT";e[e["U_CEDILLA"]=184]="U_CEDILLA";e[e["U_MODIFIER_LETTER_LEFT_ARROWHEAD"]=706]="U_MODIFIER_LETTER_LEFT_ARROWHEAD";e[e["U_MODIFIER_LETTER_RIGHT_ARROWHEAD"]=707]="U_MODIFIER_LETTER_RIGHT_ARROWHEAD";e[e["U_MODIFIER_LETTER_UP_ARROWHEAD"]=708]="U_MODIFIER_LETTER_UP_ARROWHEAD";e[e["U_MODIFIER_LETTER_DOWN_ARROWHEAD"]=709]="U_MODIFIER_LETTER_DOWN_ARROWHEAD";e[e["U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING"]=722]="U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING";e[e["U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING"]=723]="U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING";e[e["U_MODIFIER_LETTER_UP_TACK"]=724]="U_MODIFIER_LETTER_UP_TACK";e[e["U_MODIFIER_LETTER_DOWN_TACK"]=725]="U_MODIFIER_LETTER_DOWN_TACK";e[e["U_MODIFIER_LETTER_PLUS_SIGN"]=726]="U_MODIFIER_LETTER_PLUS_SIGN";e[e["U_MODIFIER_LETTER_MINUS_SIGN"]=727]="U_MODIFIER_LETTER_MINUS_SIGN";e[e["U_BREVE"]=728]="U_BREVE";e[e["U_DOT_ABOVE"]=729]="U_DOT_ABOVE";e[e["U_RING_ABOVE"]=730]="U_RING_ABOVE";e[e["U_OGONEK"]=731]="U_OGONEK";e[e["U_SMALL_TILDE"]=732]="U_SMALL_TILDE";e[e["U_DOUBLE_ACUTE_ACCENT"]=733]="U_DOUBLE_ACUTE_ACCENT";e[e["U_MODIFIER_LETTER_RHOTIC_HOOK"]=734]="U_MODIFIER_LETTER_RHOTIC_HOOK";e[e["U_MODIFIER_LETTER_CROSS_ACCENT"]=735]="U_MODIFIER_LETTER_CROSS_ACCENT";e[e["U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR"]=741]="U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR";e[e["U_MODIFIER_LETTER_HIGH_TONE_BAR"]=742]="U_MODIFIER_LETTER_HIGH_TONE_BAR";e[e["U_MODIFIER_LETTER_MID_TONE_BAR"]=743]="U_MODIFIER_LETTER_MID_TONE_BAR";e[e["U_MODIFIER_LETTER_LOW_TONE_BAR"]=744]="U_MODIFIER_LETTER_LOW_TONE_BAR";e[e["U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR"]=745]="U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR";e[e["U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK"]=746]="U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK";e[e["U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK"]=747]="U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK";e[e["U_MODIFIER_LETTER_UNASPIRATED"]=749]="U_MODIFIER_LETTER_UNASPIRATED";e[e["U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD"]=751]="U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD";e[e["U_MODIFIER_LETTER_LOW_UP_ARROWHEAD"]=752]="U_MODIFIER_LETTER_LOW_UP_ARROWHEAD";e[e["U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD"]=753]="U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD";e[e["U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD"]=754]="U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD";e[e["U_MODIFIER_LETTER_LOW_RING"]=755]="U_MODIFIER_LETTER_LOW_RING";e[e["U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT"]=756]="U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT";e[e["U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT"]=757]="U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT";e[e["U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT"]=758]="U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT";e[e["U_MODIFIER_LETTER_LOW_TILDE"]=759]="U_MODIFIER_LETTER_LOW_TILDE";e[e["U_MODIFIER_LETTER_RAISED_COLON"]=760]="U_MODIFIER_LETTER_RAISED_COLON";e[e["U_MODIFIER_LETTER_BEGIN_HIGH_TONE"]=761]="U_MODIFIER_LETTER_BEGIN_HIGH_TONE";e[e["U_MODIFIER_LETTER_END_HIGH_TONE"]=762]="U_MODIFIER_LETTER_END_HIGH_TONE";e[e["U_MODIFIER_LETTER_BEGIN_LOW_TONE"]=763]="U_MODIFIER_LETTER_BEGIN_LOW_TONE";e[e["U_MODIFIER_LETTER_END_LOW_TONE"]=764]="U_MODIFIER_LETTER_END_LOW_TONE";e[e["U_MODIFIER_LETTER_SHELF"]=765]="U_MODIFIER_LETTER_SHELF";e[e["U_MODIFIER_LETTER_OPEN_SHELF"]=766]="U_MODIFIER_LETTER_OPEN_SHELF";e[e["U_MODIFIER_LETTER_LOW_LEFT_ARROW"]=767]="U_MODIFIER_LETTER_LOW_LEFT_ARROW";e[e["U_GREEK_LOWER_NUMERAL_SIGN"]=885]="U_GREEK_LOWER_NUMERAL_SIGN";e[e["U_GREEK_TONOS"]=900]="U_GREEK_TONOS";e[e["U_GREEK_DIALYTIKA_TONOS"]=901]="U_GREEK_DIALYTIKA_TONOS";e[e["U_GREEK_KORONIS"]=8125]="U_GREEK_KORONIS";e[e["U_GREEK_PSILI"]=8127]="U_GREEK_PSILI";e[e["U_GREEK_PERISPOMENI"]=8128]="U_GREEK_PERISPOMENI";e[e["U_GREEK_DIALYTIKA_AND_PERISPOMENI"]=8129]="U_GREEK_DIALYTIKA_AND_PERISPOMENI";e[e["U_GREEK_PSILI_AND_VARIA"]=8141]="U_GREEK_PSILI_AND_VARIA";e[e["U_GREEK_PSILI_AND_OXIA"]=8142]="U_GREEK_PSILI_AND_OXIA";e[e["U_GREEK_PSILI_AND_PERISPOMENI"]=8143]="U_GREEK_PSILI_AND_PERISPOMENI";e[e["U_GREEK_DASIA_AND_VARIA"]=8157]="U_GREEK_DASIA_AND_VARIA";e[e["U_GREEK_DASIA_AND_OXIA"]=8158]="U_GREEK_DASIA_AND_OXIA";e[e["U_GREEK_DASIA_AND_PERISPOMENI"]=8159]="U_GREEK_DASIA_AND_PERISPOMENI";e[e["U_GREEK_DIALYTIKA_AND_VARIA"]=8173]="U_GREEK_DIALYTIKA_AND_VARIA";e[e["U_GREEK_DIALYTIKA_AND_OXIA"]=8174]="U_GREEK_DIALYTIKA_AND_OXIA";e[e["U_GREEK_VARIA"]=8175]="U_GREEK_VARIA";e[e["U_GREEK_OXIA"]=8189]="U_GREEK_OXIA";e[e["U_GREEK_DASIA"]=8190]="U_GREEK_DASIA";e[e["U_IDEOGRAPHIC_FULL_STOP"]=12290]="U_IDEOGRAPHIC_FULL_STOP";e[e["U_LEFT_CORNER_BRACKET"]=12300]="U_LEFT_CORNER_BRACKET";e[e["U_RIGHT_CORNER_BRACKET"]=12301]="U_RIGHT_CORNER_BRACKET";e[e["U_LEFT_BLACK_LENTICULAR_BRACKET"]=12304]="U_LEFT_BLACK_LENTICULAR_BRACKET";e[e["U_RIGHT_BLACK_LENTICULAR_BRACKET"]=12305]="U_RIGHT_BLACK_LENTICULAR_BRACKET";e[e["U_OVERLINE"]=8254]="U_OVERLINE";e[e["UTF8_BOM"]=65279]="UTF8_BOM";e[e["U_FULLWIDTH_SEMICOLON"]=65307]="U_FULLWIDTH_SEMICOLON";e[e["U_FULLWIDTH_COMMA"]=65292]="U_FULLWIDTH_COMMA"})(Z||(Z={}));function ah(){return globalThis._VSCODE_NLS_LANGUAGE}ah()==="pseudo"||typeof document!=="undefined"&&document.location&&typeof document.location.hash==="string"&&document.location.hash.indexOf("pseudo=true")>=0;const as="en";let tr=false;let er=false;let br=false;let lh=false;let Qa=false;let ch=false;let cr=void 0;let _r=as;let Hl=as;let yk=void 0;let nn=void 0;const an=globalThis;let me=void 0;if(typeof an.vscode!=="undefined"&&typeof an.vscode.process!=="undefined"){me=an.vscode.process}else if(typeof process!=="undefined"&&typeof process?.versions?.node==="string"){me=process}const bk=typeof me?.versions?.electron==="string";const _k=bk&&me?.type==="renderer";if(typeof me==="object"){tr=me.platform==="win32";er=me.platform==="darwin";br=me.platform==="linux";br&&!!me.env["SNAP"]&&!!me.env["SNAP_REVISION"];!!me.env["CI"]||!!me.env["BUILD_ARTIFACTSTAGINGDIRECTORY"];cr=as;_r=as;const e=me.env["VSCODE_NLS_CONFIG"];if(e){try{const t=JSON.parse(e);cr=t.userLocale;Hl=t.osLocale;_r=t.resolvedLanguage||as;yk=t.languagePack?.translationsConfigFile}catch(t){}}lh=true}else if(typeof navigator==="object"&&!_k){nn=navigator.userAgent;tr=nn.indexOf("Windows")>=0;er=nn.indexOf("Macintosh")>=0;ch=(nn.indexOf("Macintosh")>=0||nn.indexOf("iPad")>=0||nn.indexOf("iPhone")>=0)&&!!navigator.maxTouchPoints&&navigator.maxTouchPoints>0;br=nn.indexOf("Linux")>=0;nn?.indexOf("Mobi")>=0;Qa=true;_r=ah()||as;cr=navigator.language.toLowerCase();Hl=cr}else{console.error("Unable to resolve platform.")}var hs;(function(e){e[e["Web"]=0]="Web";e[e["Mac"]=1]="Mac";e[e["Linux"]=2]="Linux";e[e["Windows"]=3]="Windows"})(hs||(hs={}));hs.Web;if(er){hs.Mac}else if(tr){hs.Windows}else if(br){hs.Linux}const Ts=tr;const wk=er;const Nk=lh;const Ik=Qa;const kk=Qa&&typeof an.importScripts==="function";const Tk=kk?an.origin:void 0;const Ke=nn;const mn=_r;var ql;(function(e){function t(){return mn}e.value=t;function n(){if(mn.length===2){return mn==="en"}else if(mn.length>=3){return mn[0]==="e"&&mn[1]==="n"&&mn[2]==="-"}else{return false}}e.isDefaultVariant=n;function s(){return mn==="en"}e.isDefault=s})(ql||(ql={}));const Sk=typeof an.postMessage==="function"&&!an.importScripts;(()=>{if(Sk){const e=[];an.addEventListener("message",n=>{if(n.data&&n.data.vscodeScheduleAsyncWork){for(let s=0,r=e.length;s<r;s++){const o=e[s];if(o.id===n.data.vscodeScheduleAsyncWork){e.splice(s,1);o.callback();return}}}});let t=0;return n=>{const s=++t;e.push({id:s,callback:n});an.postMessage({vscodeScheduleAsyncWork:s},"*")}}return e=>setTimeout(e)})();var Gs;(function(e){e[e["Windows"]=1]="Windows";e[e["Macintosh"]=2]="Macintosh";e[e["Linux"]=3]="Linux"})(Gs||(Gs={}));er||ch?Gs.Macintosh:tr?Gs.Windows:Gs.Linux;const Ek=!!(Ke&&Ke.indexOf("Chrome")>=0);!!(Ke&&Ke.indexOf("Firefox")>=0);!!(!Ek&&(Ke&&Ke.indexOf("Safari")>=0));!!(Ke&&Ke.indexOf("Edg/")>=0);!!(Ke&&Ke.indexOf("Android")>=0);var Gl={};let Mn;const To=globalThis.vscode;if(typeof To!=="undefined"&&typeof To.process!=="undefined"){const e=To.process;Mn={get platform(){return e.platform},get arch(){return e.arch},get env(){return e.env},cwd(){return e.cwd()}}}else if(typeof process!=="undefined"&&typeof process?.versions?.node==="string"){Mn={get platform(){return process.platform},get arch(){return process.arch},get env(){return Gl},cwd(){return Gl["VSCODE_CWD"]||process.cwd()}}}else{Mn={get platform(){return Ts?"win32":wk?"darwin":"linux"},get arch(){return void 0},get env(){return{}},cwd(){return"/"}}}const Wr=Mn.cwd;const vk=Mn.env;const xk=Mn.platform;Mn.arch;const $k=65;const Ak=97;const Dk=90;const Rk=122;const Vn=46;const Wt=47;const oe=92;const Qe=58;const Ok=63;class uh extends Error{constructor(t,n,s){let r;if(typeof n==="string"&&n.indexOf("not ")===0){r="must not be";n=n.replace(/^not /,"")}else{r="must be"}const o=t.indexOf(".")!==-1?"property":"argument";let i=`The "${t}" ${o} ${r} of type ${n}`;i+=`. Received type ${typeof s}`;super(i);this.code="ERR_INVALID_ARG_TYPE"}}function Lk(e,t){if(e===null||typeof e!=="object"){throw new uh(t,"Object",e)}}function Lt(e,t){if(typeof e!=="string"){throw new uh(t,"string",e)}}const Me=xk==="win32";function rt(e){return e===Wt||e===oe}function ui(e){return e===Wt}function tn(e){return e>=$k&&e<=Dk||e>=Ak&&e<=Rk}function Hr(e,t,n,s){let r="";let o=0;let i=-1;let a=0;let l=0;for(let c=0;c<=e.length;++c){if(c<e.length){l=e.charCodeAt(c)}else if(s(l)){break}else{l=Wt}if(s(l)){if(i===c-1||a===1);else if(a===2){if(r.length<2||o!==2||r.charCodeAt(r.length-1)!==Vn||r.charCodeAt(r.length-2)!==Vn){if(r.length>2){const u=r.lastIndexOf(n);if(u===-1){r="";o=0}else{r=r.slice(0,u);o=r.length-1-r.lastIndexOf(n)}i=c;a=0;continue}else if(r.length!==0){r="";o=0;i=c;a=0;continue}}if(t){r+=r.length>0?`${n}..`:"..";o=2}}else{if(r.length>0){r+=`${n}${e.slice(i+1,c)}`}else{r=e.slice(i+1,c)}o=c-i-1}i=c;a=0}else if(l===Vn&&a!==-1){++a}else{a=-1}}return r}function Fk(e){return e?`${e[0]==="."?"":"."}${e}`:""}function fh(e,t){Lk(t,"pathObject");const n=t.dir||t.root;const s=t.base||`${t.name||""}${Fk(t.ext)}`;if(!n){return s}return n===t.root?`${n}${s}`:`${n}${e}${s}`}const qt={resolve(...e){let t="";let n="";let s=false;for(let r=e.length-1;r>=-1;r--){let o;if(r>=0){o=e[r];Lt(o,`paths[${r}]`);if(o.length===0){continue}}else if(t.length===0){o=Wr()}else{o=vk[`=${t}`]||Wr();if(o===void 0||o.slice(0,2).toLowerCase()!==t.toLowerCase()&&o.charCodeAt(2)===oe){o=`${t}\\`}}const i=o.length;let a=0;let l="";let c=false;const u=o.charCodeAt(0);if(i===1){if(rt(u)){a=1;c=true}}else if(rt(u)){c=true;if(rt(o.charCodeAt(1))){let f=2;let h=f;while(f<i&&!rt(o.charCodeAt(f))){f++}if(f<i&&f!==h){const p=o.slice(h,f);h=f;while(f<i&&rt(o.charCodeAt(f))){f++}if(f<i&&f!==h){h=f;while(f<i&&!rt(o.charCodeAt(f))){f++}if(f===i||f!==h){l=`\\\\${p}\\${o.slice(h,f)}`;a=f}}}}else{a=1}}else if(tn(u)&&o.charCodeAt(1)===Qe){l=o.slice(0,2);a=2;if(i>2&&rt(o.charCodeAt(2))){c=true;a=3}}if(l.length>0){if(t.length>0){if(l.toLowerCase()!==t.toLowerCase()){continue}}else{t=l}}if(s){if(t.length>0){break}}else{n=`${o.slice(a)}\\${n}`;s=c;if(c&&t.length>0){break}}}n=Hr(n,!s,"\\",rt);return s?`${t}\\${n}`:`${t}${n}`||"."},normalize(e){Lt(e,"path");const t=e.length;if(t===0){return"."}let n=0;let s;let r=false;const o=e.charCodeAt(0);if(t===1){return ui(o)?"\\":e}if(rt(o)){r=true;if(rt(e.charCodeAt(1))){let a=2;let l=a;while(a<t&&!rt(e.charCodeAt(a))){a++}if(a<t&&a!==l){const c=e.slice(l,a);l=a;while(a<t&&rt(e.charCodeAt(a))){a++}if(a<t&&a!==l){l=a;while(a<t&&!rt(e.charCodeAt(a))){a++}if(a===t){return`\\\\${c}\\${e.slice(l)}\\`}if(a!==l){s=`\\\\${c}\\${e.slice(l,a)}`;n=a}}}}else{n=1}}else if(tn(o)&&e.charCodeAt(1)===Qe){s=e.slice(0,2);n=2;if(t>2&&rt(e.charCodeAt(2))){r=true;n=3}}let i=n<t?Hr(e.slice(n),!r,"\\",rt):"";if(i.length===0&&!r){i="."}if(i.length>0&&rt(e.charCodeAt(t-1))){i+="\\"}if(!r&&s===void 0&&e.includes(":")){if(i.length>=2&&tn(i.charCodeAt(0))&&i.charCodeAt(1)===Qe){return`.\\${i}`}let a=e.indexOf(":");do{if(a===t-1||rt(e.charCodeAt(a+1))){return`.\\${i}`}}while((a=e.indexOf(":",a+1))!==-1)}if(s===void 0){return r?`\\${i}`:i}return r?`${s}\\${i}`:`${s}${i}`},isAbsolute(e){Lt(e,"path");const t=e.length;if(t===0){return false}const n=e.charCodeAt(0);return rt(n)||t>2&&tn(n)&&e.charCodeAt(1)===Qe&&rt(e.charCodeAt(2))},join(...e){if(e.length===0){return"."}let t;let n;for(let o=0;o<e.length;++o){const i=e[o];Lt(i,"path");if(i.length>0){if(t===void 0){t=n=i}else{t+=`\\${i}`}}}if(t===void 0){return"."}let s=true;let r=0;if(typeof n==="string"&&rt(n.charCodeAt(0))){++r;const o=n.length;if(o>1&&rt(n.charCodeAt(1))){++r;if(o>2){if(rt(n.charCodeAt(2))){++r}else{s=false}}}}if(s){while(r<t.length&&rt(t.charCodeAt(r))){r++}if(r>=2){t=`\\${t.slice(r)}`}}return qt.normalize(t)},relative(e,t){Lt(e,"from");Lt(t,"to");if(e===t){return""}const n=qt.resolve(e);const s=qt.resolve(t);if(n===s){return""}e=n.toLowerCase();t=s.toLowerCase();if(e===t){return""}if(n.length!==e.length||s.length!==t.length){const d=n.split("\\");const g=s.split("\\");if(d[d.length-1]===""){d.pop()}if(g[g.length-1]===""){g.pop()}const m=d.length;const b=g.length;const _=m<b?m:b;let w;for(w=0;w<_;w++){if(d[w].toLowerCase()!==g[w].toLowerCase()){break}}if(w===0){return s}else if(w===_){if(b>_){return g.slice(w).join("\\")}if(m>_){return"..\\".repeat(m-1-w)+".."}return""}return"..\\".repeat(m-w)+g.slice(w).join("\\")}let r=0;while(r<e.length&&e.charCodeAt(r)===oe){r++}let o=e.length;while(o-1>r&&e.charCodeAt(o-1)===oe){o--}const i=o-r;let a=0;while(a<t.length&&t.charCodeAt(a)===oe){a++}let l=t.length;while(l-1>a&&t.charCodeAt(l-1)===oe){l--}const c=l-a;const u=i<c?i:c;let f=-1;let h=0;for(;h<u;h++){const d=e.charCodeAt(r+h);if(d!==t.charCodeAt(a+h)){break}else if(d===oe){f=h}}if(h!==u){if(f===-1){return s}}else{if(c>u){if(t.charCodeAt(a+h)===oe){return s.slice(a+h+1)}if(h===2){return s.slice(a+h)}}if(i>u){if(e.charCodeAt(r+h)===oe){f=h}else if(h===2){f=3}}if(f===-1){f=0}}let p="";for(h=r+f+1;h<=o;++h){if(h===o||e.charCodeAt(h)===oe){p+=p.length===0?"..":"\\.."}}a+=f;if(p.length>0){return`${p}${s.slice(a,l)}`}if(s.charCodeAt(a)===oe){++a}return s.slice(a,l)},toNamespacedPath(e){if(typeof e!=="string"||e.length===0){return e}const t=qt.resolve(e);if(t.length<=2){return e}if(t.charCodeAt(0)===oe){if(t.charCodeAt(1)===oe){const n=t.charCodeAt(2);if(n!==Ok&&n!==Vn){return`\\\\?\\UNC\\${t.slice(2)}`}}}else if(tn(t.charCodeAt(0))&&t.charCodeAt(1)===Qe&&t.charCodeAt(2)===oe){return`\\\\?\\${t}`}return t},dirname(e){Lt(e,"path");const t=e.length;if(t===0){return"."}let n=-1;let s=0;const r=e.charCodeAt(0);if(t===1){return rt(r)?e:"."}if(rt(r)){n=s=1;if(rt(e.charCodeAt(1))){let a=2;let l=a;while(a<t&&!rt(e.charCodeAt(a))){a++}if(a<t&&a!==l){l=a;while(a<t&&rt(e.charCodeAt(a))){a++}if(a<t&&a!==l){l=a;while(a<t&&!rt(e.charCodeAt(a))){a++}if(a===t){return e}if(a!==l){n=s=a+1}}}}}else if(tn(r)&&e.charCodeAt(1)===Qe){n=t>2&&rt(e.charCodeAt(2))?3:2;s=n}let o=-1;let i=true;for(let a=t-1;a>=s;--a){if(rt(e.charCodeAt(a))){if(!i){o=a;break}}else{i=false}}if(o===-1){if(n===-1){return"."}o=n}return e.slice(0,o)},basename(e,t){if(t!==void 0){Lt(t,"suffix")}Lt(e,"path");let n=0;let s=-1;let r=true;let o;if(e.length>=2&&tn(e.charCodeAt(0))&&e.charCodeAt(1)===Qe){n=2}if(t!==void 0&&t.length>0&&t.length<=e.length){if(t===e){return""}let i=t.length-1;let a=-1;for(o=e.length-1;o>=n;--o){const l=e.charCodeAt(o);if(rt(l)){if(!r){n=o+1;break}}else{if(a===-1){r=false;a=o+1}if(i>=0){if(l===t.charCodeAt(i)){if(--i===-1){s=o}}else{i=-1;s=a}}}}if(n===s){s=a}else if(s===-1){s=e.length}return e.slice(n,s)}for(o=e.length-1;o>=n;--o){if(rt(e.charCodeAt(o))){if(!r){n=o+1;break}}else if(s===-1){r=false;s=o+1}}if(s===-1){return""}return e.slice(n,s)},extname(e){Lt(e,"path");let t=0;let n=-1;let s=0;let r=-1;let o=true;let i=0;if(e.length>=2&&e.charCodeAt(1)===Qe&&tn(e.charCodeAt(0))){t=s=2}for(let a=e.length-1;a>=t;--a){const l=e.charCodeAt(a);if(rt(l)){if(!o){s=a+1;break}continue}if(r===-1){o=false;r=a+1}if(l===Vn){if(n===-1){n=a}else if(i!==1){i=1}}else if(n!==-1){i=-1}}if(n===-1||r===-1||i===0||i===1&&n===r-1&&n===s+1){return""}return e.slice(n,r)},format:fh.bind(null,"\\"),parse(e){Lt(e,"path");const t={root:"",dir:"",base:"",ext:"",name:""};if(e.length===0){return t}const n=e.length;let s=0;let r=e.charCodeAt(0);if(n===1){if(rt(r)){t.root=t.dir=e;return t}t.base=t.name=e;return t}if(rt(r)){s=1;if(rt(e.charCodeAt(1))){let f=2;let h=f;while(f<n&&!rt(e.charCodeAt(f))){f++}if(f<n&&f!==h){h=f;while(f<n&&rt(e.charCodeAt(f))){f++}if(f<n&&f!==h){h=f;while(f<n&&!rt(e.charCodeAt(f))){f++}if(f===n){s=f}else if(f!==h){s=f+1}}}}}else if(tn(r)&&e.charCodeAt(1)===Qe){if(n<=2){t.root=t.dir=e;return t}s=2;if(rt(e.charCodeAt(2))){if(n===3){t.root=t.dir=e;return t}s=3}}if(s>0){t.root=e.slice(0,s)}let o=-1;let i=s;let a=-1;let l=true;let c=e.length-1;let u=0;for(;c>=s;--c){r=e.charCodeAt(c);if(rt(r)){if(!l){i=c+1;break}continue}if(a===-1){l=false;a=c+1}if(r===Vn){if(o===-1){o=c}else if(u!==1){u=1}}else if(o!==-1){u=-1}}if(a!==-1){if(o===-1||u===0||u===1&&o===a-1&&o===i+1){t.base=t.name=e.slice(i,a)}else{t.name=e.slice(i,o);t.base=e.slice(i,a);t.ext=e.slice(o,a)}}if(i>0&&i!==s){t.dir=e.slice(0,i-1)}else{t.dir=t.root}return t},sep:"\\",delimiter:";",win32:null,posix:null};const Pk=(()=>{if(Me){const e=/\\/g;return()=>{const t=Wr().replace(e,"/");return t.slice(t.indexOf("/"))}}return()=>Wr()})();const Nt={resolve(...e){let t="";let n=false;for(let s=e.length-1;s>=0&&!n;s--){const r=e[s];Lt(r,`paths[${s}]`);if(r.length===0){continue}t=`${r}/${t}`;n=r.charCodeAt(0)===Wt}if(!n){const s=Pk();t=`${s}/${t}`;n=s.charCodeAt(0)===Wt}t=Hr(t,!n,"/",ui);if(n){return`/${t}`}return t.length>0?t:"."},normalize(e){Lt(e,"path");if(e.length===0){return"."}const t=e.charCodeAt(0)===Wt;const n=e.charCodeAt(e.length-1)===Wt;e=Hr(e,!t,"/",ui);if(e.length===0){if(t){return"/"}return n?"./":"."}if(n){e+="/"}return t?`/${e}`:e},isAbsolute(e){Lt(e,"path");return e.length>0&&e.charCodeAt(0)===Wt},join(...e){if(e.length===0){return"."}const t=[];for(let n=0;n<e.length;++n){const s=e[n];Lt(s,"path");if(s.length>0){t.push(s)}}if(t.length===0){return"."}return Nt.normalize(t.join("/"))},relative(e,t){Lt(e,"from");Lt(t,"to");if(e===t){return""}e=Nt.resolve(e);t=Nt.resolve(t);if(e===t){return""}const n=1;const s=e.length;const r=s-n;const o=1;const i=t.length-o;const a=r<i?r:i;let l=-1;let c=0;for(;c<a;c++){const f=e.charCodeAt(n+c);if(f!==t.charCodeAt(o+c)){break}else if(f===Wt){l=c}}if(c===a){if(i>a){if(t.charCodeAt(o+c)===Wt){return t.slice(o+c+1)}if(c===0){return t.slice(o+c)}}else if(r>a){if(e.charCodeAt(n+c)===Wt){l=c}else if(c===0){l=0}}}let u="";for(c=n+l+1;c<=s;++c){if(c===s||e.charCodeAt(c)===Wt){u+=u.length===0?"..":"/.."}}return`${u}${t.slice(o+l)}`},toNamespacedPath(e){return e},dirname(e){Lt(e,"path");if(e.length===0){return"."}const t=e.charCodeAt(0)===Wt;let n=-1;let s=true;for(let r=e.length-1;r>=1;--r){if(e.charCodeAt(r)===Wt){if(!s){n=r;break}}else{s=false}}if(n===-1){return t?"/":"."}if(t&&n===1){return"//"}return e.slice(0,n)},basename(e,t){if(t!==void 0){Lt(t,"suffix")}Lt(e,"path");let n=0;let s=-1;let r=true;let o;if(t!==void 0&&t.length>0&&t.length<=e.length){if(t===e){return""}let i=t.length-1;let a=-1;for(o=e.length-1;o>=0;--o){const l=e.charCodeAt(o);if(l===Wt){if(!r){n=o+1;break}}else{if(a===-1){r=false;a=o+1}if(i>=0){if(l===t.charCodeAt(i)){if(--i===-1){s=o}}else{i=-1;s=a}}}}if(n===s){s=a}else if(s===-1){s=e.length}return e.slice(n,s)}for(o=e.length-1;o>=0;--o){if(e.charCodeAt(o)===Wt){if(!r){n=o+1;break}}else if(s===-1){r=false;s=o+1}}if(s===-1){return""}return e.slice(n,s)},extname(e){Lt(e,"path");let t=-1;let n=0;let s=-1;let r=true;let o=0;for(let i=e.length-1;i>=0;--i){const a=e[i];if(a==="/"){if(!r){n=i+1;break}continue}if(s===-1){r=false;s=i+1}if(a==="."){if(t===-1){t=i}else if(o!==1){o=1}}else if(t!==-1){o=-1}}if(t===-1||s===-1||o===0||o===1&&t===s-1&&t===n+1){return""}return e.slice(t,s)},format:fh.bind(null,"/"),parse(e){Lt(e,"path");const t={root:"",dir:"",base:"",ext:"",name:""};if(e.length===0){return t}const n=e.charCodeAt(0)===Wt;let s;if(n){t.root="/";s=1}else{s=0}let r=-1;let o=0;let i=-1;let a=true;let l=e.length-1;let c=0;for(;l>=s;--l){const u=e.charCodeAt(l);if(u===Wt){if(!a){o=l+1;break}continue}if(i===-1){a=false;i=l+1}if(u===Vn){if(r===-1){r=l}else if(c!==1){c=1}}else if(r!==-1){c=-1}}if(i!==-1){const u=o===0&&n?1:o;if(r===-1||c===0||c===1&&r===i-1&&r===o+1){t.base=t.name=e.slice(u,i)}else{t.name=e.slice(u,r);t.base=e.slice(u,i);t.ext=e.slice(r,i)}}if(o>0){t.dir=e.slice(0,o-1)}else if(n){t.dir="/"}return t},sep:"/",delimiter:":",win32:null,posix:null};Nt.win32=qt.win32=qt;Nt.posix=qt.posix=Nt;const Uk=Me?qt.normalize:Nt.normalize;Me?qt.isAbsolute:Nt.isAbsolute;const Mk=Me?qt.join:Nt.join;const Vk=Me?qt.resolve:Nt.resolve;const Bk=Me?qt.relative:Nt.relative;const Ck=Me?qt.dirname:Nt.dirname;Me?qt.basename:Nt.basename;Me?qt.extname:Nt.extname;Me?qt.parse:Nt.parse;const wr=Me?qt.sep:Nt.sep;function zk(e){return e}class Wk{constructor(t,n){this.lastCache=void 0;this.lastArgKey=void 0;if(typeof t==="function"){this._fn=t;this._computeKey=zk}else{this._fn=n;this._computeKey=t.getCacheKey}}get(t){const n=this._computeKey(t);if(this.lastArgKey!==n){this.lastArgKey=n;this.lastCache=this._fn(t)}return this.lastCache}}class Kl{constructor(t){this.executor=t;this._didRun=false}get hasValue(){return this._didRun}get value(){if(!this._didRun){try{this._value=this.executor()}catch(t){this._error=t}finally{this._didRun=true}}if(this._error){throw this._error}return this._value}get rawValue(){return this._value}}var qr;(function(e){e[e["MAX_SAFE_SMALL_INTEGER"]=1073741824]="MAX_SAFE_SMALL_INTEGER";e[e["MIN_SAFE_SMALL_INTEGER"]=-1073741824]="MIN_SAFE_SMALL_INTEGER";e[e["MAX_UINT_8"]=255]="MAX_UINT_8";e[e["MAX_UINT_16"]=65535]="MAX_UINT_16";e[e["MAX_UINT_32"]=4294967295]="MAX_UINT_32";e[e["UNICODE_SUPPLEMENTARY_PLANE_BEGIN"]=65536]="UNICODE_SUPPLEMENTARY_PLANE_BEGIN"})(qr||(qr={}));function es(e){if(e<0){return 0}if(e>qr.MAX_UINT_32){return qr.MAX_UINT_32}return e|0}function Hk(e){return e.split(/\r\n|\r|\n/)}function qk(e,t){if(e<t){return-1}else if(e>t){return 1}else{return 0}}function Gk(e,t,n=0,s=e.length,r=0,o=t.length){for(;n<s&&r<o;n++,r++){const l=e.charCodeAt(n);const c=t.charCodeAt(r);if(l<c){return-1}else if(l>c){return 1}}const i=s-n;const a=o-r;if(i<a){return-1}else if(i>a){return 1}return 0}function hh(e,t,n=0,s=e.length,r=0,o=t.length){for(;n<s&&r<o;n++,r++){let l=e.charCodeAt(n);let c=t.charCodeAt(r);if(l===c){continue}if(l>=128||c>=128){return Gk(e.toLowerCase(),t.toLowerCase(),n,s,r,o)}if(jl(l)){l-=32}if(jl(c)){c-=32}const u=l-c;if(u===0){continue}return u}const i=s-n;const a=o-r;if(i<a){return-1}else if(i>a){return 1}return 0}function jl(e){return e>=Z.a&&e<=Z.z}function ph(e){return e>=Z.A&&e<=Z.Z}function Kk(e,t){return e.length===t.length&&hh(e,t)===0}function jk(e,t){const n=t.length;if(t.length>e.length){return false}return hh(e,t,0,n)===0}String.fromCharCode(Z.UTF8_BOM);var An;(function(e){e[e["Other"]=0]="Other";e[e["Prepend"]=1]="Prepend";e[e["CR"]=2]="CR";e[e["LF"]=3]="LF";e[e["Control"]=4]="Control";e[e["Extend"]=5]="Extend";e[e["Regional_Indicator"]=6]="Regional_Indicator";e[e["SpacingMark"]=7]="SpacingMark";e[e["L"]=8]="L";e[e["V"]=9]="V";e[e["T"]=10]="T";e[e["LV"]=11]="LV";e[e["LVT"]=12]="LVT";e[e["ZWJ"]=13]="ZWJ";e[e["Extended_Pictographic"]=14]="Extended_Pictographic"})(An||(An={}));class Bs{static{this._INSTANCE=null}static getInstance(){if(!Bs._INSTANCE){Bs._INSTANCE=new Bs}return Bs._INSTANCE}constructor(){this._data=Xk()}getGraphemeBreakType(t){if(t<32){if(t===Z.LineFeed){return An.LF}if(t===Z.CarriageReturn){return An.CR}return An.Control}if(t<127){return An.Other}const n=this._data;const s=n.length/3;let r=1;while(r<=s){if(t<n[3*r]){r=2*r}else if(t>n[3*r+1]){r=2*r+1}else{return n[3*r+2]}}return An.Other}}function Xk(){return JSON.parse("[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]")}var fi;(function(e){e[e["zwj"]=8205]="zwj";e[e["emojiVariantSelector"]=65039]="emojiVariantSelector";e[e["enclosingKeyCap"]=8419]="enclosingKeyCap";e[e["space"]=32]="space"})(fi||(fi={}));class Cs{static{this.ambiguousCharacterData=new Kl(()=>{return JSON.parse('{"_common":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,1523,96,8242,96,1370,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,118002,50,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,118003,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,118004,52,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,118005,53,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,118006,54,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,118007,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,118008,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,118009,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,117974,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,117975,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71913,67,71922,67,65315,67,8557,67,8450,67,8493,67,117976,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,117977,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,117978,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,117979,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,117980,71,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,117981,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,117983,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,117984,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,118001,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,117982,108,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,117985,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,117986,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,117987,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,118000,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,117988,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,117989,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,117990,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,117991,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,117992,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,117993,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,117994,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,117995,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71910,87,71919,87,117996,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,117997,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,117998,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,71909,90,66293,90,65338,90,8484,90,8488,90,117999,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65283,35,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],"_default":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"cs":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"de":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"es":[8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"fr":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"it":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"ja":[8211,45,8218,44,65281,33,8216,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65292,44,65297,49,65307,59],"ko":[8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"pl":[65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"pt-BR":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"qps-ploc":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"ru":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"tr":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],"zh-hans":[160,32,65374,126,8218,44,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65297,49],"zh-hant":[8211,45,65374,126,8218,44,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89]}')})}static{this.cache=new Wk({getCacheKey:JSON.stringify},t=>{function n(u){const f=new Map;for(let h=0;h<u.length;h+=2){f.set(u[h],u[h+1])}return f}function s(u,f){const h=new Map(u);for(const[p,d]of f){h.set(p,d)}return h}function r(u,f){if(!u){return f}const h=new Map;for(const[p,d]of u){if(f.has(p)){h.set(p,d)}}return h}const o=this.ambiguousCharacterData.value;let i=t.filter(u=>!u.startsWith("_")&&u in o);if(i.length===0){i=["_default"]}let a=void 0;for(const u of i){const f=n(o[u]);a=r(a,f)}const l=n(o["_common"]);const c=s(l,a);return new Cs(c)})}static getInstance(t){return Cs.cache.get(Array.from(t))}static{this._locales=new Kl(()=>Object.keys(Cs.ambiguousCharacterData.value).filter(t=>!t.startsWith("_")))}static getLocales(){return Cs._locales.value}constructor(t){this.confusableDictionary=t}isAmbiguous(t){return this.confusableDictionary.has(t)}containsAmbiguousCharacter(t){for(let n=0;n<t.length;n++){const s=t.codePointAt(n);if(typeof s==="number"&&this.isAmbiguous(s)){return true}}return false}getPrimaryConfusable(t){return this.confusableDictionary.get(t)}getConfusableCodePoints(){return new Set(this.confusableDictionary.keys())}}class zs{static getRawData(){return JSON.parse('{"_common":[11,12,13,127,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999],"cs":[173,8203,12288],"de":[173,8203,12288],"es":[8203,12288],"fr":[173,8203,12288],"it":[160,173,12288],"ja":[173],"ko":[173,12288],"pl":[173,8203,12288],"pt-BR":[173,8203,12288],"qps-ploc":[160,173,8203,12288],"ru":[173,12288],"tr":[160,173,8203,12288],"zh-hans":[160,173,8203,12288],"zh-hant":[173,12288]}')}static{this._data=void 0}static getData(){if(!this._data){this._data=new Set([...Object.values(zs.getRawData())].flat())}return this._data}static isInvisibleCharacter(t){return zs.getData().has(t)}static containsInvisibleCharacter(t){for(let n=0;n<t.length;n++){const s=t.codePointAt(n);if(typeof s==="number"&&(zs.isInvisibleCharacter(s)||s===fi.space)){return true}}return false}static get codePoints(){return zs.getData()}}function gn(e){return e===Z.Slash||e===Z.Backslash}function dh(e){return e.replace(/[\\/]/g,Nt.sep)}function Yk(e){if(e.indexOf("/")===-1){e=dh(e)}if(/^[a-zA-Z]:(\/|$)/.test(e)){e="/"+e}return e}function Xl(e,t=Nt.sep){if(!e){return""}const n=e.length;const s=e.charCodeAt(0);if(gn(s)){if(gn(e.charCodeAt(1))){if(!gn(e.charCodeAt(2))){let o=3;const i=o;for(;o<n;o++){if(gn(e.charCodeAt(o))){break}}if(i!==o&&!gn(e.charCodeAt(o+1))){o+=1;for(;o<n;o++){if(gn(e.charCodeAt(o))){return e.slice(0,o+1).replace(/[\\/]/g,t)}}}}}return t}else if(Zk(s)){if(e.charCodeAt(1)===Z.Colon){if(gn(e.charCodeAt(2))){return e.slice(0,2)+t}else{return e.slice(0,2)}}}let r=e.indexOf("://");if(r!==-1){r+=3;for(;r<n;r++){if(gn(e.charCodeAt(r))){return e.slice(0,r+1)}}}return""}function Yl(e,t,n,s=wr){if(e===t){return true}if(!e||!t){return false}if(t.length>e.length){return false}if(n){const r=jk(e,t);if(!r){return false}if(t.length===e.length){return true}let o=t.length;if(t.charAt(t.length-1)===s){o--}return e.charAt(o)===s}if(t.charAt(t.length-1)!==s){t+=s}return e.indexOf(t)===0}function Zk(e){return e>=Z.A&&e<=Z.Z||e>=Z.a&&e<=Z.z}var hi;(function(e){e[e["Uri"]=1]="Uri";e[e["Regexp"]=2]="Regexp";e[e["ScmResource"]=3]="ScmResource";e[e["ScmResourceGroup"]=4]="ScmResourceGroup";e[e["ScmProvider"]=5]="ScmProvider";e[e["CommentController"]=6]="CommentController";e[e["CommentThread"]=7]="CommentThread";e[e["CommentThreadInstance"]=8]="CommentThreadInstance";e[e["CommentThreadReply"]=9]="CommentThreadReply";e[e["CommentNode"]=10]="CommentNode";e[e["CommentThreadNode"]=11]="CommentThreadNode";e[e["TimelineActionContext"]=12]="TimelineActionContext";e[e["NotebookCellActionContext"]=13]="NotebookCellActionContext";e[e["NotebookActionContext"]=14]="NotebookActionContext";e[e["TerminalContext"]=15]="TerminalContext";e[e["TestItemContext"]=16]="TestItemContext";e[e["Date"]=17]="Date";e[e["TestMessageMenuArgs"]=18]="TestMessageMenuArgs";e[e["ChatViewContext"]=19]="ChatViewContext";e[e["LanguageModelToolResult"]=20]="LanguageModelToolResult";e[e["LanguageModelTextPart"]=21]="LanguageModelTextPart";e[e["LanguageModelPromptTsxPart"]=22]="LanguageModelPromptTsxPart";e[e["LanguageModelDataPart"]=23]="LanguageModelDataPart";e[e["LanguageModelExtraDataPart"]=24]="LanguageModelExtraDataPart"})(hi||(hi={}));const Jk=/^\w[\w\d+.-]*$/;const Qk=/^\//;const tT=/^\/\//;function eT(e,t){if(!e.scheme&&t){throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${e.authority}", path: "${e.path}", query: "${e.query}", fragment: "${e.fragment}"}`)}if(e.scheme&&!Jk.test(e.scheme)){throw new Error("[UriError]: Scheme contains illegal characters.")}if(e.path){if(e.authority){if(!Qk.test(e.path)){throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}}else{if(tT.test(e.path)){throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}}}}function nT(e,t){if(!e&&!t){return"file"}return e}function sT(e,t){switch(e){case"https":case"http":case"file":if(!t){t=Ae}else if(t[0]!==Ae){t=Ae+t}break}return t}const yt="";const Ae="/";const rT=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class jt{static isUri(t){if(t instanceof jt){return true}if(!t){return false}return typeof t.authority==="string"&&typeof t.fragment==="string"&&typeof t.path==="string"&&typeof t.query==="string"&&typeof t.scheme==="string"&&typeof t.fsPath==="string"&&typeof t.with==="function"&&typeof t.toString==="function"}constructor(t,n,s,r,o,i=false){if(typeof t==="object"){this.scheme=t.scheme||yt;this.authority=t.authority||yt;this.path=t.path||yt;this.query=t.query||yt;this.fragment=t.fragment||yt}else{this.scheme=nT(t,i);this.authority=n||yt;this.path=sT(this.scheme,s||yt);this.query=r||yt;this.fragment=o||yt;eT(this,i)}}get fsPath(){return Gr(this,false)}with(t){if(!t){return this}let{scheme:n,authority:s,path:r,query:o,fragment:i}=t;if(n===void 0){n=this.scheme}else if(n===null){n=yt}if(s===void 0){s=this.authority}else if(s===null){s=yt}if(r===void 0){r=this.path}else if(r===null){r=yt}if(o===void 0){o=this.query}else if(o===null){o=yt}if(i===void 0){i=this.fragment}else if(i===null){i=yt}if(n===this.scheme&&s===this.authority&&r===this.path&&o===this.query&&i===this.fragment){return this}return new ns(n,s,r,o,i)}static parse(t,n=false){const s=rT.exec(t);if(!s){return new ns(yt,yt,yt,yt,yt)}return new ns(s[2]||yt,ur(s[4]||yt),ur(s[5]||yt),ur(s[7]||yt),ur(s[9]||yt),n)}static file(t){let n=yt;if(Ts){t=t.replace(/\\/g,Ae)}if(t[0]===Ae&&t[1]===Ae){const s=t.indexOf(Ae,2);if(s===-1){n=t.substring(2);t=Ae}else{n=t.substring(2,s);t=t.substring(s)||Ae}}return new ns("file",n,t,yt,yt)}static from(t,n){const s=new ns(t.scheme,t.authority,t.path,t.query,t.fragment,n);return s}static joinPath(t,...n){if(!t.path){throw new Error(`[UriError]: cannot call joinPath on URI without path`)}let s;if(Ts&&t.scheme==="file"){s=jt.file(qt.join(Gr(t,true),...n)).path}else{s=Nt.join(t.path,...n)}return t.with({path:s})}toString(t=false){return pi(this,t)}toJSON(){return this}static revive(t){if(!t){return t}else if(t instanceof jt){return t}else{const n=new ns(t);n._formatted=t.external??null;n._fsPath=t._sep===mh?t.fsPath??null:null;return n}}[Symbol.for("debug.description")](){return`URI(${this.toString()})`}}const mh=Ts?1:void 0;class ns extends jt{constructor(){super(...arguments);this._formatted=null;this._fsPath=null}get fsPath(){if(!this._fsPath){this._fsPath=Gr(this,false)}return this._fsPath}toString(t=false){if(!t){if(!this._formatted){this._formatted=pi(this,false)}return this._formatted}else{return pi(this,true)}}toJSON(){const t={$mid:hi.Uri};if(this._fsPath){t.fsPath=this._fsPath;t._sep=mh}if(this._formatted){t.external=this._formatted}if(this.path){t.path=this.path}if(this.scheme){t.scheme=this.scheme}if(this.authority){t.authority=this.authority}if(this.query){t.query=this.query}if(this.fragment){t.fragment=this.fragment}return t}}const gh={[Z.Colon]:"%3A",[Z.Slash]:"%2F",[Z.QuestionMark]:"%3F",[Z.Hash]:"%23",[Z.OpenSquareBracket]:"%5B",[Z.CloseSquareBracket]:"%5D",[Z.AtSign]:"%40",[Z.ExclamationMark]:"%21",[Z.DollarSign]:"%24",[Z.Ampersand]:"%26",[Z.SingleQuote]:"%27",[Z.OpenParen]:"%28",[Z.CloseParen]:"%29",[Z.Asterisk]:"%2A",[Z.Plus]:"%2B",[Z.Comma]:"%2C",[Z.Semicolon]:"%3B",[Z.Equals]:"%3D",[Z.Space]:"%20"};function Zl(e,t,n){let s=void 0;let r=-1;for(let o=0;o<e.length;o++){const i=e.charCodeAt(o);if(i>=Z.a&&i<=Z.z||i>=Z.A&&i<=Z.Z||i>=Z.Digit0&&i<=Z.Digit9||i===Z.Dash||i===Z.Period||i===Z.Underline||i===Z.Tilde||t&&i===Z.Slash||n&&i===Z.OpenSquareBracket||n&&i===Z.CloseSquareBracket||n&&i===Z.Colon){if(r!==-1){s+=encodeURIComponent(e.substring(r,o));r=-1}if(s!==void 0){s+=e.charAt(o)}}else{if(s===void 0){s=e.substr(0,o)}const a=gh[i];if(a!==void 0){if(r!==-1){s+=encodeURIComponent(e.substring(r,o));r=-1}s+=a}else if(r===-1){r=o}}}if(r!==-1){s+=encodeURIComponent(e.substring(r))}return s!==void 0?s:e}function oT(e){let t=void 0;for(let n=0;n<e.length;n++){const s=e.charCodeAt(n);if(s===Z.Hash||s===Z.QuestionMark){if(t===void 0){t=e.substr(0,n)}t+=gh[s]}else{if(t!==void 0){t+=e[n]}}}return t!==void 0?t:e}function Gr(e,t){let n;if(e.authority&&e.path.length>1&&e.scheme==="file"){n=`//${e.authority}${e.path}`}else if(e.path.charCodeAt(0)===Z.Slash&&(e.path.charCodeAt(1)>=Z.A&&e.path.charCodeAt(1)<=Z.Z||e.path.charCodeAt(1)>=Z.a&&e.path.charCodeAt(1)<=Z.z)&&e.path.charCodeAt(2)===Z.Colon){if(!t){n=e.path[1].toLowerCase()+e.path.substr(2)}else{n=e.path.substr(1)}}else{n=e.path}if(Ts){n=n.replace(/\//g,"\\")}return n}function pi(e,t){const n=!t?Zl:oT;let s="";let{scheme:r,authority:o,path:i,query:a,fragment:l}=e;if(r){s+=r;s+=":"}if(o||r==="file"){s+=Ae;s+=Ae}if(o){let c=o.indexOf("@");if(c!==-1){const u=o.substr(0,c);o=o.substr(c+1);c=u.lastIndexOf(":");if(c===-1){s+=n(u,false,false)}else{s+=n(u.substr(0,c),false,false);s+=":";s+=n(u.substr(c+1),false,true)}s+="@"}o=o.toLowerCase();c=o.lastIndexOf(":");if(c===-1){s+=n(o,false,true)}else{s+=n(o.substr(0,c),false,true);s+=o.substr(c)}}if(i){if(i.length>=3&&i.charCodeAt(0)===Z.Slash&&i.charCodeAt(2)===Z.Colon){const c=i.charCodeAt(1);if(c>=Z.A&&c<=Z.Z){i=`/${String.fromCharCode(c+32)}:${i.substr(3)}`}}else if(i.length>=2&&i.charCodeAt(1)===Z.Colon){const c=i.charCodeAt(0);if(c>=Z.A&&c<=Z.Z){i=`${String.fromCharCode(c+32)}:${i.substr(2)}`}}s+=n(i,true,false)}if(a){s+="?";s+=n(a,false,false)}if(l){s+="#";s+=!t?Zl(l,false,false):l}return s}function yh(e){try{return decodeURIComponent(e)}catch{if(e.length>3){return e.substr(0,3)+yh(e.substr(3))}else{return e}}}const Jl=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function ur(e){if(!e.match(Jl)){return e}return e.replace(Jl,t=>yh(t))}var Gt;(function(e){e.inMemory="inmemory";e.vscode="vscode";e.internal="private";e.walkThrough="walkThrough";e.walkThroughSnippet="walkThroughSnippet";e.http="http";e.https="https";e.file="file";e.mailto="mailto";e.untitled="untitled";e.data="data";e.command="command";e.vscodeRemote="vscode-remote";e.vscodeRemoteResource="vscode-remote-resource";e.vscodeManagedRemoteResource="vscode-managed-remote-resource";e.vscodeUserData="vscode-userdata";e.vscodeCustomEditor="vscode-custom-editor";e.vscodeNotebookCell="vscode-notebook-cell";e.vscodeNotebookCellMetadata="vscode-notebook-cell-metadata";e.vscodeNotebookCellMetadataDiff="vscode-notebook-cell-metadata-diff";e.vscodeNotebookCellOutput="vscode-notebook-cell-output";e.vscodeNotebookCellOutputDiff="vscode-notebook-cell-output-diff";e.vscodeNotebookMetadata="vscode-notebook-metadata";e.vscodeInteractiveInput="vscode-interactive-input";e.vscodeSettings="vscode-settings";e.vscodeWorkspaceTrust="vscode-workspace-trust";e.vscodeTerminal="vscode-terminal";e.vscodeChatCodeBlock="vscode-chat-code-block";e.vscodeChatCodeCompareBlock="vscode-chat-code-compare-block";e.vscodeChatSesssion="vscode-chat-editor";e.webviewPanel="webview-panel";e.vscodeWebview="vscode-webview";e.extension="extension";e.vscodeFileResource="vscode-file";e.tmp="tmp";e.vsls="vsls";e.vscodeSourceControl="vscode-scm";e.commentsInput="comment";e.codeSetting="code-setting";e.outputChannel="output";e.accessibleView="accessible-view"})(Gt||(Gt={}));const iT="tkn";class aT{constructor(){this._hosts=Object.create(null);this._ports=Object.create(null);this._connectionTokens=Object.create(null);this._preferredWebSchema="http";this._delegate=null;this._serverRootPath="/"}setPreferredWebSchema(t){this._preferredWebSchema=t}setDelegate(t){this._delegate=t}setServerRootPath(t,n){this._serverRootPath=Nt.join(n??"/",cT(t))}getServerRootPath(){return this._serverRootPath}get _remoteResourcesPath(){return Nt.join(this._serverRootPath,Gt.vscodeRemoteResource)}set(t,n,s){this._hosts[t]=n;this._ports[t]=s}setConnectionToken(t,n){this._connectionTokens[t]=n}getPreferredWebSchema(){return this._preferredWebSchema}rewrite(t){if(this._delegate){try{return this._delegate(t)}catch(a){gr(a);return t}}const n=t.authority;let s=this._hosts[n];if(s&&s.indexOf(":")!==-1&&s.indexOf("[")===-1){s=`[${s}]`}const r=this._ports[n];const o=this._connectionTokens[n];let i=`path=${encodeURIComponent(t.path)}`;if(typeof o==="string"){i+=`&${iT}=${encodeURIComponent(o)}`}return jt.from({scheme:Ik?this._preferredWebSchema:Gt.vscodeRemoteResource,authority:`${s}:${r}`,path:this._remoteResourcesPath,query:i})}}const lT=new aT;function cT(e){return`${e.quality??"oss"}-${e.commit??"dev"}`}const uT="vscode-app";class Ks{constructor(){this.staticBrowserUris=new is;this.appResourcePathUrls=new Map}static{this.FALLBACK_AUTHORITY=uT}registerAppResourcePathUrl(t,n){this.appResourcePathUrls.set(t,n)}toUrl(t){let n=this.appResourcePathUrls.get(t);if(typeof n==="function"){n=n()}return new URL(n??t,globalThis.location?.href??import.meta.url).toString()}asBrowserUri(t){const n=this.toUri(t);return this.uriToBrowserUri(n)}uriToBrowserUri(t){if(t.scheme===Gt.vscodeRemote){return lT.rewrite(t)}if(t.scheme===Gt.file&&(Nk||Tk===`${Gt.vscodeFileResource}://${Ks.FALLBACK_AUTHORITY}`)){return t.with({scheme:Gt.vscodeFileResource,authority:t.authority||Ks.FALLBACK_AUTHORITY,query:null,fragment:null})}return this.staticBrowserUris.get(t)??t}asFileUri(t){const n=this.toUri(t);return this.uriToFileUri(n)}uriToFileUri(t){if(t.scheme===Gt.vscodeFileResource){return t.with({scheme:Gt.file,authority:t.authority!==Ks.FALLBACK_AUTHORITY?t.authority:null,query:null,fragment:null})}return t}toUri(t){if(jt.isUri(t)){return t}if(globalThis._VSCODE_FILE_ROOT){const n=globalThis._VSCODE_FILE_ROOT;if(/^\w[\w\d+.-]*:\/\//.test(n)){return jt.joinPath(jt.parse(n,true),t)}const s=Mk(n,t);return jt.file(s)}return jt.parse(this.toUrl(t))}registerStaticBrowserUri(t,n){this.staticBrowserUris.set(t,n);return Ya(()=>{if(this.staticBrowserUris.get(t)===n){this.staticBrowserUris.delete(t)}})}getRegisteredBrowserUris(){return this.staticBrowserUris.keys()}}new Ks;var Ql;(function(e){const t=new Map([["1",{"Cross-Origin-Opener-Policy":"same-origin"}],["2",{"Cross-Origin-Embedder-Policy":"require-corp"}],["3",{"Cross-Origin-Opener-Policy":"same-origin","Cross-Origin-Embedder-Policy":"require-corp"}]]);e.CoopAndCoep=Object.freeze(t.get("3"));const n="vscode-coi";function s(o){let i;if(typeof o==="string"){i=new URL(o).searchParams}else if(o instanceof URL){i=o.searchParams}else if(jt.isUri(o)){i=new URL(o.toString(true)).searchParams}const a=i?.get(n);if(!a){return void 0}return t.get(a)}e.getHeadersFromQuery=s;function r(o,i,a){if(!globalThis.crossOriginIsolated){return}const l=i&&a?"3":a?"2":"1";if(o instanceof URLSearchParams){o.set(n,l)}else{o[n]=l}}e.addSearchParam=r})(Ql||(Ql={}));function en(e){return Gr(e,true)}class fT{constructor(t){this._ignorePathCasing=t}compare(t,n,s=false){if(t===n){return 0}return qk(this.getComparisonKey(t,s),this.getComparisonKey(n,s))}isEqual(t,n,s=false){if(t===n){return true}if(!t||!n){return false}return this.getComparisonKey(t,s)===this.getComparisonKey(n,s)}getComparisonKey(t,n=false){return t.with({path:this._ignorePathCasing(t)?t.path.toLowerCase():void 0,fragment:n?null:void 0}).toString()}ignorePathCasing(t){return this._ignorePathCasing(t)}isEqualOrParent(t,n,s=false){if(t.scheme===n.scheme){if(t.scheme===Gt.file){return Yl(en(t),en(n),this._ignorePathCasing(t))&&t.query===n.query&&(s||t.fragment===n.fragment)}if(tc(t.authority,n.authority)){return Yl(t.path,n.path,this._ignorePathCasing(t),"/")&&t.query===n.query&&(s||t.fragment===n.fragment)}}return false}joinPath(t,...n){return jt.joinPath(t,...n)}basenameOrAuthority(t){return hT(t)||t.authority}basename(t){return Nt.basename(t.path)}extname(t){return Nt.extname(t.path)}dirname(t){if(t.path.length===0){return t}let n;if(t.scheme===Gt.file){n=jt.file(Ck(en(t))).path}else{n=Nt.dirname(t.path);if(t.authority&&n.length&&n.charCodeAt(0)!==Z.Slash){console.error(`dirname("${t.toString})) resulted in a relative path`);n="/"}}return t.with({path:n})}normalizePath(t){if(!t.path.length){return t}let n;if(t.scheme===Gt.file){n=jt.file(Uk(en(t))).path}else{n=Nt.normalize(t.path)}return t.with({path:n})}relativePath(t,n){if(t.scheme!==n.scheme||!tc(t.authority,n.authority)){return void 0}if(t.scheme===Gt.file){const o=Bk(en(t),en(n));return Ts?dh(o):o}let s=t.path||"/";const r=n.path||"/";if(this._ignorePathCasing(t)){let o=0;for(const i=Math.min(s.length,r.length);o<i;o++){if(s.charCodeAt(o)!==r.charCodeAt(o)){if(s.charAt(o).toLowerCase()!==r.charAt(o).toLowerCase()){break}}}s=r.substr(0,o)+s.substr(o)}return Nt.relative(s,r)}resolvePath(t,n){if(t.scheme===Gt.file){const s=jt.file(Vk(en(t),n));return t.with({authority:s.authority,path:s.path})}n=Yk(n);return t.with({path:Nt.resolve(t.path,n)})}isAbsolutePath(t){return!!t.path&&t.path[0]==="/"}isEqualAuthority(t,n){return t===n||t!==void 0&&n!==void 0&&Kk(t,n)}hasTrailingPathSeparator(t,n=wr){if(t.scheme===Gt.file){const s=en(t);return s.length>Xl(s).length&&s[s.length-1]===n}else{const s=t.path;return s.length>1&&s.charCodeAt(s.length-1)===Z.Slash&&!/^[a-zA-Z]:(\/$|\\$)/.test(t.fsPath)}}removeTrailingPathSeparator(t,n=wr){if(ec(t,n)){return t.with({path:t.path.substr(0,t.path.length-1)})}return t}addTrailingPathSeparator(t,n=wr){let s=false;if(t.scheme===Gt.file){const r=en(t);s=r!==void 0&&r.length===Xl(r).length&&r[r.length-1]===n}else{n="/";const r=t.path;s=r.length===1&&r.charCodeAt(r.length-1)===Z.Slash}if(!s&&!ec(t,n)){return t.with({path:t.path+"/"})}return t}}const ut=new fT(()=>false);ut.isEqual.bind(ut);ut.isEqualOrParent.bind(ut);ut.getComparisonKey.bind(ut);ut.basenameOrAuthority.bind(ut);const hT=ut.basename.bind(ut);ut.extname.bind(ut);ut.dirname.bind(ut);ut.joinPath.bind(ut);ut.normalizePath.bind(ut);ut.relativePath.bind(ut);ut.resolvePath.bind(ut);ut.isAbsolutePath.bind(ut);const tc=ut.isEqualAuthority.bind(ut);const ec=ut.hasTrailingPathSeparator.bind(ut);ut.removeTrailingPathSeparator.bind(ut);ut.addTrailingPathSeparator.bind(ut);var nc;(function(e){e.META_DATA_LABEL="label";e.META_DATA_DESCRIPTION="description";e.META_DATA_SIZE="size";e.META_DATA_MIME="mime";function t(n){const s=new Map;const r=n.path.substring(n.path.indexOf(";")+1,n.path.lastIndexOf(";"));r.split(";").forEach(i=>{const[a,l]=i.split(":");if(a&&l){s.set(a,l)}});const o=n.path.substring(0,n.path.indexOf(";"));if(o){s.set(e.META_DATA_MIME,o)}return s}e.parseMetaData=t})(nc||(nc={}));var sc;(function(e){e[e["Resolved"]=0]="Resolved";e[e["Rejected"]=1]="Rejected"})(sc||(sc={}));var rc;(function(e){async function t(s){let r=void 0;const o=await Promise.all(s.map(i=>i.then(a=>a,a=>{if(!r){r=a}return void 0})));if(typeof r!=="undefined"){throw r}return o}e.settled=t;function n(s){return new Promise(async(r,o)=>{try{await s(r,o)}catch(i){o(i)}})}e.withAsyncBody=n})(rc||(rc={}));var xe;(function(e){e[e["Initial"]=0]="Initial";e[e["DoneOK"]=1]="DoneOK";e[e["DoneError"]=2]="DoneError"})(xe||(xe={}));class de{static fromArray(t){return new de(n=>{n.emitMany(t)})}static fromPromise(t){return new de(async n=>{n.emitMany(await t)})}static fromPromisesResolveOrder(t){return new de(async n=>{await Promise.all(t.map(async s=>n.emitOne(await s)))})}static merge(t){return new de(async n=>{await Promise.all(t.map(async s=>{for await(const r of s){n.emitOne(r)}}))})}static{this.EMPTY=de.fromArray([])}constructor(t,n){this._state=xe.Initial;this._results=[];this._error=null;this._onReturn=n;this._onStateChanged=new Ce;queueMicrotask(async()=>{const s={emitOne:r=>this.emitOne(r),emitMany:r=>this.emitMany(r),reject:r=>this.reject(r)};try{await Promise.resolve(t(s));this.resolve()}catch(r){this.reject(r)}finally{s.emitOne=void 0;s.emitMany=void 0;s.reject=void 0}})}[Symbol.asyncIterator](){let t=0;return{next:async()=>{do{if(this._state===xe.DoneError){throw this._error}if(t<this._results.length){return{done:false,value:this._results[t++]}}if(this._state===xe.DoneOK){return{done:true,value:void 0}}await Cr.toPromise(this._onStateChanged.event)}while(true)},return:async()=>{this._onReturn?.();return{done:true,value:void 0}}}}static map(t,n){return new de(async s=>{for await(const r of t){s.emitOne(n(r))}})}map(t){return de.map(this,t)}static filter(t,n){return new de(async s=>{for await(const r of t){if(n(r)){s.emitOne(r)}}})}filter(t){return de.filter(this,t)}static coalesce(t){return de.filter(t,n=>!!n)}coalesce(){return de.coalesce(this)}static async toPromise(t){const n=[];for await(const s of t){n.push(s)}return n}toPromise(){return de.toPromise(this)}emitOne(t){if(this._state!==xe.Initial){return}this._results.push(t);this._onStateChanged.fire()}emitMany(t){if(this._state!==xe.Initial){return}this._results=this._results.concat(t);this._onStateChanged.fire()}resolve(){if(this._state!==xe.Initial){return}this._state=xe.DoneOK;this._onStateChanged.fire()}reject(t){if(this._state!==xe.Initial){return}this._state=xe.DoneError;this._error=t;this._onStateChanged.fire()}}class Ne{constructor(t,n){this.lineNumber=t;this.column=n}with(t=this.lineNumber,n=this.column){if(t===this.lineNumber&&n===this.column){return this}else{return new Ne(t,n)}}delta(t=0,n=0){return this.with(Math.max(1,this.lineNumber+t),Math.max(1,this.column+n))}equals(t){return Ne.equals(this,t)}static equals(t,n){if(!t&&!n){return true}return!!t&&!!n&&t.lineNumber===n.lineNumber&&t.column===n.column}isBefore(t){return Ne.isBefore(this,t)}static isBefore(t,n){if(t.lineNumber<n.lineNumber){return true}if(n.lineNumber<t.lineNumber){return false}return t.column<n.column}isBeforeOrEqual(t){return Ne.isBeforeOrEqual(this,t)}static isBeforeOrEqual(t,n){if(t.lineNumber<n.lineNumber){return true}if(n.lineNumber<t.lineNumber){return false}return t.column<=n.column}static compare(t,n){const s=t.lineNumber|0;const r=n.lineNumber|0;if(s===r){const o=t.column|0;const i=n.column|0;return o-i}return s-r}clone(){return new Ne(this.lineNumber,this.column)}toString(){return"("+this.lineNumber+","+this.column+")"}static lift(t){return new Ne(t.lineNumber,t.column)}static isIPosition(t){return t&&typeof t.lineNumber==="number"&&typeof t.column==="number"}toJSON(){return{lineNumber:this.lineNumber,column:this.column}}}class Ot{constructor(t,n,s,r){if(t>s||t===s&&n>r){this.startLineNumber=s;this.startColumn=r;this.endLineNumber=t;this.endColumn=n}else{this.startLineNumber=t;this.startColumn=n;this.endLineNumber=s;this.endColumn=r}}isEmpty(){return Ot.isEmpty(this)}static isEmpty(t){return t.startLineNumber===t.endLineNumber&&t.startColumn===t.endColumn}containsPosition(t){return Ot.containsPosition(this,t)}static containsPosition(t,n){if(n.lineNumber<t.startLineNumber||n.lineNumber>t.endLineNumber){return false}if(n.lineNumber===t.startLineNumber&&n.column<t.startColumn){return false}if(n.lineNumber===t.endLineNumber&&n.column>t.endColumn){return false}return true}static strictContainsPosition(t,n){if(n.lineNumber<t.startLineNumber||n.lineNumber>t.endLineNumber){return false}if(n.lineNumber===t.startLineNumber&&n.column<=t.startColumn){return false}if(n.lineNumber===t.endLineNumber&&n.column>=t.endColumn){return false}return true}containsRange(t){return Ot.containsRange(this,t)}static containsRange(t,n){if(n.startLineNumber<t.startLineNumber||n.endLineNumber<t.startLineNumber){return false}if(n.startLineNumber>t.endLineNumber||n.endLineNumber>t.endLineNumber){return false}if(n.startLineNumber===t.startLineNumber&&n.startColumn<t.startColumn){return false}if(n.endLineNumber===t.endLineNumber&&n.endColumn>t.endColumn){return false}return true}strictContainsRange(t){return Ot.strictContainsRange(this,t)}static strictContainsRange(t,n){if(n.startLineNumber<t.startLineNumber||n.endLineNumber<t.startLineNumber){return false}if(n.startLineNumber>t.endLineNumber||n.endLineNumber>t.endLineNumber){return false}if(n.startLineNumber===t.startLineNumber&&n.startColumn<=t.startColumn){return false}if(n.endLineNumber===t.endLineNumber&&n.endColumn>=t.endColumn){return false}return true}plusRange(t){return Ot.plusRange(this,t)}static plusRange(t,n){let s;let r;let o;let i;if(n.startLineNumber<t.startLineNumber){s=n.startLineNumber;r=n.startColumn}else if(n.startLineNumber===t.startLineNumber){s=n.startLineNumber;r=Math.min(n.startColumn,t.startColumn)}else{s=t.startLineNumber;r=t.startColumn}if(n.endLineNumber>t.endLineNumber){o=n.endLineNumber;i=n.endColumn}else if(n.endLineNumber===t.endLineNumber){o=n.endLineNumber;i=Math.max(n.endColumn,t.endColumn)}else{o=t.endLineNumber;i=t.endColumn}return new Ot(s,r,o,i)}intersectRanges(t){return Ot.intersectRanges(this,t)}static intersectRanges(t,n){let s=t.startLineNumber;let r=t.startColumn;let o=t.endLineNumber;let i=t.endColumn;const a=n.startLineNumber;const l=n.startColumn;const c=n.endLineNumber;const u=n.endColumn;if(s<a){s=a;r=l}else if(s===a){r=Math.max(r,l)}if(o>c){o=c;i=u}else if(o===c){i=Math.min(i,u)}if(s>o){return null}if(s===o&&r>i){return null}return new Ot(s,r,o,i)}equalsRange(t){return Ot.equalsRange(this,t)}static equalsRange(t,n){if(!t&&!n){return true}return!!t&&!!n&&t.startLineNumber===n.startLineNumber&&t.startColumn===n.startColumn&&t.endLineNumber===n.endLineNumber&&t.endColumn===n.endColumn}getEndPosition(){return Ot.getEndPosition(this)}static getEndPosition(t){return new Ne(t.endLineNumber,t.endColumn)}getStartPosition(){return Ot.getStartPosition(this)}static getStartPosition(t){return new Ne(t.startLineNumber,t.startColumn)}toString(){return"["+this.startLineNumber+","+this.startColumn+" -> "+this.endLineNumber+","+this.endColumn+"]"}setEndPosition(t,n){return new Ot(this.startLineNumber,this.startColumn,t,n)}setStartPosition(t,n){return new Ot(t,n,this.endLineNumber,this.endColumn)}collapseToStart(){return Ot.collapseToStart(this)}static collapseToStart(t){return new Ot(t.startLineNumber,t.startColumn,t.startLineNumber,t.startColumn)}collapseToEnd(){return Ot.collapseToEnd(this)}static collapseToEnd(t){return new Ot(t.endLineNumber,t.endColumn,t.endLineNumber,t.endColumn)}delta(t){return new Ot(this.startLineNumber+t,this.startColumn,this.endLineNumber+t,this.endColumn)}isSingleLine(){return this.startLineNumber===this.endLineNumber}static fromPositions(t,n=t){return new Ot(t.lineNumber,t.column,n.lineNumber,n.column)}static lift(t){if(!t){return null}return new Ot(t.startLineNumber,t.startColumn,t.endLineNumber,t.endColumn)}static isIRange(t){return t&&typeof t.startLineNumber==="number"&&typeof t.startColumn==="number"&&typeof t.endLineNumber==="number"&&typeof t.endColumn==="number"}static areIntersectingOrTouching(t,n){if(t.endLineNumber<n.startLineNumber||t.endLineNumber===n.startLineNumber&&t.endColumn<n.startColumn){return false}if(n.endLineNumber<t.startLineNumber||n.endLineNumber===t.startLineNumber&&n.endColumn<t.startColumn){return false}return true}static areIntersecting(t,n){if(t.endLineNumber<n.startLineNumber||t.endLineNumber===n.startLineNumber&&t.endColumn<=n.startColumn){return false}if(n.endLineNumber<t.startLineNumber||n.endLineNumber===t.startLineNumber&&n.endColumn<=t.startColumn){return false}return true}static areOnlyIntersecting(t,n){if(t.endLineNumber<n.startLineNumber-1||t.endLineNumber===n.startLineNumber&&t.endColumn<n.startColumn-1){return false}if(n.endLineNumber<t.startLineNumber-1||n.endLineNumber===t.startLineNumber&&n.endColumn<t.startColumn-1){return false}return true}static compareRangesUsingStarts(t,n){if(t&&n){const o=t.startLineNumber|0;const i=n.startLineNumber|0;if(o===i){const a=t.startColumn|0;const l=n.startColumn|0;if(a===l){const c=t.endLineNumber|0;const u=n.endLineNumber|0;if(c===u){const f=t.endColumn|0;const h=n.endColumn|0;return f-h}return c-u}return a-l}return o-i}const s=t?1:0;const r=n?1:0;return s-r}static compareRangesUsingEnds(t,n){if(t.endLineNumber===n.endLineNumber){if(t.endColumn===n.endColumn){if(t.startLineNumber===n.startLineNumber){return t.startColumn-n.startColumn}return t.startLineNumber-n.startLineNumber}return t.endColumn-n.endColumn}return t.endLineNumber-n.endLineNumber}static spansMultipleLines(t){return t.endLineNumber>t.startLineNumber}toJSON(){return this}}const pT="`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?";function dT(e=""){let t="(-?\\d*\\.\\d\\w*)|([^";for(const n of pT){if(e.indexOf(n)>=0){continue}t+="\\"+n}t+="\\s]+)";return new RegExp(t,"g")}const mT=dT();function bh(e){let t=mT;if(e&&e instanceof RegExp){if(!e.global){let n="g";if(e.ignoreCase){n+="i"}if(e.multiline){n+="m"}if(e.unicode){n+="u"}t=new RegExp(e.source,n)}else{t=e}}t.lastIndex=0;return t}const _h=new ck;_h.unshift({maxLen:1e3,windowSize:15,timeBudget:150});function wh(e,t,n,s,r){t=bh(t);if(!r){r=Br.first(_h)}if(n.length>r.maxLen){let c=e-r.maxLen/2;if(c<0){c=0}else{s+=c}n=n.substring(c,e+r.maxLen/2);return wh(e,t,n,s,r)}const o=Date.now();const i=e-1-s;let a=-1;let l=null;for(let c=1;;c++){if(Date.now()-o>=r.timeBudget){break}const u=i-r.windowSize*c;t.lastIndex=Math.max(0,u);const f=gT(t,n,i,a);if(!f&&l){break}l=f;if(u<=0){break}a=u}if(l){const c={word:l[0],startColumn:s+1+l.index,endColumn:s+1+l.index+l[0].length};t.lastIndex=0;return c}return null}function gT(e,t,n,s){let r;while(r=e.exec(t)){const o=r.index||0;if(o<=n&&e.lastIndex>=n){return r}else if(s>0&&o>s){return null}}return null}class yT{constructor(t){this.values=t;this.prefixSum=new Uint32Array(t.length);this.prefixSumValidIndex=new Int32Array(1);this.prefixSumValidIndex[0]=-1}getCount(){return this.values.length}insertValues(t,n){t=es(t);const s=this.values;const r=this.prefixSum;const o=n.length;if(o===0){return false}this.values=new Uint32Array(s.length+o);this.values.set(s.subarray(0,t),0);this.values.set(s.subarray(t),t+o);this.values.set(n,t);if(t-1<this.prefixSumValidIndex[0]){this.prefixSumValidIndex[0]=t-1}this.prefixSum=new Uint32Array(this.values.length);if(this.prefixSumValidIndex[0]>=0){this.prefixSum.set(r.subarray(0,this.prefixSumValidIndex[0]+1))}return true}setValue(t,n){t=es(t);n=es(n);if(this.values[t]===n){return false}this.values[t]=n;if(t-1<this.prefixSumValidIndex[0]){this.prefixSumValidIndex[0]=t-1}return true}removeValues(t,n){t=es(t);n=es(n);const s=this.values;const r=this.prefixSum;if(t>=s.length){return false}const o=s.length-t;if(n>=o){n=o}if(n===0){return false}this.values=new Uint32Array(s.length-n);this.values.set(s.subarray(0,t),0);this.values.set(s.subarray(t+n),t);this.prefixSum=new Uint32Array(this.values.length);if(t-1<this.prefixSumValidIndex[0]){this.prefixSumValidIndex[0]=t-1}if(this.prefixSumValidIndex[0]>=0){this.prefixSum.set(r.subarray(0,this.prefixSumValidIndex[0]+1))}return true}getTotalSum(){if(this.values.length===0){return 0}return this._getPrefixSum(this.values.length-1)}getPrefixSum(t){if(t<0){return 0}t=es(t);return this._getPrefixSum(t)}_getPrefixSum(t){if(t<=this.prefixSumValidIndex[0]){return this.prefixSum[t]}let n=this.prefixSumValidIndex[0]+1;if(n===0){this.prefixSum[0]=this.values[0];n++}if(t>=this.values.length){t=this.values.length-1}for(let s=n;s<=t;s++){this.prefixSum[s]=this.prefixSum[s-1]+this.values[s]}this.prefixSumValidIndex[0]=Math.max(this.prefixSumValidIndex[0],t);return this.prefixSum[t]}getIndexOf(t){t=Math.floor(t);this.getTotalSum();let n=0;let s=this.values.length-1;let r=0;let o=0;let i=0;while(n<=s){r=n+(s-n)/2|0;o=this.prefixSum[r];i=o-this.values[r];if(t<i){s=r-1}else if(t>=o){n=r+1}else{break}}return new bT(r,t-i)}}class bT{constructor(t,n){this.index=t;this.remainder=n;this._prefixSumIndexOfResultBrand=void 0;this.index=t;this.remainder=n}}class _T{constructor(t,n,s,r){this._uri=t;this._lines=n;this._eol=s;this._versionId=r;this._lineStarts=null;this._cachedTextValue=null}dispose(){this._lines.length=0}get version(){return this._versionId}getText(){if(this._cachedTextValue===null){this._cachedTextValue=this._lines.join(this._eol)}return this._cachedTextValue}onEvents(t){if(t.eol&&t.eol!==this._eol){this._eol=t.eol;this._lineStarts=null}const n=t.changes;for(const s of n){this._acceptDeleteRange(s.range);this._acceptInsertText(new Ne(s.range.startLineNumber,s.range.startColumn),s.text)}this._versionId=t.versionId;this._cachedTextValue=null}_ensureLineStarts(){if(!this._lineStarts){const t=this._eol.length;const n=this._lines.length;const s=new Uint32Array(n);for(let r=0;r<n;r++){s[r]=this._lines[r].length+t}this._lineStarts=new yT(s)}}_setLineText(t,n){this._lines[t]=n;if(this._lineStarts){this._lineStarts.setValue(t,this._lines[t].length+this._eol.length)}}_acceptDeleteRange(t){if(t.startLineNumber===t.endLineNumber){if(t.startColumn===t.endColumn){return}this._setLineText(t.startLineNumber-1,this._lines[t.startLineNumber-1].substring(0,t.startColumn-1)+this._lines[t.startLineNumber-1].substring(t.endColumn-1));return}this._setLineText(t.startLineNumber-1,this._lines[t.startLineNumber-1].substring(0,t.startColumn-1)+this._lines[t.endLineNumber-1].substring(t.endColumn-1));this._lines.splice(t.startLineNumber,t.endLineNumber-t.startLineNumber);if(this._lineStarts){this._lineStarts.removeValues(t.startLineNumber,t.endLineNumber-t.startLineNumber)}}_acceptInsertText(t,n){if(n.length===0){return}const s=Hk(n);if(s.length===1){this._setLineText(t.lineNumber-1,this._lines[t.lineNumber-1].substring(0,t.column-1)+s[0]+this._lines[t.lineNumber-1].substring(t.column-1));return}s[s.length-1]+=this._lines[t.lineNumber-1].substring(t.column-1);this._setLineText(t.lineNumber-1,this._lines[t.lineNumber-1].substring(0,t.column-1)+s[0]);const r=new Uint32Array(s.length-1);for(let o=1;o<s.length;o++){this._lines.splice(t.lineNumber+o-1,0,s[o]);r[o-1]=s[o].length+this._eol.length}if(this._lineStarts){this._lineStarts.insertValues(t.lineNumber,r)}}}const wT="workerTextModelSync";class NT{constructor(){this._models=Object.create(null)}bindToServer(t){t.setChannel(wT,this)}getModel(t){return this._models[t]}getModels(){const t=[];Object.keys(this._models).forEach(n=>t.push(this._models[n]));return t}$acceptNewModel(t){this._models[t.url]=new IT(jt.parse(t.url),t.lines,t.EOL,t.versionId)}$acceptModelChanged(t,n){if(!this._models[t]){return}const s=this._models[t];s.onEvents(n)}$acceptRemovedModel(t){if(!this._models[t]){return}delete this._models[t]}}class IT extends _T{get uri(){return this._uri}get eol(){return this._eol}getValue(){return this.getText()}findMatches(t){const n=[];for(let s=0;s<this._lines.length;s++){const r=this._lines[s];const o=this.offsetAt(new Ne(s+1,1));const i=r.matchAll(t);for(const a of i){if(a.index||a.index===0){a.index=a.index+o}n.push(a)}}return n}getLinesContent(){return this._lines.slice(0)}getLineCount(){return this._lines.length}getLineContent(t){return this._lines[t-1]}getWordAtPosition(t,n){const s=wh(t.column,bh(n),this._lines[t.lineNumber-1],0);if(s){return new Ot(t.lineNumber,s.startColumn,t.lineNumber,s.endColumn)}return null}getWordUntilPosition(t,n){const s=this.getWordAtPosition(t,n);if(!s){return{word:"",startColumn:t.column,endColumn:t.column}}return{word:this._lines[t.lineNumber-1].substring(s.startColumn-1,t.column-1),startColumn:s.startColumn,endColumn:t.column}}words(t){const n=this._lines;const s=this._wordenize.bind(this);let r=0;let o="";let i=0;let a=[];return{*[Symbol.iterator](){while(true){if(i<a.length){const l=o.substring(a[i].start,a[i].end);i+=1;yield l}else{if(r<n.length){o=n[r];a=s(o,t);i=0;r+=1}else{break}}}}}}getLineWords(t,n){const s=this._lines[t-1];const r=this._wordenize(s,n);const o=[];for(const i of r){o.push({word:s.substring(i.start,i.end),startColumn:i.start+1,endColumn:i.end+1})}return o}_wordenize(t,n){const s=[];let r;n.lastIndex=0;while(r=n.exec(t)){if(r[0].length===0){break}s.push({start:r.index,end:r.index+r[0].length})}return s}getValueInRange(t){t=this._validateRange(t);if(t.startLineNumber===t.endLineNumber){return this._lines[t.startLineNumber-1].substring(t.startColumn-1,t.endColumn-1)}const n=this._eol;const s=t.startLineNumber-1;const r=t.endLineNumber-1;const o=[];o.push(this._lines[s].substring(t.startColumn-1));for(let i=s+1;i<r;i++){o.push(this._lines[i])}o.push(this._lines[r].substring(0,t.endColumn-1));return o.join(n)}offsetAt(t){t=this._validatePosition(t);this._ensureLineStarts();return this._lineStarts.getPrefixSum(t.lineNumber-2)+(t.column-1)}positionAt(t){t=Math.floor(t);t=Math.max(0,t);this._ensureLineStarts();const n=this._lineStarts.getIndexOf(t);const s=this._lines[n.index].length;return{lineNumber:1+n.index,column:1+Math.min(n.remainder,s)}}_validateRange(t){const n=this._validatePosition({lineNumber:t.startLineNumber,column:t.startColumn});const s=this._validatePosition({lineNumber:t.endLineNumber,column:t.endColumn});if(n.lineNumber!==t.startLineNumber||n.column!==t.startColumn||s.lineNumber!==t.endLineNumber||s.column!==t.endColumn){return{startLineNumber:n.lineNumber,startColumn:n.column,endLineNumber:s.lineNumber,endColumn:s.column}}return t}_validatePosition(t){if(!Ne.isIPosition(t)){throw new Error("bad position")}let{lineNumber:n,column:s}=t;let r=false;if(n<1){n=1;s=1;r=true}else if(n>this._lines.length){n=this._lines.length;s=this._lines[n-1].length+1;r=true}else{const o=this._lines[n-1].length+1;if(s<1){s=1;r=true}else if(s>o){s=o;r=true}}if(!r){return t}else{return{lineNumber:n,column:s}}}}function kT(e){return new Be(e)}class Be{static{this.expectedRelativeConfidence=.2}static{this.positiveConfidenceCorrectionBucket1=.05}static{this.positiveConfidenceCorrectionBucket2=.025}static{this.negativeConfidenceCorrection=.5}constructor(t){this._workerTextModelSyncServer=new NT;this._loadFailed=false;this.modelIdToCoreId=new Map;this._host=Vr.getChannel(t);this._workerTextModelSyncServer.bindToServer(t)}async $detectLanguage(t,n,s,r){const o=[];const i=[];const a=new ho;const l=this.getTextForDetection(t);if(!l){return}const c=async()=>{for await(const f of this.detectLanguagesImpl(l)){if(!this.modelIdToCoreId.has(f.languageId)){this.modelIdToCoreId.set(f.languageId,await this._host.$getLanguageId(f.languageId))}const h=this.modelIdToCoreId.get(f.languageId);if(h&&(!r?.length||r.includes(h))){o.push(h);i.push(f.confidence)}}a.stop();if(o.length){this._host.$sendTelemetryEvent(o,i,a.elapsed());return o[0]}return void 0};const u=await c();if(u){return u}return void 0}getTextForDetection(t){const n=this._workerTextModelSyncServer.getModel(t);if(!n){return}const s=n.positionAt(1e4);const r=n.getValueInRange({startColumn:1,startLineNumber:1,endColumn:s.column,endLineNumber:s.lineNumber});return r}async getModelOperations(){if(this._modelOperations){return this._modelOperations}this._modelOperations=new GI({modelJsonLoaderFunc:async()=>{const t=await fetch(await this._host.$getModelJsonUri());try{const n=await t.json();return n}catch(n){const s=`Failed to parse model JSON.`;throw new Error(s)}},weightsLoaderFunc:async()=>{const t=await fetch(await this._host.$getWeightsUri());const n=await t.arrayBuffer();return n}});return this._modelOperations}adjustLanguageConfidence(t){switch(t.languageId){case"js":case"html":case"json":case"ts":case"css":case"py":case"xml":case"php":t.confidence+=Be.positiveConfidenceCorrectionBucket1;break;case"cpp":case"sh":case"java":case"cs":case"c":t.confidence+=Be.positiveConfidenceCorrectionBucket2;break;case"bat":case"ini":case"makefile":case"sql":case"csv":case"toml":t.confidence-=Be.negativeConfidenceCorrection;break}return t}async*detectLanguagesImpl(t){if(this._loadFailed){return}let n;try{n=await this.getModelOperations()}catch(i){console.log(i);this._loadFailed=true;return}let s;try{s=await n.runModel(t)}catch(i){console.warn(i)}if(!s||s.length===0||s[0].confidence<Be.expectedRelativeConfidence){return}const r=this.adjustLanguageConfidence(s[0]);if(r.confidence<Be.expectedRelativeConfidence){return}const o=[r];for(let i of s){if(i===r){continue}i=this.adjustLanguageConfidence(i);const a=o[o.length-1];if(a.confidence-i.confidence>=Be.expectedRelativeConfidence){while(o.length){yield o.shift()}if(i.confidence>Be.expectedRelativeConfidence){o.push(i);continue}return}else{if(i.confidence>Be.expectedRelativeConfidence){o.push(i);continue}return}}}}const So="default";const TT="$initialize";var ae;(function(e){e[e["Request"]=0]="Request";e[e["Reply"]=1]="Reply";e[e["SubscribeEvent"]=2]="SubscribeEvent";e[e["Event"]=3]="Event";e[e["UnsubscribeEvent"]=4]="UnsubscribeEvent"})(ae||(ae={}));class ST{constructor(t,n,s,r,o){this.vsWorker=t;this.req=n;this.channel=s;this.method=r;this.args=o;this.type=ae.Request}}class oc{constructor(t,n,s,r){this.vsWorker=t;this.seq=n;this.res=s;this.err=r;this.type=ae.Reply}}class ET{constructor(t,n,s,r,o){this.vsWorker=t;this.req=n;this.channel=s;this.eventName=r;this.arg=o;this.type=ae.SubscribeEvent}}class vT{constructor(t,n,s){this.vsWorker=t;this.req=n;this.event=s;this.type=ae.Event}}class xT{constructor(t,n){this.vsWorker=t;this.req=n;this.type=ae.UnsubscribeEvent}}class $T{constructor(t){this._workerId=-1;this._handler=t;this._lastSentReq=0;this._pendingReplies=Object.create(null);this._pendingEmitters=new Map;this._pendingEvents=new Map}setWorkerId(t){this._workerId=t}sendMessage(t,n,s){const r=String(++this._lastSentReq);return new Promise((o,i)=>{this._pendingReplies[r]={resolve:o,reject:i};this._send(new ST(this._workerId,r,t,n,s))})}listen(t,n,s){let r=null;const o=new Ce({onWillAddFirstListener:()=>{r=String(++this._lastSentReq);this._pendingEmitters.set(r,o);this._send(new ET(this._workerId,r,t,n,s))},onDidRemoveLastListener:()=>{this._pendingEmitters.delete(r);this._send(new xT(this._workerId,r));r=null}});return o.event}handleMessage(t){if(!t||!t.vsWorker){return}if(this._workerId!==-1&&t.vsWorker!==this._workerId){return}this._handleMessage(t)}createProxyToRemoteChannel(t,n){const s={get:(r,o)=>{if(typeof o==="string"&&!r[o]){if(Ih(o)){r[o]=i=>{return this.listen(t,o,i)}}else if(Nh(o)){r[o]=this.listen(t,o,void 0)}else if(o.charCodeAt(0)===Z.DollarSign){r[o]=async(...i)=>{await n?.();return this.sendMessage(t,o,i)}}}return r[o]}};return new Proxy(Object.create(null),s)}_handleMessage(t){switch(t.type){case ae.Reply:return this._handleReplyMessage(t);case ae.Request:return this._handleRequestMessage(t);case ae.SubscribeEvent:return this._handleSubscribeEventMessage(t);case ae.Event:return this._handleEventMessage(t);case ae.UnsubscribeEvent:return this._handleUnsubscribeEventMessage(t)}}_handleReplyMessage(t){if(!this._pendingReplies[t.seq]){console.warn("Got reply to unknown seq");return}const n=this._pendingReplies[t.seq];delete this._pendingReplies[t.seq];if(t.err){let s=t.err;if(t.err.$isError){s=new Error;s.name=t.err.name;s.message=t.err.message;s.stack=t.err.stack}n.reject(s);return}n.resolve(t.res)}_handleRequestMessage(t){const n=t.req;const s=this._handler.handleMessage(t.channel,t.method,t.args);s.then(r=>{this._send(new oc(this._workerId,n,r,void 0))},r=>{if(r.detail instanceof Error){r.detail=ii(r.detail)}this._send(new oc(this._workerId,n,void 0,ii(r)))})}_handleSubscribeEventMessage(t){const n=t.req;const s=this._handler.handleEvent(t.channel,t.eventName,t.arg)(r=>{this._send(new vT(this._workerId,n,r))});this._pendingEvents.set(n,s)}_handleEventMessage(t){if(!this._pendingEmitters.has(t.req)){console.warn("Got event for unknown req");return}this._pendingEmitters.get(t.req).fire(t.event)}_handleUnsubscribeEventMessage(t){if(!this._pendingEvents.has(t.req)){console.warn("Got unsubscribe for unknown req");return}this._pendingEvents.get(t.req).dispose();this._pendingEvents.delete(t.req)}_send(t){const n=[];if(t.type===ae.Request){for(let s=0;s<t.args.length;s++){if(t.args[s]instanceof ArrayBuffer){n.push(t.args[s])}}}else if(t.type===ae.Reply){if(t.res instanceof ArrayBuffer){n.push(t.res)}}this._handler.sendMessage(t,n)}}function Nh(e){return e[0]==="o"&&e[1]==="n"&&ph(e.charCodeAt(2))}function Ih(e){return/^onDynamic/.test(e)&&ph(e.charCodeAt(9))}class AT{constructor(t,n){this._localChannels=new Map;this._remoteChannels=new Map;this._protocol=new $T({sendMessage:(s,r)=>{t(s,r)},handleMessage:(s,r,o)=>this._handleMessage(s,r,o),handleEvent:(s,r,o)=>this._handleEvent(s,r,o)});this.requestHandler=n(this)}onmessage(t){this._protocol.handleMessage(t)}_handleMessage(t,n,s){if(t===So&&n===TT){return this.initialize(s[0])}const r=t===So?this.requestHandler:this._localChannels.get(t);if(!r){return Promise.reject(new Error(`Missing channel ${t} on worker thread`))}if(typeof r[n]!=="function"){return Promise.reject(new Error(`Missing method ${n} on worker thread channel ${t}`))}try{return Promise.resolve(r[n].apply(r,s))}catch(o){return Promise.reject(o)}}_handleEvent(t,n,s){const r=t===So?this.requestHandler:this._localChannels.get(t);if(!r){throw new Error(`Missing channel ${t} on worker thread`)}if(Ih(n)){const o=r[n].call(r,s);if(typeof o!=="function"){throw new Error(`Missing dynamic event ${n} on request handler.`)}return o}if(Nh(n)){const o=r[n];if(typeof o!=="function"){throw new Error(`Missing event ${n} on request handler.`)}return o}throw new Error(`Malformed event name ${n}`)}setChannel(t,n){this._localChannels.set(t,n)}getChannel(t){if(!this._remoteChannels.has(t)){const n=this._protocol.createProxyToRemoteChannel(t);this._remoteChannels.set(t,n)}return this._remoteChannels.get(t)}async initialize(t){this._protocol.setWorkerId(t)}}let di=false;function DT(e){if(di){throw new Error("WebWorker already initialized!")}di=true;const t=new AT(n=>globalThis.postMessage(n),n=>e(n));globalThis.onmessage=n=>{t.onmessage(n.data)};return t}function RT(e){globalThis.onmessage=t=>{if(!di){DT(e)}}}RT(kT);
