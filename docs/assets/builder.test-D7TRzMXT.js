const e="import { expect, test } from 'bun:test'\nimport { from } from '@buckdb/isomorphic'\nimport { expectSQL } from './utils.test'\nconst xx = from('duckdb_functions()')\nconst xz = from('duckdb_types()')\n// const clean = (a: string) => a.replaceAll(/\\n/g, '').replaceAll(/\\s+/g, ' ')\n// const cexpect = (a: any, b: any) => expect(clean(a.toSql())).toEqual(clean('FROM duckdb_functions() ' + b))\ntest('order', () => {\n    // console.log('==>', xx.select(({ comment, description, database_oid, ...rest }) => rest).toSql())\n    // return\n    expectSQL(\n        xx.select(`database_name`)\n            .orderBy('description')\n            .limit(10),\n        'SELECT database_name ORDER BY description LIMIT 10',\n    )\n    expectSQL(\n        xx.select().orderBy(['database_name'], ['description', 'ASC NULLS LAST']),\n        'SELECT * ORDER BY database_name, description ASC NULLS LAST',\n    )\n\n    expectSQL(\n        xx.select(({ comment, description, ...rest }) => ({ lol: 13, ...rest, description: 'xxx' })),\n        `SELECT 13 AS lol, * EXCLUDE(comment, description), 'xxx' AS description`,\n    )\n    // // expectSQL(                                         SELECT  * EXCLUDE(comment, description)\n\n    expectSQL(\n        xx.select(({ comment, description, ...rest }) => rest),\n        'SELECT * EXCLUDE(comment, description)',\n    )\n})\ntest.only('setop', () => {\n    expectSQL(\n        xz.select('type_name')\n            .unionAll(\n                xx.select(`database_name`),\n            ).toSql(),\n        `FROM ( FROM duckdb_types() SELECT type_name ) UNION ALL (FROM duckdb_functions() SELECT database_name)`)\n})\n";export{e as default};
