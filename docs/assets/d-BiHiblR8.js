const n="import { DArrayField, DBoolField, DMetaField, DNumericComp, DNumericField, DVarcharComp, DVarcharField } from '.buck/types'\nimport * as t from '.buck/types'\nimport { Buck, from } from '@buckdb/isomorphic'\nimport { FromPlain, ToPlain } from '../src/deep-map'\n\nconst staff = {\n    _id: '5830bf4042bcf30004f4e27b',\n    firstName: 'Sam',\n    lastName: 'Picques',\n}\nconst pack = {\n    _id: '587fcaded4872100046ce8fd',\n    title: 'Mariage',\n    category: 'Mariage',\n    type: 'technic',\n\n    tags: ['Wedding', 'Bridal'],\n    tagIds: [12, 42],\n    itemType: 'package',\n    shopID: 'c3e1dab7-5b69-4378-a384-229192fce2e7',\n    price: {\n        name: 'Mariage',\n        value: 65,\n        _id: '587fcaded4872100046ce8fe',\n    },\n    staff,\n    taxRate: 20,\n    quantity: 1,\n    discounts: [\n        {\n            type: 'relative',\n            value: 10,\n            name: 'student discount',\n        },\n    ],\n    items: [\n        {\n            _id: '586b633370fd7800041155be',\n            title: 'Coupe',\n            type: 'haircut',\n            price: {\n                value: 19,\n                name: 'Court',\n            },\n            staff,\n            taxRate: 20,\n            quantity: 1,\n            discounts: [],\n            itemType: 'service',\n        },\n        {\n            _id: '586b634770fd7800041155c3',\n            title: 'Shampoing',\n            type: 'shampoo',\n            price: {\n                value: 7,\n                name: '',\n            },\n            staff,\n            taxRate: 20,\n            quantity: 1,\n            discounts: [],\n            itemType: 'service',\n        },\n        {\n            _id: '586b636270fd7800041155c6',\n            title: 'Brushing',\n            type: 'brushing',\n            price: {\n                name: 'CarrÃ©',\n                value: 15,\n            },\n            staff,\n            taxRate: 20,\n            quantity: 1,\n            discounts: [],\n            itemType: 'service',\n        },\n        {\n            _id: '587fc68ed4872100046ccbe2',\n            title: 'Couleur',\n            type: 'colouring',\n            price: {\n                name: 'Couleur',\n                value: 20,\n            },\n            staff,\n            taxRate: 20,\n            quantity: 1,\n            discounts: [],\n            itemType: 'service',\n        },\n    ],\n}\n\nconsole.log(new Date())\nconst db = Buck('../local.duckdb')\nconst q = await db.create('items', { replace: true }).as(pack).execute()\nawait db.from('items').select((e, D) => ({ ...e, version: D.Json({ version: 42 }), tagmap: D.map_from_entries([{ k: 12, v: 'Wedding' }, { k: 42, v: 'Bridal' }]) }))\n    .copyTo('demo.parquet').execute()\n// console.log(q.toSql())\n// const resp = await q.execute()\n// const rz\n//     = await db.from('items')\n//         .select(e => ({ name: `___${e._id}___${e.title}__` }))\n//         .execute()\n// // console.log(rz)\n\n// // const resp =\n// //     await db\n// //         .from('duckdb_extensions()')\n// //         .execute()\n// // const q = db.create('testjson', { replace: true }).as()\n\n// const resp2 = await db.from('tjson').select(e => e.id === 'ol').execute()\n// console.log({ resp2 })\n\n// // console.log({ resp })\n\n\n// const og =\n//     [\n//         { name: 'contains', args: ['varchar', 'array'] },\n//         { name: 'array_contains', args: ['varchar', 'array'] },\n//     ]\n";export{n as default};
