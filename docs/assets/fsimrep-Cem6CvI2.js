const e="import { Buck, from } from '@buckdb/isomorphic'\n\n\nconst q = Buck('file:///Volumes/dev/fsimrep').with(\n    db => ({\n        repo_pairs: db.from('starbase/*.parquet', 'a')\n            .join('starlite.parquet', 'r1').using('repo')\n            .join('starbase/*.parquet', 'b').on(({ a, b }) => a.login === b.login && a.repo !== b.repo)\n            .join('starlite.parquet', 'r2').on(e => e.b.repo === e.r2.repo)\n            .select(({ r2, a, b, r1 }) => ({\n                login: a.login,\n                date: a.date,\n                repo_a: a.repo,\n                repo_b: b.repo,\n                repo_a_stars: r1.c,\n                repo_b_stars: r2.c\n            }))\n            .where(({ a }) => a.repo === 'yamadashy/repomix')\n    }),\n    db => ({\n        similarity_metrics: db.from('repo_pairs')\n            .select((e, D) => ({\n                repo_a: e.repo_a,\n                repo_b: e.repo_b,\n                common_users: D.count(D.Distinct(e.login)),\n                total_stars: e.repo_b_stars,\n                earliest_common_star: D.min(e.date),\n                latest_common_star: D.max(e.date),\n                jaccard_similarity: D.count(D.Distinct(e.login)) / (e.repo_b_stars ?? null)\n            }))\n            .groupBy('repo_a', 'repo_b', 'repo_b_stars')\n            .having((e, D) => D.count(D.Distinct(e.login)) >= 5)\n    }),\n    db => ({\n        results: db.from('similarity_metrics')\n            .select((e, D) => ({\n                ...e,\n                full_name: e.repo_b,\n                similarity_score: e.jaccard_similarity.round(3),\n            }))\n            .where(e => e.jaccard_similarity > 0)\n            .orderBy('jaccard_similarity', 'DESC')\n    })\n\n)\n    .from('results')\n    .leftJoin('repos.parquet', 'x').using('full_name')\n    .select((e, D) => ({\n        full_name: 'https://github.com/' + e.full_name,\n        similarity_score: e.results.similarity_score.round(3),\n        common_users: e.common_users,\n        total_stars: e.stargazers_count,\n        desc: e.description ?? '',\n        topics: e.topics ?? [],\n    }))\n    .orderBy('similarity_score', 'DESC')\n    .limit(100)\n\nawait q.show()";export{e as default};
