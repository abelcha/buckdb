const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/main.views-B-wJhocx.js","assets/main-C81a-F38.css"])))=>i.map(i=>d[i]);
(function s(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload")){return}for(const e of document.querySelectorAll('link[rel="modulepreload"]')){d(e)}new MutationObserver(e=>{for(const t of e){if(t.type!=="childList"){continue}for(const r of t.addedNodes){if(r.tagName==="LINK"&&r.rel==="modulepreload")d(r)}}}).observe(document,{childList:true,subtree:true});function a(e){const t={};if(e.integrity)t.integrity=e.integrity;if(e.referrerPolicy)t.referrerPolicy=e.referrerPolicy;if(e.crossOrigin==="use-credentials")t.credentials="include";else if(e.crossOrigin==="anonymous")t.credentials="omit";else t.credentials="same-origin";return t}function d(e){if(e.ep)return;e.ep=true;const t=a(e);fetch(e.href,t)}})();const g="modulepreload";const P=function(s){return"/"+s};const p={};const v=function s(l,a,d){let e=Promise.resolve();if(a&&a.length>0){let r=function(o){return Promise.all(o.map(i=>Promise.resolve(i).then(u=>({status:"fulfilled",value:u}),u=>({status:"rejected",reason:u}))))};document.getElementsByTagName("link");const n=document.querySelector("meta[property=csp-nonce]");const m=n?.nonce||n?.getAttribute("nonce");e=r(a.map(o=>{o=P(o);if(o in p)return;p[o]=true;const i=o.endsWith(".css");const u=i?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${o}"]${u}`)){return}const c=document.createElement("link");c.rel=i?"stylesheet":g;if(!i){c.as="script"}c.crossOrigin="";c.href=o;if(m){c.setAttribute("nonce",m)}document.head.appendChild(c);if(i){return new Promise((h,y)=>{c.addEventListener("load",h);c.addEventListener("error",()=>y(new Error(`Unable to preload CSS for ${o}`)))})}}))}function t(r){const n=new Event("vite:preloadError",{cancelable:true});n.payload=r;window.dispatchEvent(n);if(!n.defaultPrevented){throw r}}return e.then(r=>{for(const n of r||[]){if(n.status!=="rejected")continue;t(n.reason)}return l().catch(t)})};const w=new URLSearchParams(window.location.search);const f=w.get("locale");const E={};if(f!=null){const s=E[f];if(s!=null){await s()}else{console.error(`Unknown locale ${f}`)}}v(()=>import("./main.views-B-wJhocx.js").then(s=>s.m),true?__vite__mapDeps([0,1]):void 0);export{v as _};
